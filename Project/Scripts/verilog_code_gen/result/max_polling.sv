module max_polling(                               
     input wire clk,                                             
     input wire rst,                                             
     input wire load,                                             
     input wire input_valid,                                             
     input wire sof,                                             
     output wire o_sof,                                             
     output wire load_success,                                             
     output wire output_valid,                                      
     output wire [31:0] d_out[63:0],    
     input wire [31:0] d_in[63:0]                    
); 
wire output_valid_affter_conv;                                             
wire [31:0] _0_addbus_[63:0];    
conv2d #("weight/max_polling/0_0.txt", 2, 0, 31, 31) conv2d_0_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(load_success),
	.output_valid(output_valid_affter_conv),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_0_addbus_[0])
);
conv2d #("weight/max_polling/0_1.txt", 2, 0, 31, 31) conv2d_0_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_0_addbus_[1])
);
conv2d #("weight/max_polling/0_2.txt", 2, 0, 31, 31) conv2d_0_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_0_addbus_[2])
);
conv2d #("weight/max_polling/0_3.txt", 2, 0, 31, 31) conv2d_0_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_0_addbus_[3])
);
conv2d #("weight/max_polling/0_4.txt", 2, 0, 31, 31) conv2d_0_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_0_addbus_[4])
);
conv2d #("weight/max_polling/0_5.txt", 2, 0, 31, 31) conv2d_0_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_0_addbus_[5])
);
conv2d #("weight/max_polling/0_6.txt", 2, 0, 31, 31) conv2d_0_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_0_addbus_[6])
);
conv2d #("weight/max_polling/0_7.txt", 2, 0, 31, 31) conv2d_0_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_0_addbus_[7])
);
conv2d #("weight/max_polling/0_8.txt", 2, 0, 31, 31) conv2d_0_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_0_addbus_[8])
);
conv2d #("weight/max_polling/0_9.txt", 2, 0, 31, 31) conv2d_0_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_0_addbus_[9])
);
conv2d #("weight/max_polling/0_10.txt", 2, 0, 31, 31) conv2d_0_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_0_addbus_[10])
);
conv2d #("weight/max_polling/0_11.txt", 2, 0, 31, 31) conv2d_0_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_0_addbus_[11])
);
conv2d #("weight/max_polling/0_12.txt", 2, 0, 31, 31) conv2d_0_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_0_addbus_[12])
);
conv2d #("weight/max_polling/0_13.txt", 2, 0, 31, 31) conv2d_0_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_0_addbus_[13])
);
conv2d #("weight/max_polling/0_14.txt", 2, 0, 31, 31) conv2d_0_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_0_addbus_[14])
);
conv2d #("weight/max_polling/0_15.txt", 2, 0, 31, 31) conv2d_0_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_0_addbus_[15])
);
conv2d #("weight/max_polling/0_16.txt", 2, 0, 31, 31) conv2d_0_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_0_addbus_[16])
);
conv2d #("weight/max_polling/0_17.txt", 2, 0, 31, 31) conv2d_0_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_0_addbus_[17])
);
conv2d #("weight/max_polling/0_18.txt", 2, 0, 31, 31) conv2d_0_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_0_addbus_[18])
);
conv2d #("weight/max_polling/0_19.txt", 2, 0, 31, 31) conv2d_0_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_0_addbus_[19])
);
conv2d #("weight/max_polling/0_20.txt", 2, 0, 31, 31) conv2d_0_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_0_addbus_[20])
);
conv2d #("weight/max_polling/0_21.txt", 2, 0, 31, 31) conv2d_0_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_0_addbus_[21])
);
conv2d #("weight/max_polling/0_22.txt", 2, 0, 31, 31) conv2d_0_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_0_addbus_[22])
);
conv2d #("weight/max_polling/0_23.txt", 2, 0, 31, 31) conv2d_0_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_0_addbus_[23])
);
conv2d #("weight/max_polling/0_24.txt", 2, 0, 31, 31) conv2d_0_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_0_addbus_[24])
);
conv2d #("weight/max_polling/0_25.txt", 2, 0, 31, 31) conv2d_0_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_0_addbus_[25])
);
conv2d #("weight/max_polling/0_26.txt", 2, 0, 31, 31) conv2d_0_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_0_addbus_[26])
);
conv2d #("weight/max_polling/0_27.txt", 2, 0, 31, 31) conv2d_0_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_0_addbus_[27])
);
conv2d #("weight/max_polling/0_28.txt", 2, 0, 31, 31) conv2d_0_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_0_addbus_[28])
);
conv2d #("weight/max_polling/0_29.txt", 2, 0, 31, 31) conv2d_0_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_0_addbus_[29])
);
conv2d #("weight/max_polling/0_30.txt", 2, 0, 31, 31) conv2d_0_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_0_addbus_[30])
);
conv2d #("weight/max_polling/0_31.txt", 2, 0, 31, 31) conv2d_0_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_0_addbus_[31])
);
conv2d #("weight/max_polling/0_32.txt", 2, 0, 31, 31) conv2d_0_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_0_addbus_[32])
);
conv2d #("weight/max_polling/0_33.txt", 2, 0, 31, 31) conv2d_0_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_0_addbus_[33])
);
conv2d #("weight/max_polling/0_34.txt", 2, 0, 31, 31) conv2d_0_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_0_addbus_[34])
);
conv2d #("weight/max_polling/0_35.txt", 2, 0, 31, 31) conv2d_0_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_0_addbus_[35])
);
conv2d #("weight/max_polling/0_36.txt", 2, 0, 31, 31) conv2d_0_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_0_addbus_[36])
);
conv2d #("weight/max_polling/0_37.txt", 2, 0, 31, 31) conv2d_0_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_0_addbus_[37])
);
conv2d #("weight/max_polling/0_38.txt", 2, 0, 31, 31) conv2d_0_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_0_addbus_[38])
);
conv2d #("weight/max_polling/0_39.txt", 2, 0, 31, 31) conv2d_0_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_0_addbus_[39])
);
conv2d #("weight/max_polling/0_40.txt", 2, 0, 31, 31) conv2d_0_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_0_addbus_[40])
);
conv2d #("weight/max_polling/0_41.txt", 2, 0, 31, 31) conv2d_0_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_0_addbus_[41])
);
conv2d #("weight/max_polling/0_42.txt", 2, 0, 31, 31) conv2d_0_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_0_addbus_[42])
);
conv2d #("weight/max_polling/0_43.txt", 2, 0, 31, 31) conv2d_0_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_0_addbus_[43])
);
conv2d #("weight/max_polling/0_44.txt", 2, 0, 31, 31) conv2d_0_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_0_addbus_[44])
);
conv2d #("weight/max_polling/0_45.txt", 2, 0, 31, 31) conv2d_0_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_0_addbus_[45])
);
conv2d #("weight/max_polling/0_46.txt", 2, 0, 31, 31) conv2d_0_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_0_addbus_[46])
);
conv2d #("weight/max_polling/0_47.txt", 2, 0, 31, 31) conv2d_0_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_0_addbus_[47])
);
conv2d #("weight/max_polling/0_48.txt", 2, 0, 31, 31) conv2d_0_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_0_addbus_[48])
);
conv2d #("weight/max_polling/0_49.txt", 2, 0, 31, 31) conv2d_0_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_0_addbus_[49])
);
conv2d #("weight/max_polling/0_50.txt", 2, 0, 31, 31) conv2d_0_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_0_addbus_[50])
);
conv2d #("weight/max_polling/0_51.txt", 2, 0, 31, 31) conv2d_0_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_0_addbus_[51])
);
conv2d #("weight/max_polling/0_52.txt", 2, 0, 31, 31) conv2d_0_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_0_addbus_[52])
);
conv2d #("weight/max_polling/0_53.txt", 2, 0, 31, 31) conv2d_0_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_0_addbus_[53])
);
conv2d #("weight/max_polling/0_54.txt", 2, 0, 31, 31) conv2d_0_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_0_addbus_[54])
);
conv2d #("weight/max_polling/0_55.txt", 2, 0, 31, 31) conv2d_0_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_0_addbus_[55])
);
conv2d #("weight/max_polling/0_56.txt", 2, 0, 31, 31) conv2d_0_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_0_addbus_[56])
);
conv2d #("weight/max_polling/0_57.txt", 2, 0, 31, 31) conv2d_0_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_0_addbus_[57])
);
conv2d #("weight/max_polling/0_58.txt", 2, 0, 31, 31) conv2d_0_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_0_addbus_[58])
);
conv2d #("weight/max_polling/0_59.txt", 2, 0, 31, 31) conv2d_0_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_0_addbus_[59])
);
conv2d #("weight/max_polling/0_60.txt", 2, 0, 31, 31) conv2d_0_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_0_addbus_[60])
);
conv2d #("weight/max_polling/0_61.txt", 2, 0, 31, 31) conv2d_0_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_0_addbus_[61])
);
conv2d #("weight/max_polling/0_62.txt", 2, 0, 31, 31) conv2d_0_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_0_addbus_[62])
);
conv2d #("weight/max_polling/0_63.txt", 2, 0, 31, 31) conv2d_0_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_0_addbus_[63])
);
sum_64 #(15) sum_0( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .output_valid(output_valid), 
        .o_sof(o_sof), 
        .data_out(d_out[0]), 
        .data_in_0(_0_addbus_[0]), 
        .data_in_1(_0_addbus_[1]), 
        .data_in_2(_0_addbus_[2]), 
        .data_in_3(_0_addbus_[3]), 
        .data_in_4(_0_addbus_[4]), 
        .data_in_5(_0_addbus_[5]), 
        .data_in_6(_0_addbus_[6]), 
        .data_in_7(_0_addbus_[7]), 
        .data_in_8(_0_addbus_[8]), 
        .data_in_9(_0_addbus_[9]), 
        .data_in_10(_0_addbus_[10]), 
        .data_in_11(_0_addbus_[11]), 
        .data_in_12(_0_addbus_[12]), 
        .data_in_13(_0_addbus_[13]), 
        .data_in_14(_0_addbus_[14]), 
        .data_in_15(_0_addbus_[15]), 
        .data_in_16(_0_addbus_[16]), 
        .data_in_17(_0_addbus_[17]), 
        .data_in_18(_0_addbus_[18]), 
        .data_in_19(_0_addbus_[19]), 
        .data_in_20(_0_addbus_[20]), 
        .data_in_21(_0_addbus_[21]), 
        .data_in_22(_0_addbus_[22]), 
        .data_in_23(_0_addbus_[23]), 
        .data_in_24(_0_addbus_[24]), 
        .data_in_25(_0_addbus_[25]), 
        .data_in_26(_0_addbus_[26]), 
        .data_in_27(_0_addbus_[27]), 
        .data_in_28(_0_addbus_[28]), 
        .data_in_29(_0_addbus_[29]), 
        .data_in_30(_0_addbus_[30]), 
        .data_in_31(_0_addbus_[31]), 
        .data_in_32(_0_addbus_[32]), 
        .data_in_33(_0_addbus_[33]), 
        .data_in_34(_0_addbus_[34]), 
        .data_in_35(_0_addbus_[35]), 
        .data_in_36(_0_addbus_[36]), 
        .data_in_37(_0_addbus_[37]), 
        .data_in_38(_0_addbus_[38]), 
        .data_in_39(_0_addbus_[39]), 
        .data_in_40(_0_addbus_[40]), 
        .data_in_41(_0_addbus_[41]), 
        .data_in_42(_0_addbus_[42]), 
        .data_in_43(_0_addbus_[43]), 
        .data_in_44(_0_addbus_[44]), 
        .data_in_45(_0_addbus_[45]), 
        .data_in_46(_0_addbus_[46]), 
        .data_in_47(_0_addbus_[47]), 
        .data_in_48(_0_addbus_[48]), 
        .data_in_49(_0_addbus_[49]), 
        .data_in_50(_0_addbus_[50]), 
        .data_in_51(_0_addbus_[51]), 
        .data_in_52(_0_addbus_[52]), 
        .data_in_53(_0_addbus_[53]), 
        .data_in_54(_0_addbus_[54]), 
        .data_in_55(_0_addbus_[55]), 
        .data_in_56(_0_addbus_[56]), 
        .data_in_57(_0_addbus_[57]), 
        .data_in_58(_0_addbus_[58]), 
        .data_in_59(_0_addbus_[59]), 
        .data_in_60(_0_addbus_[60]), 
        .data_in_61(_0_addbus_[61]), 
        .data_in_62(_0_addbus_[62]), 
        .data_in_63(_0_addbus_[63]) 
); 
wire [31:0] _1_addbus_[63:0];    
conv2d #("weight/max_polling/1_0.txt", 2, 0, 31, 31) conv2d_1_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_1_addbus_[0])
);
conv2d #("weight/max_polling/1_1.txt", 2, 0, 31, 31) conv2d_1_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_1_addbus_[1])
);
conv2d #("weight/max_polling/1_2.txt", 2, 0, 31, 31) conv2d_1_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_1_addbus_[2])
);
conv2d #("weight/max_polling/1_3.txt", 2, 0, 31, 31) conv2d_1_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_1_addbus_[3])
);
conv2d #("weight/max_polling/1_4.txt", 2, 0, 31, 31) conv2d_1_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_1_addbus_[4])
);
conv2d #("weight/max_polling/1_5.txt", 2, 0, 31, 31) conv2d_1_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_1_addbus_[5])
);
conv2d #("weight/max_polling/1_6.txt", 2, 0, 31, 31) conv2d_1_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_1_addbus_[6])
);
conv2d #("weight/max_polling/1_7.txt", 2, 0, 31, 31) conv2d_1_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_1_addbus_[7])
);
conv2d #("weight/max_polling/1_8.txt", 2, 0, 31, 31) conv2d_1_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_1_addbus_[8])
);
conv2d #("weight/max_polling/1_9.txt", 2, 0, 31, 31) conv2d_1_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_1_addbus_[9])
);
conv2d #("weight/max_polling/1_10.txt", 2, 0, 31, 31) conv2d_1_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_1_addbus_[10])
);
conv2d #("weight/max_polling/1_11.txt", 2, 0, 31, 31) conv2d_1_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_1_addbus_[11])
);
conv2d #("weight/max_polling/1_12.txt", 2, 0, 31, 31) conv2d_1_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_1_addbus_[12])
);
conv2d #("weight/max_polling/1_13.txt", 2, 0, 31, 31) conv2d_1_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_1_addbus_[13])
);
conv2d #("weight/max_polling/1_14.txt", 2, 0, 31, 31) conv2d_1_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_1_addbus_[14])
);
conv2d #("weight/max_polling/1_15.txt", 2, 0, 31, 31) conv2d_1_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_1_addbus_[15])
);
conv2d #("weight/max_polling/1_16.txt", 2, 0, 31, 31) conv2d_1_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_1_addbus_[16])
);
conv2d #("weight/max_polling/1_17.txt", 2, 0, 31, 31) conv2d_1_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_1_addbus_[17])
);
conv2d #("weight/max_polling/1_18.txt", 2, 0, 31, 31) conv2d_1_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_1_addbus_[18])
);
conv2d #("weight/max_polling/1_19.txt", 2, 0, 31, 31) conv2d_1_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_1_addbus_[19])
);
conv2d #("weight/max_polling/1_20.txt", 2, 0, 31, 31) conv2d_1_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_1_addbus_[20])
);
conv2d #("weight/max_polling/1_21.txt", 2, 0, 31, 31) conv2d_1_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_1_addbus_[21])
);
conv2d #("weight/max_polling/1_22.txt", 2, 0, 31, 31) conv2d_1_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_1_addbus_[22])
);
conv2d #("weight/max_polling/1_23.txt", 2, 0, 31, 31) conv2d_1_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_1_addbus_[23])
);
conv2d #("weight/max_polling/1_24.txt", 2, 0, 31, 31) conv2d_1_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_1_addbus_[24])
);
conv2d #("weight/max_polling/1_25.txt", 2, 0, 31, 31) conv2d_1_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_1_addbus_[25])
);
conv2d #("weight/max_polling/1_26.txt", 2, 0, 31, 31) conv2d_1_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_1_addbus_[26])
);
conv2d #("weight/max_polling/1_27.txt", 2, 0, 31, 31) conv2d_1_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_1_addbus_[27])
);
conv2d #("weight/max_polling/1_28.txt", 2, 0, 31, 31) conv2d_1_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_1_addbus_[28])
);
conv2d #("weight/max_polling/1_29.txt", 2, 0, 31, 31) conv2d_1_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_1_addbus_[29])
);
conv2d #("weight/max_polling/1_30.txt", 2, 0, 31, 31) conv2d_1_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_1_addbus_[30])
);
conv2d #("weight/max_polling/1_31.txt", 2, 0, 31, 31) conv2d_1_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_1_addbus_[31])
);
conv2d #("weight/max_polling/1_32.txt", 2, 0, 31, 31) conv2d_1_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_1_addbus_[32])
);
conv2d #("weight/max_polling/1_33.txt", 2, 0, 31, 31) conv2d_1_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_1_addbus_[33])
);
conv2d #("weight/max_polling/1_34.txt", 2, 0, 31, 31) conv2d_1_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_1_addbus_[34])
);
conv2d #("weight/max_polling/1_35.txt", 2, 0, 31, 31) conv2d_1_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_1_addbus_[35])
);
conv2d #("weight/max_polling/1_36.txt", 2, 0, 31, 31) conv2d_1_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_1_addbus_[36])
);
conv2d #("weight/max_polling/1_37.txt", 2, 0, 31, 31) conv2d_1_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_1_addbus_[37])
);
conv2d #("weight/max_polling/1_38.txt", 2, 0, 31, 31) conv2d_1_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_1_addbus_[38])
);
conv2d #("weight/max_polling/1_39.txt", 2, 0, 31, 31) conv2d_1_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_1_addbus_[39])
);
conv2d #("weight/max_polling/1_40.txt", 2, 0, 31, 31) conv2d_1_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_1_addbus_[40])
);
conv2d #("weight/max_polling/1_41.txt", 2, 0, 31, 31) conv2d_1_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_1_addbus_[41])
);
conv2d #("weight/max_polling/1_42.txt", 2, 0, 31, 31) conv2d_1_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_1_addbus_[42])
);
conv2d #("weight/max_polling/1_43.txt", 2, 0, 31, 31) conv2d_1_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_1_addbus_[43])
);
conv2d #("weight/max_polling/1_44.txt", 2, 0, 31, 31) conv2d_1_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_1_addbus_[44])
);
conv2d #("weight/max_polling/1_45.txt", 2, 0, 31, 31) conv2d_1_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_1_addbus_[45])
);
conv2d #("weight/max_polling/1_46.txt", 2, 0, 31, 31) conv2d_1_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_1_addbus_[46])
);
conv2d #("weight/max_polling/1_47.txt", 2, 0, 31, 31) conv2d_1_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_1_addbus_[47])
);
conv2d #("weight/max_polling/1_48.txt", 2, 0, 31, 31) conv2d_1_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_1_addbus_[48])
);
conv2d #("weight/max_polling/1_49.txt", 2, 0, 31, 31) conv2d_1_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_1_addbus_[49])
);
conv2d #("weight/max_polling/1_50.txt", 2, 0, 31, 31) conv2d_1_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_1_addbus_[50])
);
conv2d #("weight/max_polling/1_51.txt", 2, 0, 31, 31) conv2d_1_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_1_addbus_[51])
);
conv2d #("weight/max_polling/1_52.txt", 2, 0, 31, 31) conv2d_1_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_1_addbus_[52])
);
conv2d #("weight/max_polling/1_53.txt", 2, 0, 31, 31) conv2d_1_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_1_addbus_[53])
);
conv2d #("weight/max_polling/1_54.txt", 2, 0, 31, 31) conv2d_1_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_1_addbus_[54])
);
conv2d #("weight/max_polling/1_55.txt", 2, 0, 31, 31) conv2d_1_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_1_addbus_[55])
);
conv2d #("weight/max_polling/1_56.txt", 2, 0, 31, 31) conv2d_1_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_1_addbus_[56])
);
conv2d #("weight/max_polling/1_57.txt", 2, 0, 31, 31) conv2d_1_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_1_addbus_[57])
);
conv2d #("weight/max_polling/1_58.txt", 2, 0, 31, 31) conv2d_1_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_1_addbus_[58])
);
conv2d #("weight/max_polling/1_59.txt", 2, 0, 31, 31) conv2d_1_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_1_addbus_[59])
);
conv2d #("weight/max_polling/1_60.txt", 2, 0, 31, 31) conv2d_1_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_1_addbus_[60])
);
conv2d #("weight/max_polling/1_61.txt", 2, 0, 31, 31) conv2d_1_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_1_addbus_[61])
);
conv2d #("weight/max_polling/1_62.txt", 2, 0, 31, 31) conv2d_1_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_1_addbus_[62])
);
conv2d #("weight/max_polling/1_63.txt", 2, 0, 31, 31) conv2d_1_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_1_addbus_[63])
);
sum_64 #(15) sum_1( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[1]), 
        .data_in_0(_1_addbus_[0]), 
        .data_in_1(_1_addbus_[1]), 
        .data_in_2(_1_addbus_[2]), 
        .data_in_3(_1_addbus_[3]), 
        .data_in_4(_1_addbus_[4]), 
        .data_in_5(_1_addbus_[5]), 
        .data_in_6(_1_addbus_[6]), 
        .data_in_7(_1_addbus_[7]), 
        .data_in_8(_1_addbus_[8]), 
        .data_in_9(_1_addbus_[9]), 
        .data_in_10(_1_addbus_[10]), 
        .data_in_11(_1_addbus_[11]), 
        .data_in_12(_1_addbus_[12]), 
        .data_in_13(_1_addbus_[13]), 
        .data_in_14(_1_addbus_[14]), 
        .data_in_15(_1_addbus_[15]), 
        .data_in_16(_1_addbus_[16]), 
        .data_in_17(_1_addbus_[17]), 
        .data_in_18(_1_addbus_[18]), 
        .data_in_19(_1_addbus_[19]), 
        .data_in_20(_1_addbus_[20]), 
        .data_in_21(_1_addbus_[21]), 
        .data_in_22(_1_addbus_[22]), 
        .data_in_23(_1_addbus_[23]), 
        .data_in_24(_1_addbus_[24]), 
        .data_in_25(_1_addbus_[25]), 
        .data_in_26(_1_addbus_[26]), 
        .data_in_27(_1_addbus_[27]), 
        .data_in_28(_1_addbus_[28]), 
        .data_in_29(_1_addbus_[29]), 
        .data_in_30(_1_addbus_[30]), 
        .data_in_31(_1_addbus_[31]), 
        .data_in_32(_1_addbus_[32]), 
        .data_in_33(_1_addbus_[33]), 
        .data_in_34(_1_addbus_[34]), 
        .data_in_35(_1_addbus_[35]), 
        .data_in_36(_1_addbus_[36]), 
        .data_in_37(_1_addbus_[37]), 
        .data_in_38(_1_addbus_[38]), 
        .data_in_39(_1_addbus_[39]), 
        .data_in_40(_1_addbus_[40]), 
        .data_in_41(_1_addbus_[41]), 
        .data_in_42(_1_addbus_[42]), 
        .data_in_43(_1_addbus_[43]), 
        .data_in_44(_1_addbus_[44]), 
        .data_in_45(_1_addbus_[45]), 
        .data_in_46(_1_addbus_[46]), 
        .data_in_47(_1_addbus_[47]), 
        .data_in_48(_1_addbus_[48]), 
        .data_in_49(_1_addbus_[49]), 
        .data_in_50(_1_addbus_[50]), 
        .data_in_51(_1_addbus_[51]), 
        .data_in_52(_1_addbus_[52]), 
        .data_in_53(_1_addbus_[53]), 
        .data_in_54(_1_addbus_[54]), 
        .data_in_55(_1_addbus_[55]), 
        .data_in_56(_1_addbus_[56]), 
        .data_in_57(_1_addbus_[57]), 
        .data_in_58(_1_addbus_[58]), 
        .data_in_59(_1_addbus_[59]), 
        .data_in_60(_1_addbus_[60]), 
        .data_in_61(_1_addbus_[61]), 
        .data_in_62(_1_addbus_[62]), 
        .data_in_63(_1_addbus_[63]) 
); 
wire [31:0] _2_addbus_[63:0];    
conv2d #("weight/max_polling/2_0.txt", 2, 0, 31, 31) conv2d_2_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_2_addbus_[0])
);
conv2d #("weight/max_polling/2_1.txt", 2, 0, 31, 31) conv2d_2_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_2_addbus_[1])
);
conv2d #("weight/max_polling/2_2.txt", 2, 0, 31, 31) conv2d_2_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_2_addbus_[2])
);
conv2d #("weight/max_polling/2_3.txt", 2, 0, 31, 31) conv2d_2_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_2_addbus_[3])
);
conv2d #("weight/max_polling/2_4.txt", 2, 0, 31, 31) conv2d_2_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_2_addbus_[4])
);
conv2d #("weight/max_polling/2_5.txt", 2, 0, 31, 31) conv2d_2_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_2_addbus_[5])
);
conv2d #("weight/max_polling/2_6.txt", 2, 0, 31, 31) conv2d_2_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_2_addbus_[6])
);
conv2d #("weight/max_polling/2_7.txt", 2, 0, 31, 31) conv2d_2_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_2_addbus_[7])
);
conv2d #("weight/max_polling/2_8.txt", 2, 0, 31, 31) conv2d_2_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_2_addbus_[8])
);
conv2d #("weight/max_polling/2_9.txt", 2, 0, 31, 31) conv2d_2_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_2_addbus_[9])
);
conv2d #("weight/max_polling/2_10.txt", 2, 0, 31, 31) conv2d_2_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_2_addbus_[10])
);
conv2d #("weight/max_polling/2_11.txt", 2, 0, 31, 31) conv2d_2_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_2_addbus_[11])
);
conv2d #("weight/max_polling/2_12.txt", 2, 0, 31, 31) conv2d_2_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_2_addbus_[12])
);
conv2d #("weight/max_polling/2_13.txt", 2, 0, 31, 31) conv2d_2_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_2_addbus_[13])
);
conv2d #("weight/max_polling/2_14.txt", 2, 0, 31, 31) conv2d_2_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_2_addbus_[14])
);
conv2d #("weight/max_polling/2_15.txt", 2, 0, 31, 31) conv2d_2_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_2_addbus_[15])
);
conv2d #("weight/max_polling/2_16.txt", 2, 0, 31, 31) conv2d_2_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_2_addbus_[16])
);
conv2d #("weight/max_polling/2_17.txt", 2, 0, 31, 31) conv2d_2_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_2_addbus_[17])
);
conv2d #("weight/max_polling/2_18.txt", 2, 0, 31, 31) conv2d_2_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_2_addbus_[18])
);
conv2d #("weight/max_polling/2_19.txt", 2, 0, 31, 31) conv2d_2_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_2_addbus_[19])
);
conv2d #("weight/max_polling/2_20.txt", 2, 0, 31, 31) conv2d_2_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_2_addbus_[20])
);
conv2d #("weight/max_polling/2_21.txt", 2, 0, 31, 31) conv2d_2_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_2_addbus_[21])
);
conv2d #("weight/max_polling/2_22.txt", 2, 0, 31, 31) conv2d_2_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_2_addbus_[22])
);
conv2d #("weight/max_polling/2_23.txt", 2, 0, 31, 31) conv2d_2_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_2_addbus_[23])
);
conv2d #("weight/max_polling/2_24.txt", 2, 0, 31, 31) conv2d_2_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_2_addbus_[24])
);
conv2d #("weight/max_polling/2_25.txt", 2, 0, 31, 31) conv2d_2_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_2_addbus_[25])
);
conv2d #("weight/max_polling/2_26.txt", 2, 0, 31, 31) conv2d_2_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_2_addbus_[26])
);
conv2d #("weight/max_polling/2_27.txt", 2, 0, 31, 31) conv2d_2_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_2_addbus_[27])
);
conv2d #("weight/max_polling/2_28.txt", 2, 0, 31, 31) conv2d_2_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_2_addbus_[28])
);
conv2d #("weight/max_polling/2_29.txt", 2, 0, 31, 31) conv2d_2_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_2_addbus_[29])
);
conv2d #("weight/max_polling/2_30.txt", 2, 0, 31, 31) conv2d_2_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_2_addbus_[30])
);
conv2d #("weight/max_polling/2_31.txt", 2, 0, 31, 31) conv2d_2_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_2_addbus_[31])
);
conv2d #("weight/max_polling/2_32.txt", 2, 0, 31, 31) conv2d_2_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_2_addbus_[32])
);
conv2d #("weight/max_polling/2_33.txt", 2, 0, 31, 31) conv2d_2_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_2_addbus_[33])
);
conv2d #("weight/max_polling/2_34.txt", 2, 0, 31, 31) conv2d_2_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_2_addbus_[34])
);
conv2d #("weight/max_polling/2_35.txt", 2, 0, 31, 31) conv2d_2_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_2_addbus_[35])
);
conv2d #("weight/max_polling/2_36.txt", 2, 0, 31, 31) conv2d_2_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_2_addbus_[36])
);
conv2d #("weight/max_polling/2_37.txt", 2, 0, 31, 31) conv2d_2_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_2_addbus_[37])
);
conv2d #("weight/max_polling/2_38.txt", 2, 0, 31, 31) conv2d_2_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_2_addbus_[38])
);
conv2d #("weight/max_polling/2_39.txt", 2, 0, 31, 31) conv2d_2_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_2_addbus_[39])
);
conv2d #("weight/max_polling/2_40.txt", 2, 0, 31, 31) conv2d_2_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_2_addbus_[40])
);
conv2d #("weight/max_polling/2_41.txt", 2, 0, 31, 31) conv2d_2_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_2_addbus_[41])
);
conv2d #("weight/max_polling/2_42.txt", 2, 0, 31, 31) conv2d_2_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_2_addbus_[42])
);
conv2d #("weight/max_polling/2_43.txt", 2, 0, 31, 31) conv2d_2_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_2_addbus_[43])
);
conv2d #("weight/max_polling/2_44.txt", 2, 0, 31, 31) conv2d_2_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_2_addbus_[44])
);
conv2d #("weight/max_polling/2_45.txt", 2, 0, 31, 31) conv2d_2_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_2_addbus_[45])
);
conv2d #("weight/max_polling/2_46.txt", 2, 0, 31, 31) conv2d_2_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_2_addbus_[46])
);
conv2d #("weight/max_polling/2_47.txt", 2, 0, 31, 31) conv2d_2_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_2_addbus_[47])
);
conv2d #("weight/max_polling/2_48.txt", 2, 0, 31, 31) conv2d_2_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_2_addbus_[48])
);
conv2d #("weight/max_polling/2_49.txt", 2, 0, 31, 31) conv2d_2_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_2_addbus_[49])
);
conv2d #("weight/max_polling/2_50.txt", 2, 0, 31, 31) conv2d_2_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_2_addbus_[50])
);
conv2d #("weight/max_polling/2_51.txt", 2, 0, 31, 31) conv2d_2_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_2_addbus_[51])
);
conv2d #("weight/max_polling/2_52.txt", 2, 0, 31, 31) conv2d_2_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_2_addbus_[52])
);
conv2d #("weight/max_polling/2_53.txt", 2, 0, 31, 31) conv2d_2_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_2_addbus_[53])
);
conv2d #("weight/max_polling/2_54.txt", 2, 0, 31, 31) conv2d_2_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_2_addbus_[54])
);
conv2d #("weight/max_polling/2_55.txt", 2, 0, 31, 31) conv2d_2_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_2_addbus_[55])
);
conv2d #("weight/max_polling/2_56.txt", 2, 0, 31, 31) conv2d_2_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_2_addbus_[56])
);
conv2d #("weight/max_polling/2_57.txt", 2, 0, 31, 31) conv2d_2_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_2_addbus_[57])
);
conv2d #("weight/max_polling/2_58.txt", 2, 0, 31, 31) conv2d_2_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_2_addbus_[58])
);
conv2d #("weight/max_polling/2_59.txt", 2, 0, 31, 31) conv2d_2_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_2_addbus_[59])
);
conv2d #("weight/max_polling/2_60.txt", 2, 0, 31, 31) conv2d_2_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_2_addbus_[60])
);
conv2d #("weight/max_polling/2_61.txt", 2, 0, 31, 31) conv2d_2_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_2_addbus_[61])
);
conv2d #("weight/max_polling/2_62.txt", 2, 0, 31, 31) conv2d_2_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_2_addbus_[62])
);
conv2d #("weight/max_polling/2_63.txt", 2, 0, 31, 31) conv2d_2_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_2_addbus_[63])
);
sum_64 #(15) sum_2( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[2]), 
        .data_in_0(_2_addbus_[0]), 
        .data_in_1(_2_addbus_[1]), 
        .data_in_2(_2_addbus_[2]), 
        .data_in_3(_2_addbus_[3]), 
        .data_in_4(_2_addbus_[4]), 
        .data_in_5(_2_addbus_[5]), 
        .data_in_6(_2_addbus_[6]), 
        .data_in_7(_2_addbus_[7]), 
        .data_in_8(_2_addbus_[8]), 
        .data_in_9(_2_addbus_[9]), 
        .data_in_10(_2_addbus_[10]), 
        .data_in_11(_2_addbus_[11]), 
        .data_in_12(_2_addbus_[12]), 
        .data_in_13(_2_addbus_[13]), 
        .data_in_14(_2_addbus_[14]), 
        .data_in_15(_2_addbus_[15]), 
        .data_in_16(_2_addbus_[16]), 
        .data_in_17(_2_addbus_[17]), 
        .data_in_18(_2_addbus_[18]), 
        .data_in_19(_2_addbus_[19]), 
        .data_in_20(_2_addbus_[20]), 
        .data_in_21(_2_addbus_[21]), 
        .data_in_22(_2_addbus_[22]), 
        .data_in_23(_2_addbus_[23]), 
        .data_in_24(_2_addbus_[24]), 
        .data_in_25(_2_addbus_[25]), 
        .data_in_26(_2_addbus_[26]), 
        .data_in_27(_2_addbus_[27]), 
        .data_in_28(_2_addbus_[28]), 
        .data_in_29(_2_addbus_[29]), 
        .data_in_30(_2_addbus_[30]), 
        .data_in_31(_2_addbus_[31]), 
        .data_in_32(_2_addbus_[32]), 
        .data_in_33(_2_addbus_[33]), 
        .data_in_34(_2_addbus_[34]), 
        .data_in_35(_2_addbus_[35]), 
        .data_in_36(_2_addbus_[36]), 
        .data_in_37(_2_addbus_[37]), 
        .data_in_38(_2_addbus_[38]), 
        .data_in_39(_2_addbus_[39]), 
        .data_in_40(_2_addbus_[40]), 
        .data_in_41(_2_addbus_[41]), 
        .data_in_42(_2_addbus_[42]), 
        .data_in_43(_2_addbus_[43]), 
        .data_in_44(_2_addbus_[44]), 
        .data_in_45(_2_addbus_[45]), 
        .data_in_46(_2_addbus_[46]), 
        .data_in_47(_2_addbus_[47]), 
        .data_in_48(_2_addbus_[48]), 
        .data_in_49(_2_addbus_[49]), 
        .data_in_50(_2_addbus_[50]), 
        .data_in_51(_2_addbus_[51]), 
        .data_in_52(_2_addbus_[52]), 
        .data_in_53(_2_addbus_[53]), 
        .data_in_54(_2_addbus_[54]), 
        .data_in_55(_2_addbus_[55]), 
        .data_in_56(_2_addbus_[56]), 
        .data_in_57(_2_addbus_[57]), 
        .data_in_58(_2_addbus_[58]), 
        .data_in_59(_2_addbus_[59]), 
        .data_in_60(_2_addbus_[60]), 
        .data_in_61(_2_addbus_[61]), 
        .data_in_62(_2_addbus_[62]), 
        .data_in_63(_2_addbus_[63]) 
); 
wire [31:0] _3_addbus_[63:0];    
conv2d #("weight/max_polling/3_0.txt", 2, 0, 31, 31) conv2d_3_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_3_addbus_[0])
);
conv2d #("weight/max_polling/3_1.txt", 2, 0, 31, 31) conv2d_3_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_3_addbus_[1])
);
conv2d #("weight/max_polling/3_2.txt", 2, 0, 31, 31) conv2d_3_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_3_addbus_[2])
);
conv2d #("weight/max_polling/3_3.txt", 2, 0, 31, 31) conv2d_3_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_3_addbus_[3])
);
conv2d #("weight/max_polling/3_4.txt", 2, 0, 31, 31) conv2d_3_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_3_addbus_[4])
);
conv2d #("weight/max_polling/3_5.txt", 2, 0, 31, 31) conv2d_3_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_3_addbus_[5])
);
conv2d #("weight/max_polling/3_6.txt", 2, 0, 31, 31) conv2d_3_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_3_addbus_[6])
);
conv2d #("weight/max_polling/3_7.txt", 2, 0, 31, 31) conv2d_3_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_3_addbus_[7])
);
conv2d #("weight/max_polling/3_8.txt", 2, 0, 31, 31) conv2d_3_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_3_addbus_[8])
);
conv2d #("weight/max_polling/3_9.txt", 2, 0, 31, 31) conv2d_3_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_3_addbus_[9])
);
conv2d #("weight/max_polling/3_10.txt", 2, 0, 31, 31) conv2d_3_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_3_addbus_[10])
);
conv2d #("weight/max_polling/3_11.txt", 2, 0, 31, 31) conv2d_3_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_3_addbus_[11])
);
conv2d #("weight/max_polling/3_12.txt", 2, 0, 31, 31) conv2d_3_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_3_addbus_[12])
);
conv2d #("weight/max_polling/3_13.txt", 2, 0, 31, 31) conv2d_3_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_3_addbus_[13])
);
conv2d #("weight/max_polling/3_14.txt", 2, 0, 31, 31) conv2d_3_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_3_addbus_[14])
);
conv2d #("weight/max_polling/3_15.txt", 2, 0, 31, 31) conv2d_3_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_3_addbus_[15])
);
conv2d #("weight/max_polling/3_16.txt", 2, 0, 31, 31) conv2d_3_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_3_addbus_[16])
);
conv2d #("weight/max_polling/3_17.txt", 2, 0, 31, 31) conv2d_3_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_3_addbus_[17])
);
conv2d #("weight/max_polling/3_18.txt", 2, 0, 31, 31) conv2d_3_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_3_addbus_[18])
);
conv2d #("weight/max_polling/3_19.txt", 2, 0, 31, 31) conv2d_3_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_3_addbus_[19])
);
conv2d #("weight/max_polling/3_20.txt", 2, 0, 31, 31) conv2d_3_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_3_addbus_[20])
);
conv2d #("weight/max_polling/3_21.txt", 2, 0, 31, 31) conv2d_3_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_3_addbus_[21])
);
conv2d #("weight/max_polling/3_22.txt", 2, 0, 31, 31) conv2d_3_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_3_addbus_[22])
);
conv2d #("weight/max_polling/3_23.txt", 2, 0, 31, 31) conv2d_3_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_3_addbus_[23])
);
conv2d #("weight/max_polling/3_24.txt", 2, 0, 31, 31) conv2d_3_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_3_addbus_[24])
);
conv2d #("weight/max_polling/3_25.txt", 2, 0, 31, 31) conv2d_3_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_3_addbus_[25])
);
conv2d #("weight/max_polling/3_26.txt", 2, 0, 31, 31) conv2d_3_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_3_addbus_[26])
);
conv2d #("weight/max_polling/3_27.txt", 2, 0, 31, 31) conv2d_3_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_3_addbus_[27])
);
conv2d #("weight/max_polling/3_28.txt", 2, 0, 31, 31) conv2d_3_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_3_addbus_[28])
);
conv2d #("weight/max_polling/3_29.txt", 2, 0, 31, 31) conv2d_3_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_3_addbus_[29])
);
conv2d #("weight/max_polling/3_30.txt", 2, 0, 31, 31) conv2d_3_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_3_addbus_[30])
);
conv2d #("weight/max_polling/3_31.txt", 2, 0, 31, 31) conv2d_3_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_3_addbus_[31])
);
conv2d #("weight/max_polling/3_32.txt", 2, 0, 31, 31) conv2d_3_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_3_addbus_[32])
);
conv2d #("weight/max_polling/3_33.txt", 2, 0, 31, 31) conv2d_3_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_3_addbus_[33])
);
conv2d #("weight/max_polling/3_34.txt", 2, 0, 31, 31) conv2d_3_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_3_addbus_[34])
);
conv2d #("weight/max_polling/3_35.txt", 2, 0, 31, 31) conv2d_3_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_3_addbus_[35])
);
conv2d #("weight/max_polling/3_36.txt", 2, 0, 31, 31) conv2d_3_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_3_addbus_[36])
);
conv2d #("weight/max_polling/3_37.txt", 2, 0, 31, 31) conv2d_3_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_3_addbus_[37])
);
conv2d #("weight/max_polling/3_38.txt", 2, 0, 31, 31) conv2d_3_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_3_addbus_[38])
);
conv2d #("weight/max_polling/3_39.txt", 2, 0, 31, 31) conv2d_3_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_3_addbus_[39])
);
conv2d #("weight/max_polling/3_40.txt", 2, 0, 31, 31) conv2d_3_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_3_addbus_[40])
);
conv2d #("weight/max_polling/3_41.txt", 2, 0, 31, 31) conv2d_3_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_3_addbus_[41])
);
conv2d #("weight/max_polling/3_42.txt", 2, 0, 31, 31) conv2d_3_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_3_addbus_[42])
);
conv2d #("weight/max_polling/3_43.txt", 2, 0, 31, 31) conv2d_3_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_3_addbus_[43])
);
conv2d #("weight/max_polling/3_44.txt", 2, 0, 31, 31) conv2d_3_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_3_addbus_[44])
);
conv2d #("weight/max_polling/3_45.txt", 2, 0, 31, 31) conv2d_3_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_3_addbus_[45])
);
conv2d #("weight/max_polling/3_46.txt", 2, 0, 31, 31) conv2d_3_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_3_addbus_[46])
);
conv2d #("weight/max_polling/3_47.txt", 2, 0, 31, 31) conv2d_3_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_3_addbus_[47])
);
conv2d #("weight/max_polling/3_48.txt", 2, 0, 31, 31) conv2d_3_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_3_addbus_[48])
);
conv2d #("weight/max_polling/3_49.txt", 2, 0, 31, 31) conv2d_3_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_3_addbus_[49])
);
conv2d #("weight/max_polling/3_50.txt", 2, 0, 31, 31) conv2d_3_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_3_addbus_[50])
);
conv2d #("weight/max_polling/3_51.txt", 2, 0, 31, 31) conv2d_3_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_3_addbus_[51])
);
conv2d #("weight/max_polling/3_52.txt", 2, 0, 31, 31) conv2d_3_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_3_addbus_[52])
);
conv2d #("weight/max_polling/3_53.txt", 2, 0, 31, 31) conv2d_3_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_3_addbus_[53])
);
conv2d #("weight/max_polling/3_54.txt", 2, 0, 31, 31) conv2d_3_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_3_addbus_[54])
);
conv2d #("weight/max_polling/3_55.txt", 2, 0, 31, 31) conv2d_3_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_3_addbus_[55])
);
conv2d #("weight/max_polling/3_56.txt", 2, 0, 31, 31) conv2d_3_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_3_addbus_[56])
);
conv2d #("weight/max_polling/3_57.txt", 2, 0, 31, 31) conv2d_3_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_3_addbus_[57])
);
conv2d #("weight/max_polling/3_58.txt", 2, 0, 31, 31) conv2d_3_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_3_addbus_[58])
);
conv2d #("weight/max_polling/3_59.txt", 2, 0, 31, 31) conv2d_3_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_3_addbus_[59])
);
conv2d #("weight/max_polling/3_60.txt", 2, 0, 31, 31) conv2d_3_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_3_addbus_[60])
);
conv2d #("weight/max_polling/3_61.txt", 2, 0, 31, 31) conv2d_3_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_3_addbus_[61])
);
conv2d #("weight/max_polling/3_62.txt", 2, 0, 31, 31) conv2d_3_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_3_addbus_[62])
);
conv2d #("weight/max_polling/3_63.txt", 2, 0, 31, 31) conv2d_3_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_3_addbus_[63])
);
sum_64 #(15) sum_3( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[3]), 
        .data_in_0(_3_addbus_[0]), 
        .data_in_1(_3_addbus_[1]), 
        .data_in_2(_3_addbus_[2]), 
        .data_in_3(_3_addbus_[3]), 
        .data_in_4(_3_addbus_[4]), 
        .data_in_5(_3_addbus_[5]), 
        .data_in_6(_3_addbus_[6]), 
        .data_in_7(_3_addbus_[7]), 
        .data_in_8(_3_addbus_[8]), 
        .data_in_9(_3_addbus_[9]), 
        .data_in_10(_3_addbus_[10]), 
        .data_in_11(_3_addbus_[11]), 
        .data_in_12(_3_addbus_[12]), 
        .data_in_13(_3_addbus_[13]), 
        .data_in_14(_3_addbus_[14]), 
        .data_in_15(_3_addbus_[15]), 
        .data_in_16(_3_addbus_[16]), 
        .data_in_17(_3_addbus_[17]), 
        .data_in_18(_3_addbus_[18]), 
        .data_in_19(_3_addbus_[19]), 
        .data_in_20(_3_addbus_[20]), 
        .data_in_21(_3_addbus_[21]), 
        .data_in_22(_3_addbus_[22]), 
        .data_in_23(_3_addbus_[23]), 
        .data_in_24(_3_addbus_[24]), 
        .data_in_25(_3_addbus_[25]), 
        .data_in_26(_3_addbus_[26]), 
        .data_in_27(_3_addbus_[27]), 
        .data_in_28(_3_addbus_[28]), 
        .data_in_29(_3_addbus_[29]), 
        .data_in_30(_3_addbus_[30]), 
        .data_in_31(_3_addbus_[31]), 
        .data_in_32(_3_addbus_[32]), 
        .data_in_33(_3_addbus_[33]), 
        .data_in_34(_3_addbus_[34]), 
        .data_in_35(_3_addbus_[35]), 
        .data_in_36(_3_addbus_[36]), 
        .data_in_37(_3_addbus_[37]), 
        .data_in_38(_3_addbus_[38]), 
        .data_in_39(_3_addbus_[39]), 
        .data_in_40(_3_addbus_[40]), 
        .data_in_41(_3_addbus_[41]), 
        .data_in_42(_3_addbus_[42]), 
        .data_in_43(_3_addbus_[43]), 
        .data_in_44(_3_addbus_[44]), 
        .data_in_45(_3_addbus_[45]), 
        .data_in_46(_3_addbus_[46]), 
        .data_in_47(_3_addbus_[47]), 
        .data_in_48(_3_addbus_[48]), 
        .data_in_49(_3_addbus_[49]), 
        .data_in_50(_3_addbus_[50]), 
        .data_in_51(_3_addbus_[51]), 
        .data_in_52(_3_addbus_[52]), 
        .data_in_53(_3_addbus_[53]), 
        .data_in_54(_3_addbus_[54]), 
        .data_in_55(_3_addbus_[55]), 
        .data_in_56(_3_addbus_[56]), 
        .data_in_57(_3_addbus_[57]), 
        .data_in_58(_3_addbus_[58]), 
        .data_in_59(_3_addbus_[59]), 
        .data_in_60(_3_addbus_[60]), 
        .data_in_61(_3_addbus_[61]), 
        .data_in_62(_3_addbus_[62]), 
        .data_in_63(_3_addbus_[63]) 
); 
wire [31:0] _4_addbus_[63:0];    
conv2d #("weight/max_polling/4_0.txt", 2, 0, 31, 31) conv2d_4_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_4_addbus_[0])
);
conv2d #("weight/max_polling/4_1.txt", 2, 0, 31, 31) conv2d_4_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_4_addbus_[1])
);
conv2d #("weight/max_polling/4_2.txt", 2, 0, 31, 31) conv2d_4_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_4_addbus_[2])
);
conv2d #("weight/max_polling/4_3.txt", 2, 0, 31, 31) conv2d_4_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_4_addbus_[3])
);
conv2d #("weight/max_polling/4_4.txt", 2, 0, 31, 31) conv2d_4_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_4_addbus_[4])
);
conv2d #("weight/max_polling/4_5.txt", 2, 0, 31, 31) conv2d_4_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_4_addbus_[5])
);
conv2d #("weight/max_polling/4_6.txt", 2, 0, 31, 31) conv2d_4_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_4_addbus_[6])
);
conv2d #("weight/max_polling/4_7.txt", 2, 0, 31, 31) conv2d_4_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_4_addbus_[7])
);
conv2d #("weight/max_polling/4_8.txt", 2, 0, 31, 31) conv2d_4_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_4_addbus_[8])
);
conv2d #("weight/max_polling/4_9.txt", 2, 0, 31, 31) conv2d_4_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_4_addbus_[9])
);
conv2d #("weight/max_polling/4_10.txt", 2, 0, 31, 31) conv2d_4_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_4_addbus_[10])
);
conv2d #("weight/max_polling/4_11.txt", 2, 0, 31, 31) conv2d_4_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_4_addbus_[11])
);
conv2d #("weight/max_polling/4_12.txt", 2, 0, 31, 31) conv2d_4_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_4_addbus_[12])
);
conv2d #("weight/max_polling/4_13.txt", 2, 0, 31, 31) conv2d_4_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_4_addbus_[13])
);
conv2d #("weight/max_polling/4_14.txt", 2, 0, 31, 31) conv2d_4_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_4_addbus_[14])
);
conv2d #("weight/max_polling/4_15.txt", 2, 0, 31, 31) conv2d_4_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_4_addbus_[15])
);
conv2d #("weight/max_polling/4_16.txt", 2, 0, 31, 31) conv2d_4_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_4_addbus_[16])
);
conv2d #("weight/max_polling/4_17.txt", 2, 0, 31, 31) conv2d_4_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_4_addbus_[17])
);
conv2d #("weight/max_polling/4_18.txt", 2, 0, 31, 31) conv2d_4_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_4_addbus_[18])
);
conv2d #("weight/max_polling/4_19.txt", 2, 0, 31, 31) conv2d_4_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_4_addbus_[19])
);
conv2d #("weight/max_polling/4_20.txt", 2, 0, 31, 31) conv2d_4_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_4_addbus_[20])
);
conv2d #("weight/max_polling/4_21.txt", 2, 0, 31, 31) conv2d_4_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_4_addbus_[21])
);
conv2d #("weight/max_polling/4_22.txt", 2, 0, 31, 31) conv2d_4_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_4_addbus_[22])
);
conv2d #("weight/max_polling/4_23.txt", 2, 0, 31, 31) conv2d_4_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_4_addbus_[23])
);
conv2d #("weight/max_polling/4_24.txt", 2, 0, 31, 31) conv2d_4_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_4_addbus_[24])
);
conv2d #("weight/max_polling/4_25.txt", 2, 0, 31, 31) conv2d_4_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_4_addbus_[25])
);
conv2d #("weight/max_polling/4_26.txt", 2, 0, 31, 31) conv2d_4_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_4_addbus_[26])
);
conv2d #("weight/max_polling/4_27.txt", 2, 0, 31, 31) conv2d_4_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_4_addbus_[27])
);
conv2d #("weight/max_polling/4_28.txt", 2, 0, 31, 31) conv2d_4_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_4_addbus_[28])
);
conv2d #("weight/max_polling/4_29.txt", 2, 0, 31, 31) conv2d_4_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_4_addbus_[29])
);
conv2d #("weight/max_polling/4_30.txt", 2, 0, 31, 31) conv2d_4_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_4_addbus_[30])
);
conv2d #("weight/max_polling/4_31.txt", 2, 0, 31, 31) conv2d_4_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_4_addbus_[31])
);
conv2d #("weight/max_polling/4_32.txt", 2, 0, 31, 31) conv2d_4_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_4_addbus_[32])
);
conv2d #("weight/max_polling/4_33.txt", 2, 0, 31, 31) conv2d_4_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_4_addbus_[33])
);
conv2d #("weight/max_polling/4_34.txt", 2, 0, 31, 31) conv2d_4_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_4_addbus_[34])
);
conv2d #("weight/max_polling/4_35.txt", 2, 0, 31, 31) conv2d_4_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_4_addbus_[35])
);
conv2d #("weight/max_polling/4_36.txt", 2, 0, 31, 31) conv2d_4_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_4_addbus_[36])
);
conv2d #("weight/max_polling/4_37.txt", 2, 0, 31, 31) conv2d_4_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_4_addbus_[37])
);
conv2d #("weight/max_polling/4_38.txt", 2, 0, 31, 31) conv2d_4_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_4_addbus_[38])
);
conv2d #("weight/max_polling/4_39.txt", 2, 0, 31, 31) conv2d_4_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_4_addbus_[39])
);
conv2d #("weight/max_polling/4_40.txt", 2, 0, 31, 31) conv2d_4_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_4_addbus_[40])
);
conv2d #("weight/max_polling/4_41.txt", 2, 0, 31, 31) conv2d_4_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_4_addbus_[41])
);
conv2d #("weight/max_polling/4_42.txt", 2, 0, 31, 31) conv2d_4_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_4_addbus_[42])
);
conv2d #("weight/max_polling/4_43.txt", 2, 0, 31, 31) conv2d_4_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_4_addbus_[43])
);
conv2d #("weight/max_polling/4_44.txt", 2, 0, 31, 31) conv2d_4_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_4_addbus_[44])
);
conv2d #("weight/max_polling/4_45.txt", 2, 0, 31, 31) conv2d_4_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_4_addbus_[45])
);
conv2d #("weight/max_polling/4_46.txt", 2, 0, 31, 31) conv2d_4_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_4_addbus_[46])
);
conv2d #("weight/max_polling/4_47.txt", 2, 0, 31, 31) conv2d_4_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_4_addbus_[47])
);
conv2d #("weight/max_polling/4_48.txt", 2, 0, 31, 31) conv2d_4_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_4_addbus_[48])
);
conv2d #("weight/max_polling/4_49.txt", 2, 0, 31, 31) conv2d_4_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_4_addbus_[49])
);
conv2d #("weight/max_polling/4_50.txt", 2, 0, 31, 31) conv2d_4_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_4_addbus_[50])
);
conv2d #("weight/max_polling/4_51.txt", 2, 0, 31, 31) conv2d_4_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_4_addbus_[51])
);
conv2d #("weight/max_polling/4_52.txt", 2, 0, 31, 31) conv2d_4_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_4_addbus_[52])
);
conv2d #("weight/max_polling/4_53.txt", 2, 0, 31, 31) conv2d_4_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_4_addbus_[53])
);
conv2d #("weight/max_polling/4_54.txt", 2, 0, 31, 31) conv2d_4_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_4_addbus_[54])
);
conv2d #("weight/max_polling/4_55.txt", 2, 0, 31, 31) conv2d_4_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_4_addbus_[55])
);
conv2d #("weight/max_polling/4_56.txt", 2, 0, 31, 31) conv2d_4_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_4_addbus_[56])
);
conv2d #("weight/max_polling/4_57.txt", 2, 0, 31, 31) conv2d_4_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_4_addbus_[57])
);
conv2d #("weight/max_polling/4_58.txt", 2, 0, 31, 31) conv2d_4_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_4_addbus_[58])
);
conv2d #("weight/max_polling/4_59.txt", 2, 0, 31, 31) conv2d_4_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_4_addbus_[59])
);
conv2d #("weight/max_polling/4_60.txt", 2, 0, 31, 31) conv2d_4_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_4_addbus_[60])
);
conv2d #("weight/max_polling/4_61.txt", 2, 0, 31, 31) conv2d_4_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_4_addbus_[61])
);
conv2d #("weight/max_polling/4_62.txt", 2, 0, 31, 31) conv2d_4_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_4_addbus_[62])
);
conv2d #("weight/max_polling/4_63.txt", 2, 0, 31, 31) conv2d_4_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_4_addbus_[63])
);
sum_64 #(15) sum_4( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[4]), 
        .data_in_0(_4_addbus_[0]), 
        .data_in_1(_4_addbus_[1]), 
        .data_in_2(_4_addbus_[2]), 
        .data_in_3(_4_addbus_[3]), 
        .data_in_4(_4_addbus_[4]), 
        .data_in_5(_4_addbus_[5]), 
        .data_in_6(_4_addbus_[6]), 
        .data_in_7(_4_addbus_[7]), 
        .data_in_8(_4_addbus_[8]), 
        .data_in_9(_4_addbus_[9]), 
        .data_in_10(_4_addbus_[10]), 
        .data_in_11(_4_addbus_[11]), 
        .data_in_12(_4_addbus_[12]), 
        .data_in_13(_4_addbus_[13]), 
        .data_in_14(_4_addbus_[14]), 
        .data_in_15(_4_addbus_[15]), 
        .data_in_16(_4_addbus_[16]), 
        .data_in_17(_4_addbus_[17]), 
        .data_in_18(_4_addbus_[18]), 
        .data_in_19(_4_addbus_[19]), 
        .data_in_20(_4_addbus_[20]), 
        .data_in_21(_4_addbus_[21]), 
        .data_in_22(_4_addbus_[22]), 
        .data_in_23(_4_addbus_[23]), 
        .data_in_24(_4_addbus_[24]), 
        .data_in_25(_4_addbus_[25]), 
        .data_in_26(_4_addbus_[26]), 
        .data_in_27(_4_addbus_[27]), 
        .data_in_28(_4_addbus_[28]), 
        .data_in_29(_4_addbus_[29]), 
        .data_in_30(_4_addbus_[30]), 
        .data_in_31(_4_addbus_[31]), 
        .data_in_32(_4_addbus_[32]), 
        .data_in_33(_4_addbus_[33]), 
        .data_in_34(_4_addbus_[34]), 
        .data_in_35(_4_addbus_[35]), 
        .data_in_36(_4_addbus_[36]), 
        .data_in_37(_4_addbus_[37]), 
        .data_in_38(_4_addbus_[38]), 
        .data_in_39(_4_addbus_[39]), 
        .data_in_40(_4_addbus_[40]), 
        .data_in_41(_4_addbus_[41]), 
        .data_in_42(_4_addbus_[42]), 
        .data_in_43(_4_addbus_[43]), 
        .data_in_44(_4_addbus_[44]), 
        .data_in_45(_4_addbus_[45]), 
        .data_in_46(_4_addbus_[46]), 
        .data_in_47(_4_addbus_[47]), 
        .data_in_48(_4_addbus_[48]), 
        .data_in_49(_4_addbus_[49]), 
        .data_in_50(_4_addbus_[50]), 
        .data_in_51(_4_addbus_[51]), 
        .data_in_52(_4_addbus_[52]), 
        .data_in_53(_4_addbus_[53]), 
        .data_in_54(_4_addbus_[54]), 
        .data_in_55(_4_addbus_[55]), 
        .data_in_56(_4_addbus_[56]), 
        .data_in_57(_4_addbus_[57]), 
        .data_in_58(_4_addbus_[58]), 
        .data_in_59(_4_addbus_[59]), 
        .data_in_60(_4_addbus_[60]), 
        .data_in_61(_4_addbus_[61]), 
        .data_in_62(_4_addbus_[62]), 
        .data_in_63(_4_addbus_[63]) 
); 
wire [31:0] _5_addbus_[63:0];    
conv2d #("weight/max_polling/5_0.txt", 2, 0, 31, 31) conv2d_5_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_5_addbus_[0])
);
conv2d #("weight/max_polling/5_1.txt", 2, 0, 31, 31) conv2d_5_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_5_addbus_[1])
);
conv2d #("weight/max_polling/5_2.txt", 2, 0, 31, 31) conv2d_5_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_5_addbus_[2])
);
conv2d #("weight/max_polling/5_3.txt", 2, 0, 31, 31) conv2d_5_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_5_addbus_[3])
);
conv2d #("weight/max_polling/5_4.txt", 2, 0, 31, 31) conv2d_5_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_5_addbus_[4])
);
conv2d #("weight/max_polling/5_5.txt", 2, 0, 31, 31) conv2d_5_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_5_addbus_[5])
);
conv2d #("weight/max_polling/5_6.txt", 2, 0, 31, 31) conv2d_5_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_5_addbus_[6])
);
conv2d #("weight/max_polling/5_7.txt", 2, 0, 31, 31) conv2d_5_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_5_addbus_[7])
);
conv2d #("weight/max_polling/5_8.txt", 2, 0, 31, 31) conv2d_5_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_5_addbus_[8])
);
conv2d #("weight/max_polling/5_9.txt", 2, 0, 31, 31) conv2d_5_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_5_addbus_[9])
);
conv2d #("weight/max_polling/5_10.txt", 2, 0, 31, 31) conv2d_5_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_5_addbus_[10])
);
conv2d #("weight/max_polling/5_11.txt", 2, 0, 31, 31) conv2d_5_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_5_addbus_[11])
);
conv2d #("weight/max_polling/5_12.txt", 2, 0, 31, 31) conv2d_5_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_5_addbus_[12])
);
conv2d #("weight/max_polling/5_13.txt", 2, 0, 31, 31) conv2d_5_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_5_addbus_[13])
);
conv2d #("weight/max_polling/5_14.txt", 2, 0, 31, 31) conv2d_5_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_5_addbus_[14])
);
conv2d #("weight/max_polling/5_15.txt", 2, 0, 31, 31) conv2d_5_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_5_addbus_[15])
);
conv2d #("weight/max_polling/5_16.txt", 2, 0, 31, 31) conv2d_5_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_5_addbus_[16])
);
conv2d #("weight/max_polling/5_17.txt", 2, 0, 31, 31) conv2d_5_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_5_addbus_[17])
);
conv2d #("weight/max_polling/5_18.txt", 2, 0, 31, 31) conv2d_5_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_5_addbus_[18])
);
conv2d #("weight/max_polling/5_19.txt", 2, 0, 31, 31) conv2d_5_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_5_addbus_[19])
);
conv2d #("weight/max_polling/5_20.txt", 2, 0, 31, 31) conv2d_5_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_5_addbus_[20])
);
conv2d #("weight/max_polling/5_21.txt", 2, 0, 31, 31) conv2d_5_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_5_addbus_[21])
);
conv2d #("weight/max_polling/5_22.txt", 2, 0, 31, 31) conv2d_5_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_5_addbus_[22])
);
conv2d #("weight/max_polling/5_23.txt", 2, 0, 31, 31) conv2d_5_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_5_addbus_[23])
);
conv2d #("weight/max_polling/5_24.txt", 2, 0, 31, 31) conv2d_5_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_5_addbus_[24])
);
conv2d #("weight/max_polling/5_25.txt", 2, 0, 31, 31) conv2d_5_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_5_addbus_[25])
);
conv2d #("weight/max_polling/5_26.txt", 2, 0, 31, 31) conv2d_5_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_5_addbus_[26])
);
conv2d #("weight/max_polling/5_27.txt", 2, 0, 31, 31) conv2d_5_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_5_addbus_[27])
);
conv2d #("weight/max_polling/5_28.txt", 2, 0, 31, 31) conv2d_5_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_5_addbus_[28])
);
conv2d #("weight/max_polling/5_29.txt", 2, 0, 31, 31) conv2d_5_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_5_addbus_[29])
);
conv2d #("weight/max_polling/5_30.txt", 2, 0, 31, 31) conv2d_5_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_5_addbus_[30])
);
conv2d #("weight/max_polling/5_31.txt", 2, 0, 31, 31) conv2d_5_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_5_addbus_[31])
);
conv2d #("weight/max_polling/5_32.txt", 2, 0, 31, 31) conv2d_5_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_5_addbus_[32])
);
conv2d #("weight/max_polling/5_33.txt", 2, 0, 31, 31) conv2d_5_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_5_addbus_[33])
);
conv2d #("weight/max_polling/5_34.txt", 2, 0, 31, 31) conv2d_5_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_5_addbus_[34])
);
conv2d #("weight/max_polling/5_35.txt", 2, 0, 31, 31) conv2d_5_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_5_addbus_[35])
);
conv2d #("weight/max_polling/5_36.txt", 2, 0, 31, 31) conv2d_5_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_5_addbus_[36])
);
conv2d #("weight/max_polling/5_37.txt", 2, 0, 31, 31) conv2d_5_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_5_addbus_[37])
);
conv2d #("weight/max_polling/5_38.txt", 2, 0, 31, 31) conv2d_5_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_5_addbus_[38])
);
conv2d #("weight/max_polling/5_39.txt", 2, 0, 31, 31) conv2d_5_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_5_addbus_[39])
);
conv2d #("weight/max_polling/5_40.txt", 2, 0, 31, 31) conv2d_5_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_5_addbus_[40])
);
conv2d #("weight/max_polling/5_41.txt", 2, 0, 31, 31) conv2d_5_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_5_addbus_[41])
);
conv2d #("weight/max_polling/5_42.txt", 2, 0, 31, 31) conv2d_5_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_5_addbus_[42])
);
conv2d #("weight/max_polling/5_43.txt", 2, 0, 31, 31) conv2d_5_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_5_addbus_[43])
);
conv2d #("weight/max_polling/5_44.txt", 2, 0, 31, 31) conv2d_5_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_5_addbus_[44])
);
conv2d #("weight/max_polling/5_45.txt", 2, 0, 31, 31) conv2d_5_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_5_addbus_[45])
);
conv2d #("weight/max_polling/5_46.txt", 2, 0, 31, 31) conv2d_5_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_5_addbus_[46])
);
conv2d #("weight/max_polling/5_47.txt", 2, 0, 31, 31) conv2d_5_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_5_addbus_[47])
);
conv2d #("weight/max_polling/5_48.txt", 2, 0, 31, 31) conv2d_5_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_5_addbus_[48])
);
conv2d #("weight/max_polling/5_49.txt", 2, 0, 31, 31) conv2d_5_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_5_addbus_[49])
);
conv2d #("weight/max_polling/5_50.txt", 2, 0, 31, 31) conv2d_5_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_5_addbus_[50])
);
conv2d #("weight/max_polling/5_51.txt", 2, 0, 31, 31) conv2d_5_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_5_addbus_[51])
);
conv2d #("weight/max_polling/5_52.txt", 2, 0, 31, 31) conv2d_5_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_5_addbus_[52])
);
conv2d #("weight/max_polling/5_53.txt", 2, 0, 31, 31) conv2d_5_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_5_addbus_[53])
);
conv2d #("weight/max_polling/5_54.txt", 2, 0, 31, 31) conv2d_5_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_5_addbus_[54])
);
conv2d #("weight/max_polling/5_55.txt", 2, 0, 31, 31) conv2d_5_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_5_addbus_[55])
);
conv2d #("weight/max_polling/5_56.txt", 2, 0, 31, 31) conv2d_5_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_5_addbus_[56])
);
conv2d #("weight/max_polling/5_57.txt", 2, 0, 31, 31) conv2d_5_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_5_addbus_[57])
);
conv2d #("weight/max_polling/5_58.txt", 2, 0, 31, 31) conv2d_5_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_5_addbus_[58])
);
conv2d #("weight/max_polling/5_59.txt", 2, 0, 31, 31) conv2d_5_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_5_addbus_[59])
);
conv2d #("weight/max_polling/5_60.txt", 2, 0, 31, 31) conv2d_5_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_5_addbus_[60])
);
conv2d #("weight/max_polling/5_61.txt", 2, 0, 31, 31) conv2d_5_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_5_addbus_[61])
);
conv2d #("weight/max_polling/5_62.txt", 2, 0, 31, 31) conv2d_5_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_5_addbus_[62])
);
conv2d #("weight/max_polling/5_63.txt", 2, 0, 31, 31) conv2d_5_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_5_addbus_[63])
);
sum_64 #(15) sum_5( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[5]), 
        .data_in_0(_5_addbus_[0]), 
        .data_in_1(_5_addbus_[1]), 
        .data_in_2(_5_addbus_[2]), 
        .data_in_3(_5_addbus_[3]), 
        .data_in_4(_5_addbus_[4]), 
        .data_in_5(_5_addbus_[5]), 
        .data_in_6(_5_addbus_[6]), 
        .data_in_7(_5_addbus_[7]), 
        .data_in_8(_5_addbus_[8]), 
        .data_in_9(_5_addbus_[9]), 
        .data_in_10(_5_addbus_[10]), 
        .data_in_11(_5_addbus_[11]), 
        .data_in_12(_5_addbus_[12]), 
        .data_in_13(_5_addbus_[13]), 
        .data_in_14(_5_addbus_[14]), 
        .data_in_15(_5_addbus_[15]), 
        .data_in_16(_5_addbus_[16]), 
        .data_in_17(_5_addbus_[17]), 
        .data_in_18(_5_addbus_[18]), 
        .data_in_19(_5_addbus_[19]), 
        .data_in_20(_5_addbus_[20]), 
        .data_in_21(_5_addbus_[21]), 
        .data_in_22(_5_addbus_[22]), 
        .data_in_23(_5_addbus_[23]), 
        .data_in_24(_5_addbus_[24]), 
        .data_in_25(_5_addbus_[25]), 
        .data_in_26(_5_addbus_[26]), 
        .data_in_27(_5_addbus_[27]), 
        .data_in_28(_5_addbus_[28]), 
        .data_in_29(_5_addbus_[29]), 
        .data_in_30(_5_addbus_[30]), 
        .data_in_31(_5_addbus_[31]), 
        .data_in_32(_5_addbus_[32]), 
        .data_in_33(_5_addbus_[33]), 
        .data_in_34(_5_addbus_[34]), 
        .data_in_35(_5_addbus_[35]), 
        .data_in_36(_5_addbus_[36]), 
        .data_in_37(_5_addbus_[37]), 
        .data_in_38(_5_addbus_[38]), 
        .data_in_39(_5_addbus_[39]), 
        .data_in_40(_5_addbus_[40]), 
        .data_in_41(_5_addbus_[41]), 
        .data_in_42(_5_addbus_[42]), 
        .data_in_43(_5_addbus_[43]), 
        .data_in_44(_5_addbus_[44]), 
        .data_in_45(_5_addbus_[45]), 
        .data_in_46(_5_addbus_[46]), 
        .data_in_47(_5_addbus_[47]), 
        .data_in_48(_5_addbus_[48]), 
        .data_in_49(_5_addbus_[49]), 
        .data_in_50(_5_addbus_[50]), 
        .data_in_51(_5_addbus_[51]), 
        .data_in_52(_5_addbus_[52]), 
        .data_in_53(_5_addbus_[53]), 
        .data_in_54(_5_addbus_[54]), 
        .data_in_55(_5_addbus_[55]), 
        .data_in_56(_5_addbus_[56]), 
        .data_in_57(_5_addbus_[57]), 
        .data_in_58(_5_addbus_[58]), 
        .data_in_59(_5_addbus_[59]), 
        .data_in_60(_5_addbus_[60]), 
        .data_in_61(_5_addbus_[61]), 
        .data_in_62(_5_addbus_[62]), 
        .data_in_63(_5_addbus_[63]) 
); 
wire [31:0] _6_addbus_[63:0];    
conv2d #("weight/max_polling/6_0.txt", 2, 0, 31, 31) conv2d_6_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_6_addbus_[0])
);
conv2d #("weight/max_polling/6_1.txt", 2, 0, 31, 31) conv2d_6_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_6_addbus_[1])
);
conv2d #("weight/max_polling/6_2.txt", 2, 0, 31, 31) conv2d_6_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_6_addbus_[2])
);
conv2d #("weight/max_polling/6_3.txt", 2, 0, 31, 31) conv2d_6_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_6_addbus_[3])
);
conv2d #("weight/max_polling/6_4.txt", 2, 0, 31, 31) conv2d_6_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_6_addbus_[4])
);
conv2d #("weight/max_polling/6_5.txt", 2, 0, 31, 31) conv2d_6_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_6_addbus_[5])
);
conv2d #("weight/max_polling/6_6.txt", 2, 0, 31, 31) conv2d_6_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_6_addbus_[6])
);
conv2d #("weight/max_polling/6_7.txt", 2, 0, 31, 31) conv2d_6_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_6_addbus_[7])
);
conv2d #("weight/max_polling/6_8.txt", 2, 0, 31, 31) conv2d_6_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_6_addbus_[8])
);
conv2d #("weight/max_polling/6_9.txt", 2, 0, 31, 31) conv2d_6_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_6_addbus_[9])
);
conv2d #("weight/max_polling/6_10.txt", 2, 0, 31, 31) conv2d_6_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_6_addbus_[10])
);
conv2d #("weight/max_polling/6_11.txt", 2, 0, 31, 31) conv2d_6_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_6_addbus_[11])
);
conv2d #("weight/max_polling/6_12.txt", 2, 0, 31, 31) conv2d_6_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_6_addbus_[12])
);
conv2d #("weight/max_polling/6_13.txt", 2, 0, 31, 31) conv2d_6_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_6_addbus_[13])
);
conv2d #("weight/max_polling/6_14.txt", 2, 0, 31, 31) conv2d_6_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_6_addbus_[14])
);
conv2d #("weight/max_polling/6_15.txt", 2, 0, 31, 31) conv2d_6_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_6_addbus_[15])
);
conv2d #("weight/max_polling/6_16.txt", 2, 0, 31, 31) conv2d_6_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_6_addbus_[16])
);
conv2d #("weight/max_polling/6_17.txt", 2, 0, 31, 31) conv2d_6_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_6_addbus_[17])
);
conv2d #("weight/max_polling/6_18.txt", 2, 0, 31, 31) conv2d_6_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_6_addbus_[18])
);
conv2d #("weight/max_polling/6_19.txt", 2, 0, 31, 31) conv2d_6_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_6_addbus_[19])
);
conv2d #("weight/max_polling/6_20.txt", 2, 0, 31, 31) conv2d_6_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_6_addbus_[20])
);
conv2d #("weight/max_polling/6_21.txt", 2, 0, 31, 31) conv2d_6_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_6_addbus_[21])
);
conv2d #("weight/max_polling/6_22.txt", 2, 0, 31, 31) conv2d_6_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_6_addbus_[22])
);
conv2d #("weight/max_polling/6_23.txt", 2, 0, 31, 31) conv2d_6_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_6_addbus_[23])
);
conv2d #("weight/max_polling/6_24.txt", 2, 0, 31, 31) conv2d_6_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_6_addbus_[24])
);
conv2d #("weight/max_polling/6_25.txt", 2, 0, 31, 31) conv2d_6_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_6_addbus_[25])
);
conv2d #("weight/max_polling/6_26.txt", 2, 0, 31, 31) conv2d_6_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_6_addbus_[26])
);
conv2d #("weight/max_polling/6_27.txt", 2, 0, 31, 31) conv2d_6_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_6_addbus_[27])
);
conv2d #("weight/max_polling/6_28.txt", 2, 0, 31, 31) conv2d_6_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_6_addbus_[28])
);
conv2d #("weight/max_polling/6_29.txt", 2, 0, 31, 31) conv2d_6_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_6_addbus_[29])
);
conv2d #("weight/max_polling/6_30.txt", 2, 0, 31, 31) conv2d_6_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_6_addbus_[30])
);
conv2d #("weight/max_polling/6_31.txt", 2, 0, 31, 31) conv2d_6_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_6_addbus_[31])
);
conv2d #("weight/max_polling/6_32.txt", 2, 0, 31, 31) conv2d_6_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_6_addbus_[32])
);
conv2d #("weight/max_polling/6_33.txt", 2, 0, 31, 31) conv2d_6_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_6_addbus_[33])
);
conv2d #("weight/max_polling/6_34.txt", 2, 0, 31, 31) conv2d_6_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_6_addbus_[34])
);
conv2d #("weight/max_polling/6_35.txt", 2, 0, 31, 31) conv2d_6_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_6_addbus_[35])
);
conv2d #("weight/max_polling/6_36.txt", 2, 0, 31, 31) conv2d_6_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_6_addbus_[36])
);
conv2d #("weight/max_polling/6_37.txt", 2, 0, 31, 31) conv2d_6_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_6_addbus_[37])
);
conv2d #("weight/max_polling/6_38.txt", 2, 0, 31, 31) conv2d_6_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_6_addbus_[38])
);
conv2d #("weight/max_polling/6_39.txt", 2, 0, 31, 31) conv2d_6_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_6_addbus_[39])
);
conv2d #("weight/max_polling/6_40.txt", 2, 0, 31, 31) conv2d_6_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_6_addbus_[40])
);
conv2d #("weight/max_polling/6_41.txt", 2, 0, 31, 31) conv2d_6_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_6_addbus_[41])
);
conv2d #("weight/max_polling/6_42.txt", 2, 0, 31, 31) conv2d_6_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_6_addbus_[42])
);
conv2d #("weight/max_polling/6_43.txt", 2, 0, 31, 31) conv2d_6_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_6_addbus_[43])
);
conv2d #("weight/max_polling/6_44.txt", 2, 0, 31, 31) conv2d_6_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_6_addbus_[44])
);
conv2d #("weight/max_polling/6_45.txt", 2, 0, 31, 31) conv2d_6_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_6_addbus_[45])
);
conv2d #("weight/max_polling/6_46.txt", 2, 0, 31, 31) conv2d_6_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_6_addbus_[46])
);
conv2d #("weight/max_polling/6_47.txt", 2, 0, 31, 31) conv2d_6_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_6_addbus_[47])
);
conv2d #("weight/max_polling/6_48.txt", 2, 0, 31, 31) conv2d_6_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_6_addbus_[48])
);
conv2d #("weight/max_polling/6_49.txt", 2, 0, 31, 31) conv2d_6_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_6_addbus_[49])
);
conv2d #("weight/max_polling/6_50.txt", 2, 0, 31, 31) conv2d_6_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_6_addbus_[50])
);
conv2d #("weight/max_polling/6_51.txt", 2, 0, 31, 31) conv2d_6_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_6_addbus_[51])
);
conv2d #("weight/max_polling/6_52.txt", 2, 0, 31, 31) conv2d_6_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_6_addbus_[52])
);
conv2d #("weight/max_polling/6_53.txt", 2, 0, 31, 31) conv2d_6_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_6_addbus_[53])
);
conv2d #("weight/max_polling/6_54.txt", 2, 0, 31, 31) conv2d_6_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_6_addbus_[54])
);
conv2d #("weight/max_polling/6_55.txt", 2, 0, 31, 31) conv2d_6_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_6_addbus_[55])
);
conv2d #("weight/max_polling/6_56.txt", 2, 0, 31, 31) conv2d_6_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_6_addbus_[56])
);
conv2d #("weight/max_polling/6_57.txt", 2, 0, 31, 31) conv2d_6_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_6_addbus_[57])
);
conv2d #("weight/max_polling/6_58.txt", 2, 0, 31, 31) conv2d_6_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_6_addbus_[58])
);
conv2d #("weight/max_polling/6_59.txt", 2, 0, 31, 31) conv2d_6_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_6_addbus_[59])
);
conv2d #("weight/max_polling/6_60.txt", 2, 0, 31, 31) conv2d_6_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_6_addbus_[60])
);
conv2d #("weight/max_polling/6_61.txt", 2, 0, 31, 31) conv2d_6_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_6_addbus_[61])
);
conv2d #("weight/max_polling/6_62.txt", 2, 0, 31, 31) conv2d_6_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_6_addbus_[62])
);
conv2d #("weight/max_polling/6_63.txt", 2, 0, 31, 31) conv2d_6_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_6_addbus_[63])
);
sum_64 #(15) sum_6( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[6]), 
        .data_in_0(_6_addbus_[0]), 
        .data_in_1(_6_addbus_[1]), 
        .data_in_2(_6_addbus_[2]), 
        .data_in_3(_6_addbus_[3]), 
        .data_in_4(_6_addbus_[4]), 
        .data_in_5(_6_addbus_[5]), 
        .data_in_6(_6_addbus_[6]), 
        .data_in_7(_6_addbus_[7]), 
        .data_in_8(_6_addbus_[8]), 
        .data_in_9(_6_addbus_[9]), 
        .data_in_10(_6_addbus_[10]), 
        .data_in_11(_6_addbus_[11]), 
        .data_in_12(_6_addbus_[12]), 
        .data_in_13(_6_addbus_[13]), 
        .data_in_14(_6_addbus_[14]), 
        .data_in_15(_6_addbus_[15]), 
        .data_in_16(_6_addbus_[16]), 
        .data_in_17(_6_addbus_[17]), 
        .data_in_18(_6_addbus_[18]), 
        .data_in_19(_6_addbus_[19]), 
        .data_in_20(_6_addbus_[20]), 
        .data_in_21(_6_addbus_[21]), 
        .data_in_22(_6_addbus_[22]), 
        .data_in_23(_6_addbus_[23]), 
        .data_in_24(_6_addbus_[24]), 
        .data_in_25(_6_addbus_[25]), 
        .data_in_26(_6_addbus_[26]), 
        .data_in_27(_6_addbus_[27]), 
        .data_in_28(_6_addbus_[28]), 
        .data_in_29(_6_addbus_[29]), 
        .data_in_30(_6_addbus_[30]), 
        .data_in_31(_6_addbus_[31]), 
        .data_in_32(_6_addbus_[32]), 
        .data_in_33(_6_addbus_[33]), 
        .data_in_34(_6_addbus_[34]), 
        .data_in_35(_6_addbus_[35]), 
        .data_in_36(_6_addbus_[36]), 
        .data_in_37(_6_addbus_[37]), 
        .data_in_38(_6_addbus_[38]), 
        .data_in_39(_6_addbus_[39]), 
        .data_in_40(_6_addbus_[40]), 
        .data_in_41(_6_addbus_[41]), 
        .data_in_42(_6_addbus_[42]), 
        .data_in_43(_6_addbus_[43]), 
        .data_in_44(_6_addbus_[44]), 
        .data_in_45(_6_addbus_[45]), 
        .data_in_46(_6_addbus_[46]), 
        .data_in_47(_6_addbus_[47]), 
        .data_in_48(_6_addbus_[48]), 
        .data_in_49(_6_addbus_[49]), 
        .data_in_50(_6_addbus_[50]), 
        .data_in_51(_6_addbus_[51]), 
        .data_in_52(_6_addbus_[52]), 
        .data_in_53(_6_addbus_[53]), 
        .data_in_54(_6_addbus_[54]), 
        .data_in_55(_6_addbus_[55]), 
        .data_in_56(_6_addbus_[56]), 
        .data_in_57(_6_addbus_[57]), 
        .data_in_58(_6_addbus_[58]), 
        .data_in_59(_6_addbus_[59]), 
        .data_in_60(_6_addbus_[60]), 
        .data_in_61(_6_addbus_[61]), 
        .data_in_62(_6_addbus_[62]), 
        .data_in_63(_6_addbus_[63]) 
); 
wire [31:0] _7_addbus_[63:0];    
conv2d #("weight/max_polling/7_0.txt", 2, 0, 31, 31) conv2d_7_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_7_addbus_[0])
);
conv2d #("weight/max_polling/7_1.txt", 2, 0, 31, 31) conv2d_7_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_7_addbus_[1])
);
conv2d #("weight/max_polling/7_2.txt", 2, 0, 31, 31) conv2d_7_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_7_addbus_[2])
);
conv2d #("weight/max_polling/7_3.txt", 2, 0, 31, 31) conv2d_7_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_7_addbus_[3])
);
conv2d #("weight/max_polling/7_4.txt", 2, 0, 31, 31) conv2d_7_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_7_addbus_[4])
);
conv2d #("weight/max_polling/7_5.txt", 2, 0, 31, 31) conv2d_7_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_7_addbus_[5])
);
conv2d #("weight/max_polling/7_6.txt", 2, 0, 31, 31) conv2d_7_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_7_addbus_[6])
);
conv2d #("weight/max_polling/7_7.txt", 2, 0, 31, 31) conv2d_7_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_7_addbus_[7])
);
conv2d #("weight/max_polling/7_8.txt", 2, 0, 31, 31) conv2d_7_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_7_addbus_[8])
);
conv2d #("weight/max_polling/7_9.txt", 2, 0, 31, 31) conv2d_7_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_7_addbus_[9])
);
conv2d #("weight/max_polling/7_10.txt", 2, 0, 31, 31) conv2d_7_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_7_addbus_[10])
);
conv2d #("weight/max_polling/7_11.txt", 2, 0, 31, 31) conv2d_7_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_7_addbus_[11])
);
conv2d #("weight/max_polling/7_12.txt", 2, 0, 31, 31) conv2d_7_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_7_addbus_[12])
);
conv2d #("weight/max_polling/7_13.txt", 2, 0, 31, 31) conv2d_7_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_7_addbus_[13])
);
conv2d #("weight/max_polling/7_14.txt", 2, 0, 31, 31) conv2d_7_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_7_addbus_[14])
);
conv2d #("weight/max_polling/7_15.txt", 2, 0, 31, 31) conv2d_7_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_7_addbus_[15])
);
conv2d #("weight/max_polling/7_16.txt", 2, 0, 31, 31) conv2d_7_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_7_addbus_[16])
);
conv2d #("weight/max_polling/7_17.txt", 2, 0, 31, 31) conv2d_7_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_7_addbus_[17])
);
conv2d #("weight/max_polling/7_18.txt", 2, 0, 31, 31) conv2d_7_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_7_addbus_[18])
);
conv2d #("weight/max_polling/7_19.txt", 2, 0, 31, 31) conv2d_7_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_7_addbus_[19])
);
conv2d #("weight/max_polling/7_20.txt", 2, 0, 31, 31) conv2d_7_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_7_addbus_[20])
);
conv2d #("weight/max_polling/7_21.txt", 2, 0, 31, 31) conv2d_7_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_7_addbus_[21])
);
conv2d #("weight/max_polling/7_22.txt", 2, 0, 31, 31) conv2d_7_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_7_addbus_[22])
);
conv2d #("weight/max_polling/7_23.txt", 2, 0, 31, 31) conv2d_7_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_7_addbus_[23])
);
conv2d #("weight/max_polling/7_24.txt", 2, 0, 31, 31) conv2d_7_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_7_addbus_[24])
);
conv2d #("weight/max_polling/7_25.txt", 2, 0, 31, 31) conv2d_7_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_7_addbus_[25])
);
conv2d #("weight/max_polling/7_26.txt", 2, 0, 31, 31) conv2d_7_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_7_addbus_[26])
);
conv2d #("weight/max_polling/7_27.txt", 2, 0, 31, 31) conv2d_7_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_7_addbus_[27])
);
conv2d #("weight/max_polling/7_28.txt", 2, 0, 31, 31) conv2d_7_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_7_addbus_[28])
);
conv2d #("weight/max_polling/7_29.txt", 2, 0, 31, 31) conv2d_7_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_7_addbus_[29])
);
conv2d #("weight/max_polling/7_30.txt", 2, 0, 31, 31) conv2d_7_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_7_addbus_[30])
);
conv2d #("weight/max_polling/7_31.txt", 2, 0, 31, 31) conv2d_7_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_7_addbus_[31])
);
conv2d #("weight/max_polling/7_32.txt", 2, 0, 31, 31) conv2d_7_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_7_addbus_[32])
);
conv2d #("weight/max_polling/7_33.txt", 2, 0, 31, 31) conv2d_7_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_7_addbus_[33])
);
conv2d #("weight/max_polling/7_34.txt", 2, 0, 31, 31) conv2d_7_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_7_addbus_[34])
);
conv2d #("weight/max_polling/7_35.txt", 2, 0, 31, 31) conv2d_7_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_7_addbus_[35])
);
conv2d #("weight/max_polling/7_36.txt", 2, 0, 31, 31) conv2d_7_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_7_addbus_[36])
);
conv2d #("weight/max_polling/7_37.txt", 2, 0, 31, 31) conv2d_7_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_7_addbus_[37])
);
conv2d #("weight/max_polling/7_38.txt", 2, 0, 31, 31) conv2d_7_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_7_addbus_[38])
);
conv2d #("weight/max_polling/7_39.txt", 2, 0, 31, 31) conv2d_7_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_7_addbus_[39])
);
conv2d #("weight/max_polling/7_40.txt", 2, 0, 31, 31) conv2d_7_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_7_addbus_[40])
);
conv2d #("weight/max_polling/7_41.txt", 2, 0, 31, 31) conv2d_7_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_7_addbus_[41])
);
conv2d #("weight/max_polling/7_42.txt", 2, 0, 31, 31) conv2d_7_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_7_addbus_[42])
);
conv2d #("weight/max_polling/7_43.txt", 2, 0, 31, 31) conv2d_7_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_7_addbus_[43])
);
conv2d #("weight/max_polling/7_44.txt", 2, 0, 31, 31) conv2d_7_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_7_addbus_[44])
);
conv2d #("weight/max_polling/7_45.txt", 2, 0, 31, 31) conv2d_7_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_7_addbus_[45])
);
conv2d #("weight/max_polling/7_46.txt", 2, 0, 31, 31) conv2d_7_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_7_addbus_[46])
);
conv2d #("weight/max_polling/7_47.txt", 2, 0, 31, 31) conv2d_7_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_7_addbus_[47])
);
conv2d #("weight/max_polling/7_48.txt", 2, 0, 31, 31) conv2d_7_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_7_addbus_[48])
);
conv2d #("weight/max_polling/7_49.txt", 2, 0, 31, 31) conv2d_7_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_7_addbus_[49])
);
conv2d #("weight/max_polling/7_50.txt", 2, 0, 31, 31) conv2d_7_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_7_addbus_[50])
);
conv2d #("weight/max_polling/7_51.txt", 2, 0, 31, 31) conv2d_7_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_7_addbus_[51])
);
conv2d #("weight/max_polling/7_52.txt", 2, 0, 31, 31) conv2d_7_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_7_addbus_[52])
);
conv2d #("weight/max_polling/7_53.txt", 2, 0, 31, 31) conv2d_7_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_7_addbus_[53])
);
conv2d #("weight/max_polling/7_54.txt", 2, 0, 31, 31) conv2d_7_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_7_addbus_[54])
);
conv2d #("weight/max_polling/7_55.txt", 2, 0, 31, 31) conv2d_7_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_7_addbus_[55])
);
conv2d #("weight/max_polling/7_56.txt", 2, 0, 31, 31) conv2d_7_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_7_addbus_[56])
);
conv2d #("weight/max_polling/7_57.txt", 2, 0, 31, 31) conv2d_7_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_7_addbus_[57])
);
conv2d #("weight/max_polling/7_58.txt", 2, 0, 31, 31) conv2d_7_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_7_addbus_[58])
);
conv2d #("weight/max_polling/7_59.txt", 2, 0, 31, 31) conv2d_7_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_7_addbus_[59])
);
conv2d #("weight/max_polling/7_60.txt", 2, 0, 31, 31) conv2d_7_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_7_addbus_[60])
);
conv2d #("weight/max_polling/7_61.txt", 2, 0, 31, 31) conv2d_7_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_7_addbus_[61])
);
conv2d #("weight/max_polling/7_62.txt", 2, 0, 31, 31) conv2d_7_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_7_addbus_[62])
);
conv2d #("weight/max_polling/7_63.txt", 2, 0, 31, 31) conv2d_7_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_7_addbus_[63])
);
sum_64 #(15) sum_7( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[7]), 
        .data_in_0(_7_addbus_[0]), 
        .data_in_1(_7_addbus_[1]), 
        .data_in_2(_7_addbus_[2]), 
        .data_in_3(_7_addbus_[3]), 
        .data_in_4(_7_addbus_[4]), 
        .data_in_5(_7_addbus_[5]), 
        .data_in_6(_7_addbus_[6]), 
        .data_in_7(_7_addbus_[7]), 
        .data_in_8(_7_addbus_[8]), 
        .data_in_9(_7_addbus_[9]), 
        .data_in_10(_7_addbus_[10]), 
        .data_in_11(_7_addbus_[11]), 
        .data_in_12(_7_addbus_[12]), 
        .data_in_13(_7_addbus_[13]), 
        .data_in_14(_7_addbus_[14]), 
        .data_in_15(_7_addbus_[15]), 
        .data_in_16(_7_addbus_[16]), 
        .data_in_17(_7_addbus_[17]), 
        .data_in_18(_7_addbus_[18]), 
        .data_in_19(_7_addbus_[19]), 
        .data_in_20(_7_addbus_[20]), 
        .data_in_21(_7_addbus_[21]), 
        .data_in_22(_7_addbus_[22]), 
        .data_in_23(_7_addbus_[23]), 
        .data_in_24(_7_addbus_[24]), 
        .data_in_25(_7_addbus_[25]), 
        .data_in_26(_7_addbus_[26]), 
        .data_in_27(_7_addbus_[27]), 
        .data_in_28(_7_addbus_[28]), 
        .data_in_29(_7_addbus_[29]), 
        .data_in_30(_7_addbus_[30]), 
        .data_in_31(_7_addbus_[31]), 
        .data_in_32(_7_addbus_[32]), 
        .data_in_33(_7_addbus_[33]), 
        .data_in_34(_7_addbus_[34]), 
        .data_in_35(_7_addbus_[35]), 
        .data_in_36(_7_addbus_[36]), 
        .data_in_37(_7_addbus_[37]), 
        .data_in_38(_7_addbus_[38]), 
        .data_in_39(_7_addbus_[39]), 
        .data_in_40(_7_addbus_[40]), 
        .data_in_41(_7_addbus_[41]), 
        .data_in_42(_7_addbus_[42]), 
        .data_in_43(_7_addbus_[43]), 
        .data_in_44(_7_addbus_[44]), 
        .data_in_45(_7_addbus_[45]), 
        .data_in_46(_7_addbus_[46]), 
        .data_in_47(_7_addbus_[47]), 
        .data_in_48(_7_addbus_[48]), 
        .data_in_49(_7_addbus_[49]), 
        .data_in_50(_7_addbus_[50]), 
        .data_in_51(_7_addbus_[51]), 
        .data_in_52(_7_addbus_[52]), 
        .data_in_53(_7_addbus_[53]), 
        .data_in_54(_7_addbus_[54]), 
        .data_in_55(_7_addbus_[55]), 
        .data_in_56(_7_addbus_[56]), 
        .data_in_57(_7_addbus_[57]), 
        .data_in_58(_7_addbus_[58]), 
        .data_in_59(_7_addbus_[59]), 
        .data_in_60(_7_addbus_[60]), 
        .data_in_61(_7_addbus_[61]), 
        .data_in_62(_7_addbus_[62]), 
        .data_in_63(_7_addbus_[63]) 
); 
wire [31:0] _8_addbus_[63:0];    
conv2d #("weight/max_polling/8_0.txt", 2, 0, 31, 31) conv2d_8_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_8_addbus_[0])
);
conv2d #("weight/max_polling/8_1.txt", 2, 0, 31, 31) conv2d_8_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_8_addbus_[1])
);
conv2d #("weight/max_polling/8_2.txt", 2, 0, 31, 31) conv2d_8_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_8_addbus_[2])
);
conv2d #("weight/max_polling/8_3.txt", 2, 0, 31, 31) conv2d_8_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_8_addbus_[3])
);
conv2d #("weight/max_polling/8_4.txt", 2, 0, 31, 31) conv2d_8_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_8_addbus_[4])
);
conv2d #("weight/max_polling/8_5.txt", 2, 0, 31, 31) conv2d_8_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_8_addbus_[5])
);
conv2d #("weight/max_polling/8_6.txt", 2, 0, 31, 31) conv2d_8_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_8_addbus_[6])
);
conv2d #("weight/max_polling/8_7.txt", 2, 0, 31, 31) conv2d_8_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_8_addbus_[7])
);
conv2d #("weight/max_polling/8_8.txt", 2, 0, 31, 31) conv2d_8_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_8_addbus_[8])
);
conv2d #("weight/max_polling/8_9.txt", 2, 0, 31, 31) conv2d_8_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_8_addbus_[9])
);
conv2d #("weight/max_polling/8_10.txt", 2, 0, 31, 31) conv2d_8_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_8_addbus_[10])
);
conv2d #("weight/max_polling/8_11.txt", 2, 0, 31, 31) conv2d_8_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_8_addbus_[11])
);
conv2d #("weight/max_polling/8_12.txt", 2, 0, 31, 31) conv2d_8_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_8_addbus_[12])
);
conv2d #("weight/max_polling/8_13.txt", 2, 0, 31, 31) conv2d_8_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_8_addbus_[13])
);
conv2d #("weight/max_polling/8_14.txt", 2, 0, 31, 31) conv2d_8_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_8_addbus_[14])
);
conv2d #("weight/max_polling/8_15.txt", 2, 0, 31, 31) conv2d_8_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_8_addbus_[15])
);
conv2d #("weight/max_polling/8_16.txt", 2, 0, 31, 31) conv2d_8_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_8_addbus_[16])
);
conv2d #("weight/max_polling/8_17.txt", 2, 0, 31, 31) conv2d_8_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_8_addbus_[17])
);
conv2d #("weight/max_polling/8_18.txt", 2, 0, 31, 31) conv2d_8_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_8_addbus_[18])
);
conv2d #("weight/max_polling/8_19.txt", 2, 0, 31, 31) conv2d_8_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_8_addbus_[19])
);
conv2d #("weight/max_polling/8_20.txt", 2, 0, 31, 31) conv2d_8_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_8_addbus_[20])
);
conv2d #("weight/max_polling/8_21.txt", 2, 0, 31, 31) conv2d_8_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_8_addbus_[21])
);
conv2d #("weight/max_polling/8_22.txt", 2, 0, 31, 31) conv2d_8_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_8_addbus_[22])
);
conv2d #("weight/max_polling/8_23.txt", 2, 0, 31, 31) conv2d_8_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_8_addbus_[23])
);
conv2d #("weight/max_polling/8_24.txt", 2, 0, 31, 31) conv2d_8_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_8_addbus_[24])
);
conv2d #("weight/max_polling/8_25.txt", 2, 0, 31, 31) conv2d_8_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_8_addbus_[25])
);
conv2d #("weight/max_polling/8_26.txt", 2, 0, 31, 31) conv2d_8_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_8_addbus_[26])
);
conv2d #("weight/max_polling/8_27.txt", 2, 0, 31, 31) conv2d_8_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_8_addbus_[27])
);
conv2d #("weight/max_polling/8_28.txt", 2, 0, 31, 31) conv2d_8_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_8_addbus_[28])
);
conv2d #("weight/max_polling/8_29.txt", 2, 0, 31, 31) conv2d_8_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_8_addbus_[29])
);
conv2d #("weight/max_polling/8_30.txt", 2, 0, 31, 31) conv2d_8_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_8_addbus_[30])
);
conv2d #("weight/max_polling/8_31.txt", 2, 0, 31, 31) conv2d_8_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_8_addbus_[31])
);
conv2d #("weight/max_polling/8_32.txt", 2, 0, 31, 31) conv2d_8_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_8_addbus_[32])
);
conv2d #("weight/max_polling/8_33.txt", 2, 0, 31, 31) conv2d_8_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_8_addbus_[33])
);
conv2d #("weight/max_polling/8_34.txt", 2, 0, 31, 31) conv2d_8_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_8_addbus_[34])
);
conv2d #("weight/max_polling/8_35.txt", 2, 0, 31, 31) conv2d_8_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_8_addbus_[35])
);
conv2d #("weight/max_polling/8_36.txt", 2, 0, 31, 31) conv2d_8_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_8_addbus_[36])
);
conv2d #("weight/max_polling/8_37.txt", 2, 0, 31, 31) conv2d_8_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_8_addbus_[37])
);
conv2d #("weight/max_polling/8_38.txt", 2, 0, 31, 31) conv2d_8_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_8_addbus_[38])
);
conv2d #("weight/max_polling/8_39.txt", 2, 0, 31, 31) conv2d_8_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_8_addbus_[39])
);
conv2d #("weight/max_polling/8_40.txt", 2, 0, 31, 31) conv2d_8_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_8_addbus_[40])
);
conv2d #("weight/max_polling/8_41.txt", 2, 0, 31, 31) conv2d_8_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_8_addbus_[41])
);
conv2d #("weight/max_polling/8_42.txt", 2, 0, 31, 31) conv2d_8_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_8_addbus_[42])
);
conv2d #("weight/max_polling/8_43.txt", 2, 0, 31, 31) conv2d_8_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_8_addbus_[43])
);
conv2d #("weight/max_polling/8_44.txt", 2, 0, 31, 31) conv2d_8_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_8_addbus_[44])
);
conv2d #("weight/max_polling/8_45.txt", 2, 0, 31, 31) conv2d_8_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_8_addbus_[45])
);
conv2d #("weight/max_polling/8_46.txt", 2, 0, 31, 31) conv2d_8_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_8_addbus_[46])
);
conv2d #("weight/max_polling/8_47.txt", 2, 0, 31, 31) conv2d_8_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_8_addbus_[47])
);
conv2d #("weight/max_polling/8_48.txt", 2, 0, 31, 31) conv2d_8_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_8_addbus_[48])
);
conv2d #("weight/max_polling/8_49.txt", 2, 0, 31, 31) conv2d_8_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_8_addbus_[49])
);
conv2d #("weight/max_polling/8_50.txt", 2, 0, 31, 31) conv2d_8_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_8_addbus_[50])
);
conv2d #("weight/max_polling/8_51.txt", 2, 0, 31, 31) conv2d_8_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_8_addbus_[51])
);
conv2d #("weight/max_polling/8_52.txt", 2, 0, 31, 31) conv2d_8_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_8_addbus_[52])
);
conv2d #("weight/max_polling/8_53.txt", 2, 0, 31, 31) conv2d_8_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_8_addbus_[53])
);
conv2d #("weight/max_polling/8_54.txt", 2, 0, 31, 31) conv2d_8_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_8_addbus_[54])
);
conv2d #("weight/max_polling/8_55.txt", 2, 0, 31, 31) conv2d_8_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_8_addbus_[55])
);
conv2d #("weight/max_polling/8_56.txt", 2, 0, 31, 31) conv2d_8_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_8_addbus_[56])
);
conv2d #("weight/max_polling/8_57.txt", 2, 0, 31, 31) conv2d_8_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_8_addbus_[57])
);
conv2d #("weight/max_polling/8_58.txt", 2, 0, 31, 31) conv2d_8_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_8_addbus_[58])
);
conv2d #("weight/max_polling/8_59.txt", 2, 0, 31, 31) conv2d_8_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_8_addbus_[59])
);
conv2d #("weight/max_polling/8_60.txt", 2, 0, 31, 31) conv2d_8_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_8_addbus_[60])
);
conv2d #("weight/max_polling/8_61.txt", 2, 0, 31, 31) conv2d_8_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_8_addbus_[61])
);
conv2d #("weight/max_polling/8_62.txt", 2, 0, 31, 31) conv2d_8_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_8_addbus_[62])
);
conv2d #("weight/max_polling/8_63.txt", 2, 0, 31, 31) conv2d_8_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_8_addbus_[63])
);
sum_64 #(15) sum_8( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[8]), 
        .data_in_0(_8_addbus_[0]), 
        .data_in_1(_8_addbus_[1]), 
        .data_in_2(_8_addbus_[2]), 
        .data_in_3(_8_addbus_[3]), 
        .data_in_4(_8_addbus_[4]), 
        .data_in_5(_8_addbus_[5]), 
        .data_in_6(_8_addbus_[6]), 
        .data_in_7(_8_addbus_[7]), 
        .data_in_8(_8_addbus_[8]), 
        .data_in_9(_8_addbus_[9]), 
        .data_in_10(_8_addbus_[10]), 
        .data_in_11(_8_addbus_[11]), 
        .data_in_12(_8_addbus_[12]), 
        .data_in_13(_8_addbus_[13]), 
        .data_in_14(_8_addbus_[14]), 
        .data_in_15(_8_addbus_[15]), 
        .data_in_16(_8_addbus_[16]), 
        .data_in_17(_8_addbus_[17]), 
        .data_in_18(_8_addbus_[18]), 
        .data_in_19(_8_addbus_[19]), 
        .data_in_20(_8_addbus_[20]), 
        .data_in_21(_8_addbus_[21]), 
        .data_in_22(_8_addbus_[22]), 
        .data_in_23(_8_addbus_[23]), 
        .data_in_24(_8_addbus_[24]), 
        .data_in_25(_8_addbus_[25]), 
        .data_in_26(_8_addbus_[26]), 
        .data_in_27(_8_addbus_[27]), 
        .data_in_28(_8_addbus_[28]), 
        .data_in_29(_8_addbus_[29]), 
        .data_in_30(_8_addbus_[30]), 
        .data_in_31(_8_addbus_[31]), 
        .data_in_32(_8_addbus_[32]), 
        .data_in_33(_8_addbus_[33]), 
        .data_in_34(_8_addbus_[34]), 
        .data_in_35(_8_addbus_[35]), 
        .data_in_36(_8_addbus_[36]), 
        .data_in_37(_8_addbus_[37]), 
        .data_in_38(_8_addbus_[38]), 
        .data_in_39(_8_addbus_[39]), 
        .data_in_40(_8_addbus_[40]), 
        .data_in_41(_8_addbus_[41]), 
        .data_in_42(_8_addbus_[42]), 
        .data_in_43(_8_addbus_[43]), 
        .data_in_44(_8_addbus_[44]), 
        .data_in_45(_8_addbus_[45]), 
        .data_in_46(_8_addbus_[46]), 
        .data_in_47(_8_addbus_[47]), 
        .data_in_48(_8_addbus_[48]), 
        .data_in_49(_8_addbus_[49]), 
        .data_in_50(_8_addbus_[50]), 
        .data_in_51(_8_addbus_[51]), 
        .data_in_52(_8_addbus_[52]), 
        .data_in_53(_8_addbus_[53]), 
        .data_in_54(_8_addbus_[54]), 
        .data_in_55(_8_addbus_[55]), 
        .data_in_56(_8_addbus_[56]), 
        .data_in_57(_8_addbus_[57]), 
        .data_in_58(_8_addbus_[58]), 
        .data_in_59(_8_addbus_[59]), 
        .data_in_60(_8_addbus_[60]), 
        .data_in_61(_8_addbus_[61]), 
        .data_in_62(_8_addbus_[62]), 
        .data_in_63(_8_addbus_[63]) 
); 
wire [31:0] _9_addbus_[63:0];    
conv2d #("weight/max_polling/9_0.txt", 2, 0, 31, 31) conv2d_9_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_9_addbus_[0])
);
conv2d #("weight/max_polling/9_1.txt", 2, 0, 31, 31) conv2d_9_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_9_addbus_[1])
);
conv2d #("weight/max_polling/9_2.txt", 2, 0, 31, 31) conv2d_9_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_9_addbus_[2])
);
conv2d #("weight/max_polling/9_3.txt", 2, 0, 31, 31) conv2d_9_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_9_addbus_[3])
);
conv2d #("weight/max_polling/9_4.txt", 2, 0, 31, 31) conv2d_9_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_9_addbus_[4])
);
conv2d #("weight/max_polling/9_5.txt", 2, 0, 31, 31) conv2d_9_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_9_addbus_[5])
);
conv2d #("weight/max_polling/9_6.txt", 2, 0, 31, 31) conv2d_9_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_9_addbus_[6])
);
conv2d #("weight/max_polling/9_7.txt", 2, 0, 31, 31) conv2d_9_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_9_addbus_[7])
);
conv2d #("weight/max_polling/9_8.txt", 2, 0, 31, 31) conv2d_9_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_9_addbus_[8])
);
conv2d #("weight/max_polling/9_9.txt", 2, 0, 31, 31) conv2d_9_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_9_addbus_[9])
);
conv2d #("weight/max_polling/9_10.txt", 2, 0, 31, 31) conv2d_9_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_9_addbus_[10])
);
conv2d #("weight/max_polling/9_11.txt", 2, 0, 31, 31) conv2d_9_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_9_addbus_[11])
);
conv2d #("weight/max_polling/9_12.txt", 2, 0, 31, 31) conv2d_9_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_9_addbus_[12])
);
conv2d #("weight/max_polling/9_13.txt", 2, 0, 31, 31) conv2d_9_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_9_addbus_[13])
);
conv2d #("weight/max_polling/9_14.txt", 2, 0, 31, 31) conv2d_9_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_9_addbus_[14])
);
conv2d #("weight/max_polling/9_15.txt", 2, 0, 31, 31) conv2d_9_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_9_addbus_[15])
);
conv2d #("weight/max_polling/9_16.txt", 2, 0, 31, 31) conv2d_9_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_9_addbus_[16])
);
conv2d #("weight/max_polling/9_17.txt", 2, 0, 31, 31) conv2d_9_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_9_addbus_[17])
);
conv2d #("weight/max_polling/9_18.txt", 2, 0, 31, 31) conv2d_9_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_9_addbus_[18])
);
conv2d #("weight/max_polling/9_19.txt", 2, 0, 31, 31) conv2d_9_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_9_addbus_[19])
);
conv2d #("weight/max_polling/9_20.txt", 2, 0, 31, 31) conv2d_9_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_9_addbus_[20])
);
conv2d #("weight/max_polling/9_21.txt", 2, 0, 31, 31) conv2d_9_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_9_addbus_[21])
);
conv2d #("weight/max_polling/9_22.txt", 2, 0, 31, 31) conv2d_9_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_9_addbus_[22])
);
conv2d #("weight/max_polling/9_23.txt", 2, 0, 31, 31) conv2d_9_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_9_addbus_[23])
);
conv2d #("weight/max_polling/9_24.txt", 2, 0, 31, 31) conv2d_9_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_9_addbus_[24])
);
conv2d #("weight/max_polling/9_25.txt", 2, 0, 31, 31) conv2d_9_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_9_addbus_[25])
);
conv2d #("weight/max_polling/9_26.txt", 2, 0, 31, 31) conv2d_9_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_9_addbus_[26])
);
conv2d #("weight/max_polling/9_27.txt", 2, 0, 31, 31) conv2d_9_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_9_addbus_[27])
);
conv2d #("weight/max_polling/9_28.txt", 2, 0, 31, 31) conv2d_9_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_9_addbus_[28])
);
conv2d #("weight/max_polling/9_29.txt", 2, 0, 31, 31) conv2d_9_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_9_addbus_[29])
);
conv2d #("weight/max_polling/9_30.txt", 2, 0, 31, 31) conv2d_9_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_9_addbus_[30])
);
conv2d #("weight/max_polling/9_31.txt", 2, 0, 31, 31) conv2d_9_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_9_addbus_[31])
);
conv2d #("weight/max_polling/9_32.txt", 2, 0, 31, 31) conv2d_9_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_9_addbus_[32])
);
conv2d #("weight/max_polling/9_33.txt", 2, 0, 31, 31) conv2d_9_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_9_addbus_[33])
);
conv2d #("weight/max_polling/9_34.txt", 2, 0, 31, 31) conv2d_9_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_9_addbus_[34])
);
conv2d #("weight/max_polling/9_35.txt", 2, 0, 31, 31) conv2d_9_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_9_addbus_[35])
);
conv2d #("weight/max_polling/9_36.txt", 2, 0, 31, 31) conv2d_9_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_9_addbus_[36])
);
conv2d #("weight/max_polling/9_37.txt", 2, 0, 31, 31) conv2d_9_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_9_addbus_[37])
);
conv2d #("weight/max_polling/9_38.txt", 2, 0, 31, 31) conv2d_9_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_9_addbus_[38])
);
conv2d #("weight/max_polling/9_39.txt", 2, 0, 31, 31) conv2d_9_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_9_addbus_[39])
);
conv2d #("weight/max_polling/9_40.txt", 2, 0, 31, 31) conv2d_9_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_9_addbus_[40])
);
conv2d #("weight/max_polling/9_41.txt", 2, 0, 31, 31) conv2d_9_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_9_addbus_[41])
);
conv2d #("weight/max_polling/9_42.txt", 2, 0, 31, 31) conv2d_9_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_9_addbus_[42])
);
conv2d #("weight/max_polling/9_43.txt", 2, 0, 31, 31) conv2d_9_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_9_addbus_[43])
);
conv2d #("weight/max_polling/9_44.txt", 2, 0, 31, 31) conv2d_9_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_9_addbus_[44])
);
conv2d #("weight/max_polling/9_45.txt", 2, 0, 31, 31) conv2d_9_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_9_addbus_[45])
);
conv2d #("weight/max_polling/9_46.txt", 2, 0, 31, 31) conv2d_9_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_9_addbus_[46])
);
conv2d #("weight/max_polling/9_47.txt", 2, 0, 31, 31) conv2d_9_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_9_addbus_[47])
);
conv2d #("weight/max_polling/9_48.txt", 2, 0, 31, 31) conv2d_9_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_9_addbus_[48])
);
conv2d #("weight/max_polling/9_49.txt", 2, 0, 31, 31) conv2d_9_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_9_addbus_[49])
);
conv2d #("weight/max_polling/9_50.txt", 2, 0, 31, 31) conv2d_9_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_9_addbus_[50])
);
conv2d #("weight/max_polling/9_51.txt", 2, 0, 31, 31) conv2d_9_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_9_addbus_[51])
);
conv2d #("weight/max_polling/9_52.txt", 2, 0, 31, 31) conv2d_9_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_9_addbus_[52])
);
conv2d #("weight/max_polling/9_53.txt", 2, 0, 31, 31) conv2d_9_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_9_addbus_[53])
);
conv2d #("weight/max_polling/9_54.txt", 2, 0, 31, 31) conv2d_9_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_9_addbus_[54])
);
conv2d #("weight/max_polling/9_55.txt", 2, 0, 31, 31) conv2d_9_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_9_addbus_[55])
);
conv2d #("weight/max_polling/9_56.txt", 2, 0, 31, 31) conv2d_9_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_9_addbus_[56])
);
conv2d #("weight/max_polling/9_57.txt", 2, 0, 31, 31) conv2d_9_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_9_addbus_[57])
);
conv2d #("weight/max_polling/9_58.txt", 2, 0, 31, 31) conv2d_9_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_9_addbus_[58])
);
conv2d #("weight/max_polling/9_59.txt", 2, 0, 31, 31) conv2d_9_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_9_addbus_[59])
);
conv2d #("weight/max_polling/9_60.txt", 2, 0, 31, 31) conv2d_9_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_9_addbus_[60])
);
conv2d #("weight/max_polling/9_61.txt", 2, 0, 31, 31) conv2d_9_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_9_addbus_[61])
);
conv2d #("weight/max_polling/9_62.txt", 2, 0, 31, 31) conv2d_9_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_9_addbus_[62])
);
conv2d #("weight/max_polling/9_63.txt", 2, 0, 31, 31) conv2d_9_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_9_addbus_[63])
);
sum_64 #(15) sum_9( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[9]), 
        .data_in_0(_9_addbus_[0]), 
        .data_in_1(_9_addbus_[1]), 
        .data_in_2(_9_addbus_[2]), 
        .data_in_3(_9_addbus_[3]), 
        .data_in_4(_9_addbus_[4]), 
        .data_in_5(_9_addbus_[5]), 
        .data_in_6(_9_addbus_[6]), 
        .data_in_7(_9_addbus_[7]), 
        .data_in_8(_9_addbus_[8]), 
        .data_in_9(_9_addbus_[9]), 
        .data_in_10(_9_addbus_[10]), 
        .data_in_11(_9_addbus_[11]), 
        .data_in_12(_9_addbus_[12]), 
        .data_in_13(_9_addbus_[13]), 
        .data_in_14(_9_addbus_[14]), 
        .data_in_15(_9_addbus_[15]), 
        .data_in_16(_9_addbus_[16]), 
        .data_in_17(_9_addbus_[17]), 
        .data_in_18(_9_addbus_[18]), 
        .data_in_19(_9_addbus_[19]), 
        .data_in_20(_9_addbus_[20]), 
        .data_in_21(_9_addbus_[21]), 
        .data_in_22(_9_addbus_[22]), 
        .data_in_23(_9_addbus_[23]), 
        .data_in_24(_9_addbus_[24]), 
        .data_in_25(_9_addbus_[25]), 
        .data_in_26(_9_addbus_[26]), 
        .data_in_27(_9_addbus_[27]), 
        .data_in_28(_9_addbus_[28]), 
        .data_in_29(_9_addbus_[29]), 
        .data_in_30(_9_addbus_[30]), 
        .data_in_31(_9_addbus_[31]), 
        .data_in_32(_9_addbus_[32]), 
        .data_in_33(_9_addbus_[33]), 
        .data_in_34(_9_addbus_[34]), 
        .data_in_35(_9_addbus_[35]), 
        .data_in_36(_9_addbus_[36]), 
        .data_in_37(_9_addbus_[37]), 
        .data_in_38(_9_addbus_[38]), 
        .data_in_39(_9_addbus_[39]), 
        .data_in_40(_9_addbus_[40]), 
        .data_in_41(_9_addbus_[41]), 
        .data_in_42(_9_addbus_[42]), 
        .data_in_43(_9_addbus_[43]), 
        .data_in_44(_9_addbus_[44]), 
        .data_in_45(_9_addbus_[45]), 
        .data_in_46(_9_addbus_[46]), 
        .data_in_47(_9_addbus_[47]), 
        .data_in_48(_9_addbus_[48]), 
        .data_in_49(_9_addbus_[49]), 
        .data_in_50(_9_addbus_[50]), 
        .data_in_51(_9_addbus_[51]), 
        .data_in_52(_9_addbus_[52]), 
        .data_in_53(_9_addbus_[53]), 
        .data_in_54(_9_addbus_[54]), 
        .data_in_55(_9_addbus_[55]), 
        .data_in_56(_9_addbus_[56]), 
        .data_in_57(_9_addbus_[57]), 
        .data_in_58(_9_addbus_[58]), 
        .data_in_59(_9_addbus_[59]), 
        .data_in_60(_9_addbus_[60]), 
        .data_in_61(_9_addbus_[61]), 
        .data_in_62(_9_addbus_[62]), 
        .data_in_63(_9_addbus_[63]) 
); 
wire [31:0] _10_addbus_[63:0];    
conv2d #("weight/max_polling/10_0.txt", 2, 0, 31, 31) conv2d_10_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_10_addbus_[0])
);
conv2d #("weight/max_polling/10_1.txt", 2, 0, 31, 31) conv2d_10_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_10_addbus_[1])
);
conv2d #("weight/max_polling/10_2.txt", 2, 0, 31, 31) conv2d_10_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_10_addbus_[2])
);
conv2d #("weight/max_polling/10_3.txt", 2, 0, 31, 31) conv2d_10_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_10_addbus_[3])
);
conv2d #("weight/max_polling/10_4.txt", 2, 0, 31, 31) conv2d_10_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_10_addbus_[4])
);
conv2d #("weight/max_polling/10_5.txt", 2, 0, 31, 31) conv2d_10_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_10_addbus_[5])
);
conv2d #("weight/max_polling/10_6.txt", 2, 0, 31, 31) conv2d_10_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_10_addbus_[6])
);
conv2d #("weight/max_polling/10_7.txt", 2, 0, 31, 31) conv2d_10_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_10_addbus_[7])
);
conv2d #("weight/max_polling/10_8.txt", 2, 0, 31, 31) conv2d_10_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_10_addbus_[8])
);
conv2d #("weight/max_polling/10_9.txt", 2, 0, 31, 31) conv2d_10_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_10_addbus_[9])
);
conv2d #("weight/max_polling/10_10.txt", 2, 0, 31, 31) conv2d_10_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_10_addbus_[10])
);
conv2d #("weight/max_polling/10_11.txt", 2, 0, 31, 31) conv2d_10_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_10_addbus_[11])
);
conv2d #("weight/max_polling/10_12.txt", 2, 0, 31, 31) conv2d_10_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_10_addbus_[12])
);
conv2d #("weight/max_polling/10_13.txt", 2, 0, 31, 31) conv2d_10_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_10_addbus_[13])
);
conv2d #("weight/max_polling/10_14.txt", 2, 0, 31, 31) conv2d_10_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_10_addbus_[14])
);
conv2d #("weight/max_polling/10_15.txt", 2, 0, 31, 31) conv2d_10_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_10_addbus_[15])
);
conv2d #("weight/max_polling/10_16.txt", 2, 0, 31, 31) conv2d_10_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_10_addbus_[16])
);
conv2d #("weight/max_polling/10_17.txt", 2, 0, 31, 31) conv2d_10_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_10_addbus_[17])
);
conv2d #("weight/max_polling/10_18.txt", 2, 0, 31, 31) conv2d_10_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_10_addbus_[18])
);
conv2d #("weight/max_polling/10_19.txt", 2, 0, 31, 31) conv2d_10_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_10_addbus_[19])
);
conv2d #("weight/max_polling/10_20.txt", 2, 0, 31, 31) conv2d_10_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_10_addbus_[20])
);
conv2d #("weight/max_polling/10_21.txt", 2, 0, 31, 31) conv2d_10_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_10_addbus_[21])
);
conv2d #("weight/max_polling/10_22.txt", 2, 0, 31, 31) conv2d_10_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_10_addbus_[22])
);
conv2d #("weight/max_polling/10_23.txt", 2, 0, 31, 31) conv2d_10_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_10_addbus_[23])
);
conv2d #("weight/max_polling/10_24.txt", 2, 0, 31, 31) conv2d_10_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_10_addbus_[24])
);
conv2d #("weight/max_polling/10_25.txt", 2, 0, 31, 31) conv2d_10_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_10_addbus_[25])
);
conv2d #("weight/max_polling/10_26.txt", 2, 0, 31, 31) conv2d_10_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_10_addbus_[26])
);
conv2d #("weight/max_polling/10_27.txt", 2, 0, 31, 31) conv2d_10_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_10_addbus_[27])
);
conv2d #("weight/max_polling/10_28.txt", 2, 0, 31, 31) conv2d_10_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_10_addbus_[28])
);
conv2d #("weight/max_polling/10_29.txt", 2, 0, 31, 31) conv2d_10_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_10_addbus_[29])
);
conv2d #("weight/max_polling/10_30.txt", 2, 0, 31, 31) conv2d_10_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_10_addbus_[30])
);
conv2d #("weight/max_polling/10_31.txt", 2, 0, 31, 31) conv2d_10_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_10_addbus_[31])
);
conv2d #("weight/max_polling/10_32.txt", 2, 0, 31, 31) conv2d_10_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_10_addbus_[32])
);
conv2d #("weight/max_polling/10_33.txt", 2, 0, 31, 31) conv2d_10_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_10_addbus_[33])
);
conv2d #("weight/max_polling/10_34.txt", 2, 0, 31, 31) conv2d_10_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_10_addbus_[34])
);
conv2d #("weight/max_polling/10_35.txt", 2, 0, 31, 31) conv2d_10_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_10_addbus_[35])
);
conv2d #("weight/max_polling/10_36.txt", 2, 0, 31, 31) conv2d_10_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_10_addbus_[36])
);
conv2d #("weight/max_polling/10_37.txt", 2, 0, 31, 31) conv2d_10_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_10_addbus_[37])
);
conv2d #("weight/max_polling/10_38.txt", 2, 0, 31, 31) conv2d_10_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_10_addbus_[38])
);
conv2d #("weight/max_polling/10_39.txt", 2, 0, 31, 31) conv2d_10_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_10_addbus_[39])
);
conv2d #("weight/max_polling/10_40.txt", 2, 0, 31, 31) conv2d_10_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_10_addbus_[40])
);
conv2d #("weight/max_polling/10_41.txt", 2, 0, 31, 31) conv2d_10_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_10_addbus_[41])
);
conv2d #("weight/max_polling/10_42.txt", 2, 0, 31, 31) conv2d_10_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_10_addbus_[42])
);
conv2d #("weight/max_polling/10_43.txt", 2, 0, 31, 31) conv2d_10_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_10_addbus_[43])
);
conv2d #("weight/max_polling/10_44.txt", 2, 0, 31, 31) conv2d_10_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_10_addbus_[44])
);
conv2d #("weight/max_polling/10_45.txt", 2, 0, 31, 31) conv2d_10_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_10_addbus_[45])
);
conv2d #("weight/max_polling/10_46.txt", 2, 0, 31, 31) conv2d_10_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_10_addbus_[46])
);
conv2d #("weight/max_polling/10_47.txt", 2, 0, 31, 31) conv2d_10_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_10_addbus_[47])
);
conv2d #("weight/max_polling/10_48.txt", 2, 0, 31, 31) conv2d_10_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_10_addbus_[48])
);
conv2d #("weight/max_polling/10_49.txt", 2, 0, 31, 31) conv2d_10_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_10_addbus_[49])
);
conv2d #("weight/max_polling/10_50.txt", 2, 0, 31, 31) conv2d_10_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_10_addbus_[50])
);
conv2d #("weight/max_polling/10_51.txt", 2, 0, 31, 31) conv2d_10_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_10_addbus_[51])
);
conv2d #("weight/max_polling/10_52.txt", 2, 0, 31, 31) conv2d_10_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_10_addbus_[52])
);
conv2d #("weight/max_polling/10_53.txt", 2, 0, 31, 31) conv2d_10_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_10_addbus_[53])
);
conv2d #("weight/max_polling/10_54.txt", 2, 0, 31, 31) conv2d_10_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_10_addbus_[54])
);
conv2d #("weight/max_polling/10_55.txt", 2, 0, 31, 31) conv2d_10_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_10_addbus_[55])
);
conv2d #("weight/max_polling/10_56.txt", 2, 0, 31, 31) conv2d_10_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_10_addbus_[56])
);
conv2d #("weight/max_polling/10_57.txt", 2, 0, 31, 31) conv2d_10_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_10_addbus_[57])
);
conv2d #("weight/max_polling/10_58.txt", 2, 0, 31, 31) conv2d_10_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_10_addbus_[58])
);
conv2d #("weight/max_polling/10_59.txt", 2, 0, 31, 31) conv2d_10_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_10_addbus_[59])
);
conv2d #("weight/max_polling/10_60.txt", 2, 0, 31, 31) conv2d_10_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_10_addbus_[60])
);
conv2d #("weight/max_polling/10_61.txt", 2, 0, 31, 31) conv2d_10_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_10_addbus_[61])
);
conv2d #("weight/max_polling/10_62.txt", 2, 0, 31, 31) conv2d_10_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_10_addbus_[62])
);
conv2d #("weight/max_polling/10_63.txt", 2, 0, 31, 31) conv2d_10_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_10_addbus_[63])
);
sum_64 #(15) sum_10( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[10]), 
        .data_in_0(_10_addbus_[0]), 
        .data_in_1(_10_addbus_[1]), 
        .data_in_2(_10_addbus_[2]), 
        .data_in_3(_10_addbus_[3]), 
        .data_in_4(_10_addbus_[4]), 
        .data_in_5(_10_addbus_[5]), 
        .data_in_6(_10_addbus_[6]), 
        .data_in_7(_10_addbus_[7]), 
        .data_in_8(_10_addbus_[8]), 
        .data_in_9(_10_addbus_[9]), 
        .data_in_10(_10_addbus_[10]), 
        .data_in_11(_10_addbus_[11]), 
        .data_in_12(_10_addbus_[12]), 
        .data_in_13(_10_addbus_[13]), 
        .data_in_14(_10_addbus_[14]), 
        .data_in_15(_10_addbus_[15]), 
        .data_in_16(_10_addbus_[16]), 
        .data_in_17(_10_addbus_[17]), 
        .data_in_18(_10_addbus_[18]), 
        .data_in_19(_10_addbus_[19]), 
        .data_in_20(_10_addbus_[20]), 
        .data_in_21(_10_addbus_[21]), 
        .data_in_22(_10_addbus_[22]), 
        .data_in_23(_10_addbus_[23]), 
        .data_in_24(_10_addbus_[24]), 
        .data_in_25(_10_addbus_[25]), 
        .data_in_26(_10_addbus_[26]), 
        .data_in_27(_10_addbus_[27]), 
        .data_in_28(_10_addbus_[28]), 
        .data_in_29(_10_addbus_[29]), 
        .data_in_30(_10_addbus_[30]), 
        .data_in_31(_10_addbus_[31]), 
        .data_in_32(_10_addbus_[32]), 
        .data_in_33(_10_addbus_[33]), 
        .data_in_34(_10_addbus_[34]), 
        .data_in_35(_10_addbus_[35]), 
        .data_in_36(_10_addbus_[36]), 
        .data_in_37(_10_addbus_[37]), 
        .data_in_38(_10_addbus_[38]), 
        .data_in_39(_10_addbus_[39]), 
        .data_in_40(_10_addbus_[40]), 
        .data_in_41(_10_addbus_[41]), 
        .data_in_42(_10_addbus_[42]), 
        .data_in_43(_10_addbus_[43]), 
        .data_in_44(_10_addbus_[44]), 
        .data_in_45(_10_addbus_[45]), 
        .data_in_46(_10_addbus_[46]), 
        .data_in_47(_10_addbus_[47]), 
        .data_in_48(_10_addbus_[48]), 
        .data_in_49(_10_addbus_[49]), 
        .data_in_50(_10_addbus_[50]), 
        .data_in_51(_10_addbus_[51]), 
        .data_in_52(_10_addbus_[52]), 
        .data_in_53(_10_addbus_[53]), 
        .data_in_54(_10_addbus_[54]), 
        .data_in_55(_10_addbus_[55]), 
        .data_in_56(_10_addbus_[56]), 
        .data_in_57(_10_addbus_[57]), 
        .data_in_58(_10_addbus_[58]), 
        .data_in_59(_10_addbus_[59]), 
        .data_in_60(_10_addbus_[60]), 
        .data_in_61(_10_addbus_[61]), 
        .data_in_62(_10_addbus_[62]), 
        .data_in_63(_10_addbus_[63]) 
); 
wire [31:0] _11_addbus_[63:0];    
conv2d #("weight/max_polling/11_0.txt", 2, 0, 31, 31) conv2d_11_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_11_addbus_[0])
);
conv2d #("weight/max_polling/11_1.txt", 2, 0, 31, 31) conv2d_11_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_11_addbus_[1])
);
conv2d #("weight/max_polling/11_2.txt", 2, 0, 31, 31) conv2d_11_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_11_addbus_[2])
);
conv2d #("weight/max_polling/11_3.txt", 2, 0, 31, 31) conv2d_11_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_11_addbus_[3])
);
conv2d #("weight/max_polling/11_4.txt", 2, 0, 31, 31) conv2d_11_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_11_addbus_[4])
);
conv2d #("weight/max_polling/11_5.txt", 2, 0, 31, 31) conv2d_11_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_11_addbus_[5])
);
conv2d #("weight/max_polling/11_6.txt", 2, 0, 31, 31) conv2d_11_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_11_addbus_[6])
);
conv2d #("weight/max_polling/11_7.txt", 2, 0, 31, 31) conv2d_11_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_11_addbus_[7])
);
conv2d #("weight/max_polling/11_8.txt", 2, 0, 31, 31) conv2d_11_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_11_addbus_[8])
);
conv2d #("weight/max_polling/11_9.txt", 2, 0, 31, 31) conv2d_11_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_11_addbus_[9])
);
conv2d #("weight/max_polling/11_10.txt", 2, 0, 31, 31) conv2d_11_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_11_addbus_[10])
);
conv2d #("weight/max_polling/11_11.txt", 2, 0, 31, 31) conv2d_11_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_11_addbus_[11])
);
conv2d #("weight/max_polling/11_12.txt", 2, 0, 31, 31) conv2d_11_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_11_addbus_[12])
);
conv2d #("weight/max_polling/11_13.txt", 2, 0, 31, 31) conv2d_11_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_11_addbus_[13])
);
conv2d #("weight/max_polling/11_14.txt", 2, 0, 31, 31) conv2d_11_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_11_addbus_[14])
);
conv2d #("weight/max_polling/11_15.txt", 2, 0, 31, 31) conv2d_11_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_11_addbus_[15])
);
conv2d #("weight/max_polling/11_16.txt", 2, 0, 31, 31) conv2d_11_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_11_addbus_[16])
);
conv2d #("weight/max_polling/11_17.txt", 2, 0, 31, 31) conv2d_11_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_11_addbus_[17])
);
conv2d #("weight/max_polling/11_18.txt", 2, 0, 31, 31) conv2d_11_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_11_addbus_[18])
);
conv2d #("weight/max_polling/11_19.txt", 2, 0, 31, 31) conv2d_11_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_11_addbus_[19])
);
conv2d #("weight/max_polling/11_20.txt", 2, 0, 31, 31) conv2d_11_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_11_addbus_[20])
);
conv2d #("weight/max_polling/11_21.txt", 2, 0, 31, 31) conv2d_11_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_11_addbus_[21])
);
conv2d #("weight/max_polling/11_22.txt", 2, 0, 31, 31) conv2d_11_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_11_addbus_[22])
);
conv2d #("weight/max_polling/11_23.txt", 2, 0, 31, 31) conv2d_11_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_11_addbus_[23])
);
conv2d #("weight/max_polling/11_24.txt", 2, 0, 31, 31) conv2d_11_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_11_addbus_[24])
);
conv2d #("weight/max_polling/11_25.txt", 2, 0, 31, 31) conv2d_11_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_11_addbus_[25])
);
conv2d #("weight/max_polling/11_26.txt", 2, 0, 31, 31) conv2d_11_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_11_addbus_[26])
);
conv2d #("weight/max_polling/11_27.txt", 2, 0, 31, 31) conv2d_11_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_11_addbus_[27])
);
conv2d #("weight/max_polling/11_28.txt", 2, 0, 31, 31) conv2d_11_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_11_addbus_[28])
);
conv2d #("weight/max_polling/11_29.txt", 2, 0, 31, 31) conv2d_11_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_11_addbus_[29])
);
conv2d #("weight/max_polling/11_30.txt", 2, 0, 31, 31) conv2d_11_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_11_addbus_[30])
);
conv2d #("weight/max_polling/11_31.txt", 2, 0, 31, 31) conv2d_11_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_11_addbus_[31])
);
conv2d #("weight/max_polling/11_32.txt", 2, 0, 31, 31) conv2d_11_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_11_addbus_[32])
);
conv2d #("weight/max_polling/11_33.txt", 2, 0, 31, 31) conv2d_11_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_11_addbus_[33])
);
conv2d #("weight/max_polling/11_34.txt", 2, 0, 31, 31) conv2d_11_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_11_addbus_[34])
);
conv2d #("weight/max_polling/11_35.txt", 2, 0, 31, 31) conv2d_11_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_11_addbus_[35])
);
conv2d #("weight/max_polling/11_36.txt", 2, 0, 31, 31) conv2d_11_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_11_addbus_[36])
);
conv2d #("weight/max_polling/11_37.txt", 2, 0, 31, 31) conv2d_11_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_11_addbus_[37])
);
conv2d #("weight/max_polling/11_38.txt", 2, 0, 31, 31) conv2d_11_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_11_addbus_[38])
);
conv2d #("weight/max_polling/11_39.txt", 2, 0, 31, 31) conv2d_11_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_11_addbus_[39])
);
conv2d #("weight/max_polling/11_40.txt", 2, 0, 31, 31) conv2d_11_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_11_addbus_[40])
);
conv2d #("weight/max_polling/11_41.txt", 2, 0, 31, 31) conv2d_11_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_11_addbus_[41])
);
conv2d #("weight/max_polling/11_42.txt", 2, 0, 31, 31) conv2d_11_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_11_addbus_[42])
);
conv2d #("weight/max_polling/11_43.txt", 2, 0, 31, 31) conv2d_11_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_11_addbus_[43])
);
conv2d #("weight/max_polling/11_44.txt", 2, 0, 31, 31) conv2d_11_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_11_addbus_[44])
);
conv2d #("weight/max_polling/11_45.txt", 2, 0, 31, 31) conv2d_11_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_11_addbus_[45])
);
conv2d #("weight/max_polling/11_46.txt", 2, 0, 31, 31) conv2d_11_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_11_addbus_[46])
);
conv2d #("weight/max_polling/11_47.txt", 2, 0, 31, 31) conv2d_11_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_11_addbus_[47])
);
conv2d #("weight/max_polling/11_48.txt", 2, 0, 31, 31) conv2d_11_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_11_addbus_[48])
);
conv2d #("weight/max_polling/11_49.txt", 2, 0, 31, 31) conv2d_11_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_11_addbus_[49])
);
conv2d #("weight/max_polling/11_50.txt", 2, 0, 31, 31) conv2d_11_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_11_addbus_[50])
);
conv2d #("weight/max_polling/11_51.txt", 2, 0, 31, 31) conv2d_11_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_11_addbus_[51])
);
conv2d #("weight/max_polling/11_52.txt", 2, 0, 31, 31) conv2d_11_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_11_addbus_[52])
);
conv2d #("weight/max_polling/11_53.txt", 2, 0, 31, 31) conv2d_11_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_11_addbus_[53])
);
conv2d #("weight/max_polling/11_54.txt", 2, 0, 31, 31) conv2d_11_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_11_addbus_[54])
);
conv2d #("weight/max_polling/11_55.txt", 2, 0, 31, 31) conv2d_11_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_11_addbus_[55])
);
conv2d #("weight/max_polling/11_56.txt", 2, 0, 31, 31) conv2d_11_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_11_addbus_[56])
);
conv2d #("weight/max_polling/11_57.txt", 2, 0, 31, 31) conv2d_11_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_11_addbus_[57])
);
conv2d #("weight/max_polling/11_58.txt", 2, 0, 31, 31) conv2d_11_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_11_addbus_[58])
);
conv2d #("weight/max_polling/11_59.txt", 2, 0, 31, 31) conv2d_11_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_11_addbus_[59])
);
conv2d #("weight/max_polling/11_60.txt", 2, 0, 31, 31) conv2d_11_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_11_addbus_[60])
);
conv2d #("weight/max_polling/11_61.txt", 2, 0, 31, 31) conv2d_11_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_11_addbus_[61])
);
conv2d #("weight/max_polling/11_62.txt", 2, 0, 31, 31) conv2d_11_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_11_addbus_[62])
);
conv2d #("weight/max_polling/11_63.txt", 2, 0, 31, 31) conv2d_11_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_11_addbus_[63])
);
sum_64 #(15) sum_11( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[11]), 
        .data_in_0(_11_addbus_[0]), 
        .data_in_1(_11_addbus_[1]), 
        .data_in_2(_11_addbus_[2]), 
        .data_in_3(_11_addbus_[3]), 
        .data_in_4(_11_addbus_[4]), 
        .data_in_5(_11_addbus_[5]), 
        .data_in_6(_11_addbus_[6]), 
        .data_in_7(_11_addbus_[7]), 
        .data_in_8(_11_addbus_[8]), 
        .data_in_9(_11_addbus_[9]), 
        .data_in_10(_11_addbus_[10]), 
        .data_in_11(_11_addbus_[11]), 
        .data_in_12(_11_addbus_[12]), 
        .data_in_13(_11_addbus_[13]), 
        .data_in_14(_11_addbus_[14]), 
        .data_in_15(_11_addbus_[15]), 
        .data_in_16(_11_addbus_[16]), 
        .data_in_17(_11_addbus_[17]), 
        .data_in_18(_11_addbus_[18]), 
        .data_in_19(_11_addbus_[19]), 
        .data_in_20(_11_addbus_[20]), 
        .data_in_21(_11_addbus_[21]), 
        .data_in_22(_11_addbus_[22]), 
        .data_in_23(_11_addbus_[23]), 
        .data_in_24(_11_addbus_[24]), 
        .data_in_25(_11_addbus_[25]), 
        .data_in_26(_11_addbus_[26]), 
        .data_in_27(_11_addbus_[27]), 
        .data_in_28(_11_addbus_[28]), 
        .data_in_29(_11_addbus_[29]), 
        .data_in_30(_11_addbus_[30]), 
        .data_in_31(_11_addbus_[31]), 
        .data_in_32(_11_addbus_[32]), 
        .data_in_33(_11_addbus_[33]), 
        .data_in_34(_11_addbus_[34]), 
        .data_in_35(_11_addbus_[35]), 
        .data_in_36(_11_addbus_[36]), 
        .data_in_37(_11_addbus_[37]), 
        .data_in_38(_11_addbus_[38]), 
        .data_in_39(_11_addbus_[39]), 
        .data_in_40(_11_addbus_[40]), 
        .data_in_41(_11_addbus_[41]), 
        .data_in_42(_11_addbus_[42]), 
        .data_in_43(_11_addbus_[43]), 
        .data_in_44(_11_addbus_[44]), 
        .data_in_45(_11_addbus_[45]), 
        .data_in_46(_11_addbus_[46]), 
        .data_in_47(_11_addbus_[47]), 
        .data_in_48(_11_addbus_[48]), 
        .data_in_49(_11_addbus_[49]), 
        .data_in_50(_11_addbus_[50]), 
        .data_in_51(_11_addbus_[51]), 
        .data_in_52(_11_addbus_[52]), 
        .data_in_53(_11_addbus_[53]), 
        .data_in_54(_11_addbus_[54]), 
        .data_in_55(_11_addbus_[55]), 
        .data_in_56(_11_addbus_[56]), 
        .data_in_57(_11_addbus_[57]), 
        .data_in_58(_11_addbus_[58]), 
        .data_in_59(_11_addbus_[59]), 
        .data_in_60(_11_addbus_[60]), 
        .data_in_61(_11_addbus_[61]), 
        .data_in_62(_11_addbus_[62]), 
        .data_in_63(_11_addbus_[63]) 
); 
wire [31:0] _12_addbus_[63:0];    
conv2d #("weight/max_polling/12_0.txt", 2, 0, 31, 31) conv2d_12_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_12_addbus_[0])
);
conv2d #("weight/max_polling/12_1.txt", 2, 0, 31, 31) conv2d_12_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_12_addbus_[1])
);
conv2d #("weight/max_polling/12_2.txt", 2, 0, 31, 31) conv2d_12_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_12_addbus_[2])
);
conv2d #("weight/max_polling/12_3.txt", 2, 0, 31, 31) conv2d_12_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_12_addbus_[3])
);
conv2d #("weight/max_polling/12_4.txt", 2, 0, 31, 31) conv2d_12_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_12_addbus_[4])
);
conv2d #("weight/max_polling/12_5.txt", 2, 0, 31, 31) conv2d_12_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_12_addbus_[5])
);
conv2d #("weight/max_polling/12_6.txt", 2, 0, 31, 31) conv2d_12_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_12_addbus_[6])
);
conv2d #("weight/max_polling/12_7.txt", 2, 0, 31, 31) conv2d_12_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_12_addbus_[7])
);
conv2d #("weight/max_polling/12_8.txt", 2, 0, 31, 31) conv2d_12_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_12_addbus_[8])
);
conv2d #("weight/max_polling/12_9.txt", 2, 0, 31, 31) conv2d_12_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_12_addbus_[9])
);
conv2d #("weight/max_polling/12_10.txt", 2, 0, 31, 31) conv2d_12_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_12_addbus_[10])
);
conv2d #("weight/max_polling/12_11.txt", 2, 0, 31, 31) conv2d_12_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_12_addbus_[11])
);
conv2d #("weight/max_polling/12_12.txt", 2, 0, 31, 31) conv2d_12_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_12_addbus_[12])
);
conv2d #("weight/max_polling/12_13.txt", 2, 0, 31, 31) conv2d_12_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_12_addbus_[13])
);
conv2d #("weight/max_polling/12_14.txt", 2, 0, 31, 31) conv2d_12_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_12_addbus_[14])
);
conv2d #("weight/max_polling/12_15.txt", 2, 0, 31, 31) conv2d_12_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_12_addbus_[15])
);
conv2d #("weight/max_polling/12_16.txt", 2, 0, 31, 31) conv2d_12_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_12_addbus_[16])
);
conv2d #("weight/max_polling/12_17.txt", 2, 0, 31, 31) conv2d_12_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_12_addbus_[17])
);
conv2d #("weight/max_polling/12_18.txt", 2, 0, 31, 31) conv2d_12_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_12_addbus_[18])
);
conv2d #("weight/max_polling/12_19.txt", 2, 0, 31, 31) conv2d_12_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_12_addbus_[19])
);
conv2d #("weight/max_polling/12_20.txt", 2, 0, 31, 31) conv2d_12_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_12_addbus_[20])
);
conv2d #("weight/max_polling/12_21.txt", 2, 0, 31, 31) conv2d_12_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_12_addbus_[21])
);
conv2d #("weight/max_polling/12_22.txt", 2, 0, 31, 31) conv2d_12_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_12_addbus_[22])
);
conv2d #("weight/max_polling/12_23.txt", 2, 0, 31, 31) conv2d_12_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_12_addbus_[23])
);
conv2d #("weight/max_polling/12_24.txt", 2, 0, 31, 31) conv2d_12_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_12_addbus_[24])
);
conv2d #("weight/max_polling/12_25.txt", 2, 0, 31, 31) conv2d_12_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_12_addbus_[25])
);
conv2d #("weight/max_polling/12_26.txt", 2, 0, 31, 31) conv2d_12_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_12_addbus_[26])
);
conv2d #("weight/max_polling/12_27.txt", 2, 0, 31, 31) conv2d_12_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_12_addbus_[27])
);
conv2d #("weight/max_polling/12_28.txt", 2, 0, 31, 31) conv2d_12_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_12_addbus_[28])
);
conv2d #("weight/max_polling/12_29.txt", 2, 0, 31, 31) conv2d_12_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_12_addbus_[29])
);
conv2d #("weight/max_polling/12_30.txt", 2, 0, 31, 31) conv2d_12_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_12_addbus_[30])
);
conv2d #("weight/max_polling/12_31.txt", 2, 0, 31, 31) conv2d_12_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_12_addbus_[31])
);
conv2d #("weight/max_polling/12_32.txt", 2, 0, 31, 31) conv2d_12_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_12_addbus_[32])
);
conv2d #("weight/max_polling/12_33.txt", 2, 0, 31, 31) conv2d_12_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_12_addbus_[33])
);
conv2d #("weight/max_polling/12_34.txt", 2, 0, 31, 31) conv2d_12_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_12_addbus_[34])
);
conv2d #("weight/max_polling/12_35.txt", 2, 0, 31, 31) conv2d_12_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_12_addbus_[35])
);
conv2d #("weight/max_polling/12_36.txt", 2, 0, 31, 31) conv2d_12_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_12_addbus_[36])
);
conv2d #("weight/max_polling/12_37.txt", 2, 0, 31, 31) conv2d_12_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_12_addbus_[37])
);
conv2d #("weight/max_polling/12_38.txt", 2, 0, 31, 31) conv2d_12_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_12_addbus_[38])
);
conv2d #("weight/max_polling/12_39.txt", 2, 0, 31, 31) conv2d_12_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_12_addbus_[39])
);
conv2d #("weight/max_polling/12_40.txt", 2, 0, 31, 31) conv2d_12_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_12_addbus_[40])
);
conv2d #("weight/max_polling/12_41.txt", 2, 0, 31, 31) conv2d_12_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_12_addbus_[41])
);
conv2d #("weight/max_polling/12_42.txt", 2, 0, 31, 31) conv2d_12_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_12_addbus_[42])
);
conv2d #("weight/max_polling/12_43.txt", 2, 0, 31, 31) conv2d_12_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_12_addbus_[43])
);
conv2d #("weight/max_polling/12_44.txt", 2, 0, 31, 31) conv2d_12_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_12_addbus_[44])
);
conv2d #("weight/max_polling/12_45.txt", 2, 0, 31, 31) conv2d_12_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_12_addbus_[45])
);
conv2d #("weight/max_polling/12_46.txt", 2, 0, 31, 31) conv2d_12_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_12_addbus_[46])
);
conv2d #("weight/max_polling/12_47.txt", 2, 0, 31, 31) conv2d_12_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_12_addbus_[47])
);
conv2d #("weight/max_polling/12_48.txt", 2, 0, 31, 31) conv2d_12_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_12_addbus_[48])
);
conv2d #("weight/max_polling/12_49.txt", 2, 0, 31, 31) conv2d_12_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_12_addbus_[49])
);
conv2d #("weight/max_polling/12_50.txt", 2, 0, 31, 31) conv2d_12_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_12_addbus_[50])
);
conv2d #("weight/max_polling/12_51.txt", 2, 0, 31, 31) conv2d_12_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_12_addbus_[51])
);
conv2d #("weight/max_polling/12_52.txt", 2, 0, 31, 31) conv2d_12_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_12_addbus_[52])
);
conv2d #("weight/max_polling/12_53.txt", 2, 0, 31, 31) conv2d_12_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_12_addbus_[53])
);
conv2d #("weight/max_polling/12_54.txt", 2, 0, 31, 31) conv2d_12_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_12_addbus_[54])
);
conv2d #("weight/max_polling/12_55.txt", 2, 0, 31, 31) conv2d_12_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_12_addbus_[55])
);
conv2d #("weight/max_polling/12_56.txt", 2, 0, 31, 31) conv2d_12_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_12_addbus_[56])
);
conv2d #("weight/max_polling/12_57.txt", 2, 0, 31, 31) conv2d_12_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_12_addbus_[57])
);
conv2d #("weight/max_polling/12_58.txt", 2, 0, 31, 31) conv2d_12_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_12_addbus_[58])
);
conv2d #("weight/max_polling/12_59.txt", 2, 0, 31, 31) conv2d_12_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_12_addbus_[59])
);
conv2d #("weight/max_polling/12_60.txt", 2, 0, 31, 31) conv2d_12_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_12_addbus_[60])
);
conv2d #("weight/max_polling/12_61.txt", 2, 0, 31, 31) conv2d_12_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_12_addbus_[61])
);
conv2d #("weight/max_polling/12_62.txt", 2, 0, 31, 31) conv2d_12_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_12_addbus_[62])
);
conv2d #("weight/max_polling/12_63.txt", 2, 0, 31, 31) conv2d_12_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_12_addbus_[63])
);
sum_64 #(15) sum_12( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[12]), 
        .data_in_0(_12_addbus_[0]), 
        .data_in_1(_12_addbus_[1]), 
        .data_in_2(_12_addbus_[2]), 
        .data_in_3(_12_addbus_[3]), 
        .data_in_4(_12_addbus_[4]), 
        .data_in_5(_12_addbus_[5]), 
        .data_in_6(_12_addbus_[6]), 
        .data_in_7(_12_addbus_[7]), 
        .data_in_8(_12_addbus_[8]), 
        .data_in_9(_12_addbus_[9]), 
        .data_in_10(_12_addbus_[10]), 
        .data_in_11(_12_addbus_[11]), 
        .data_in_12(_12_addbus_[12]), 
        .data_in_13(_12_addbus_[13]), 
        .data_in_14(_12_addbus_[14]), 
        .data_in_15(_12_addbus_[15]), 
        .data_in_16(_12_addbus_[16]), 
        .data_in_17(_12_addbus_[17]), 
        .data_in_18(_12_addbus_[18]), 
        .data_in_19(_12_addbus_[19]), 
        .data_in_20(_12_addbus_[20]), 
        .data_in_21(_12_addbus_[21]), 
        .data_in_22(_12_addbus_[22]), 
        .data_in_23(_12_addbus_[23]), 
        .data_in_24(_12_addbus_[24]), 
        .data_in_25(_12_addbus_[25]), 
        .data_in_26(_12_addbus_[26]), 
        .data_in_27(_12_addbus_[27]), 
        .data_in_28(_12_addbus_[28]), 
        .data_in_29(_12_addbus_[29]), 
        .data_in_30(_12_addbus_[30]), 
        .data_in_31(_12_addbus_[31]), 
        .data_in_32(_12_addbus_[32]), 
        .data_in_33(_12_addbus_[33]), 
        .data_in_34(_12_addbus_[34]), 
        .data_in_35(_12_addbus_[35]), 
        .data_in_36(_12_addbus_[36]), 
        .data_in_37(_12_addbus_[37]), 
        .data_in_38(_12_addbus_[38]), 
        .data_in_39(_12_addbus_[39]), 
        .data_in_40(_12_addbus_[40]), 
        .data_in_41(_12_addbus_[41]), 
        .data_in_42(_12_addbus_[42]), 
        .data_in_43(_12_addbus_[43]), 
        .data_in_44(_12_addbus_[44]), 
        .data_in_45(_12_addbus_[45]), 
        .data_in_46(_12_addbus_[46]), 
        .data_in_47(_12_addbus_[47]), 
        .data_in_48(_12_addbus_[48]), 
        .data_in_49(_12_addbus_[49]), 
        .data_in_50(_12_addbus_[50]), 
        .data_in_51(_12_addbus_[51]), 
        .data_in_52(_12_addbus_[52]), 
        .data_in_53(_12_addbus_[53]), 
        .data_in_54(_12_addbus_[54]), 
        .data_in_55(_12_addbus_[55]), 
        .data_in_56(_12_addbus_[56]), 
        .data_in_57(_12_addbus_[57]), 
        .data_in_58(_12_addbus_[58]), 
        .data_in_59(_12_addbus_[59]), 
        .data_in_60(_12_addbus_[60]), 
        .data_in_61(_12_addbus_[61]), 
        .data_in_62(_12_addbus_[62]), 
        .data_in_63(_12_addbus_[63]) 
); 
wire [31:0] _13_addbus_[63:0];    
conv2d #("weight/max_polling/13_0.txt", 2, 0, 31, 31) conv2d_13_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_13_addbus_[0])
);
conv2d #("weight/max_polling/13_1.txt", 2, 0, 31, 31) conv2d_13_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_13_addbus_[1])
);
conv2d #("weight/max_polling/13_2.txt", 2, 0, 31, 31) conv2d_13_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_13_addbus_[2])
);
conv2d #("weight/max_polling/13_3.txt", 2, 0, 31, 31) conv2d_13_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_13_addbus_[3])
);
conv2d #("weight/max_polling/13_4.txt", 2, 0, 31, 31) conv2d_13_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_13_addbus_[4])
);
conv2d #("weight/max_polling/13_5.txt", 2, 0, 31, 31) conv2d_13_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_13_addbus_[5])
);
conv2d #("weight/max_polling/13_6.txt", 2, 0, 31, 31) conv2d_13_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_13_addbus_[6])
);
conv2d #("weight/max_polling/13_7.txt", 2, 0, 31, 31) conv2d_13_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_13_addbus_[7])
);
conv2d #("weight/max_polling/13_8.txt", 2, 0, 31, 31) conv2d_13_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_13_addbus_[8])
);
conv2d #("weight/max_polling/13_9.txt", 2, 0, 31, 31) conv2d_13_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_13_addbus_[9])
);
conv2d #("weight/max_polling/13_10.txt", 2, 0, 31, 31) conv2d_13_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_13_addbus_[10])
);
conv2d #("weight/max_polling/13_11.txt", 2, 0, 31, 31) conv2d_13_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_13_addbus_[11])
);
conv2d #("weight/max_polling/13_12.txt", 2, 0, 31, 31) conv2d_13_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_13_addbus_[12])
);
conv2d #("weight/max_polling/13_13.txt", 2, 0, 31, 31) conv2d_13_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_13_addbus_[13])
);
conv2d #("weight/max_polling/13_14.txt", 2, 0, 31, 31) conv2d_13_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_13_addbus_[14])
);
conv2d #("weight/max_polling/13_15.txt", 2, 0, 31, 31) conv2d_13_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_13_addbus_[15])
);
conv2d #("weight/max_polling/13_16.txt", 2, 0, 31, 31) conv2d_13_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_13_addbus_[16])
);
conv2d #("weight/max_polling/13_17.txt", 2, 0, 31, 31) conv2d_13_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_13_addbus_[17])
);
conv2d #("weight/max_polling/13_18.txt", 2, 0, 31, 31) conv2d_13_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_13_addbus_[18])
);
conv2d #("weight/max_polling/13_19.txt", 2, 0, 31, 31) conv2d_13_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_13_addbus_[19])
);
conv2d #("weight/max_polling/13_20.txt", 2, 0, 31, 31) conv2d_13_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_13_addbus_[20])
);
conv2d #("weight/max_polling/13_21.txt", 2, 0, 31, 31) conv2d_13_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_13_addbus_[21])
);
conv2d #("weight/max_polling/13_22.txt", 2, 0, 31, 31) conv2d_13_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_13_addbus_[22])
);
conv2d #("weight/max_polling/13_23.txt", 2, 0, 31, 31) conv2d_13_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_13_addbus_[23])
);
conv2d #("weight/max_polling/13_24.txt", 2, 0, 31, 31) conv2d_13_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_13_addbus_[24])
);
conv2d #("weight/max_polling/13_25.txt", 2, 0, 31, 31) conv2d_13_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_13_addbus_[25])
);
conv2d #("weight/max_polling/13_26.txt", 2, 0, 31, 31) conv2d_13_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_13_addbus_[26])
);
conv2d #("weight/max_polling/13_27.txt", 2, 0, 31, 31) conv2d_13_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_13_addbus_[27])
);
conv2d #("weight/max_polling/13_28.txt", 2, 0, 31, 31) conv2d_13_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_13_addbus_[28])
);
conv2d #("weight/max_polling/13_29.txt", 2, 0, 31, 31) conv2d_13_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_13_addbus_[29])
);
conv2d #("weight/max_polling/13_30.txt", 2, 0, 31, 31) conv2d_13_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_13_addbus_[30])
);
conv2d #("weight/max_polling/13_31.txt", 2, 0, 31, 31) conv2d_13_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_13_addbus_[31])
);
conv2d #("weight/max_polling/13_32.txt", 2, 0, 31, 31) conv2d_13_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_13_addbus_[32])
);
conv2d #("weight/max_polling/13_33.txt", 2, 0, 31, 31) conv2d_13_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_13_addbus_[33])
);
conv2d #("weight/max_polling/13_34.txt", 2, 0, 31, 31) conv2d_13_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_13_addbus_[34])
);
conv2d #("weight/max_polling/13_35.txt", 2, 0, 31, 31) conv2d_13_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_13_addbus_[35])
);
conv2d #("weight/max_polling/13_36.txt", 2, 0, 31, 31) conv2d_13_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_13_addbus_[36])
);
conv2d #("weight/max_polling/13_37.txt", 2, 0, 31, 31) conv2d_13_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_13_addbus_[37])
);
conv2d #("weight/max_polling/13_38.txt", 2, 0, 31, 31) conv2d_13_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_13_addbus_[38])
);
conv2d #("weight/max_polling/13_39.txt", 2, 0, 31, 31) conv2d_13_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_13_addbus_[39])
);
conv2d #("weight/max_polling/13_40.txt", 2, 0, 31, 31) conv2d_13_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_13_addbus_[40])
);
conv2d #("weight/max_polling/13_41.txt", 2, 0, 31, 31) conv2d_13_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_13_addbus_[41])
);
conv2d #("weight/max_polling/13_42.txt", 2, 0, 31, 31) conv2d_13_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_13_addbus_[42])
);
conv2d #("weight/max_polling/13_43.txt", 2, 0, 31, 31) conv2d_13_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_13_addbus_[43])
);
conv2d #("weight/max_polling/13_44.txt", 2, 0, 31, 31) conv2d_13_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_13_addbus_[44])
);
conv2d #("weight/max_polling/13_45.txt", 2, 0, 31, 31) conv2d_13_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_13_addbus_[45])
);
conv2d #("weight/max_polling/13_46.txt", 2, 0, 31, 31) conv2d_13_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_13_addbus_[46])
);
conv2d #("weight/max_polling/13_47.txt", 2, 0, 31, 31) conv2d_13_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_13_addbus_[47])
);
conv2d #("weight/max_polling/13_48.txt", 2, 0, 31, 31) conv2d_13_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_13_addbus_[48])
);
conv2d #("weight/max_polling/13_49.txt", 2, 0, 31, 31) conv2d_13_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_13_addbus_[49])
);
conv2d #("weight/max_polling/13_50.txt", 2, 0, 31, 31) conv2d_13_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_13_addbus_[50])
);
conv2d #("weight/max_polling/13_51.txt", 2, 0, 31, 31) conv2d_13_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_13_addbus_[51])
);
conv2d #("weight/max_polling/13_52.txt", 2, 0, 31, 31) conv2d_13_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_13_addbus_[52])
);
conv2d #("weight/max_polling/13_53.txt", 2, 0, 31, 31) conv2d_13_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_13_addbus_[53])
);
conv2d #("weight/max_polling/13_54.txt", 2, 0, 31, 31) conv2d_13_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_13_addbus_[54])
);
conv2d #("weight/max_polling/13_55.txt", 2, 0, 31, 31) conv2d_13_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_13_addbus_[55])
);
conv2d #("weight/max_polling/13_56.txt", 2, 0, 31, 31) conv2d_13_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_13_addbus_[56])
);
conv2d #("weight/max_polling/13_57.txt", 2, 0, 31, 31) conv2d_13_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_13_addbus_[57])
);
conv2d #("weight/max_polling/13_58.txt", 2, 0, 31, 31) conv2d_13_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_13_addbus_[58])
);
conv2d #("weight/max_polling/13_59.txt", 2, 0, 31, 31) conv2d_13_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_13_addbus_[59])
);
conv2d #("weight/max_polling/13_60.txt", 2, 0, 31, 31) conv2d_13_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_13_addbus_[60])
);
conv2d #("weight/max_polling/13_61.txt", 2, 0, 31, 31) conv2d_13_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_13_addbus_[61])
);
conv2d #("weight/max_polling/13_62.txt", 2, 0, 31, 31) conv2d_13_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_13_addbus_[62])
);
conv2d #("weight/max_polling/13_63.txt", 2, 0, 31, 31) conv2d_13_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_13_addbus_[63])
);
sum_64 #(15) sum_13( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[13]), 
        .data_in_0(_13_addbus_[0]), 
        .data_in_1(_13_addbus_[1]), 
        .data_in_2(_13_addbus_[2]), 
        .data_in_3(_13_addbus_[3]), 
        .data_in_4(_13_addbus_[4]), 
        .data_in_5(_13_addbus_[5]), 
        .data_in_6(_13_addbus_[6]), 
        .data_in_7(_13_addbus_[7]), 
        .data_in_8(_13_addbus_[8]), 
        .data_in_9(_13_addbus_[9]), 
        .data_in_10(_13_addbus_[10]), 
        .data_in_11(_13_addbus_[11]), 
        .data_in_12(_13_addbus_[12]), 
        .data_in_13(_13_addbus_[13]), 
        .data_in_14(_13_addbus_[14]), 
        .data_in_15(_13_addbus_[15]), 
        .data_in_16(_13_addbus_[16]), 
        .data_in_17(_13_addbus_[17]), 
        .data_in_18(_13_addbus_[18]), 
        .data_in_19(_13_addbus_[19]), 
        .data_in_20(_13_addbus_[20]), 
        .data_in_21(_13_addbus_[21]), 
        .data_in_22(_13_addbus_[22]), 
        .data_in_23(_13_addbus_[23]), 
        .data_in_24(_13_addbus_[24]), 
        .data_in_25(_13_addbus_[25]), 
        .data_in_26(_13_addbus_[26]), 
        .data_in_27(_13_addbus_[27]), 
        .data_in_28(_13_addbus_[28]), 
        .data_in_29(_13_addbus_[29]), 
        .data_in_30(_13_addbus_[30]), 
        .data_in_31(_13_addbus_[31]), 
        .data_in_32(_13_addbus_[32]), 
        .data_in_33(_13_addbus_[33]), 
        .data_in_34(_13_addbus_[34]), 
        .data_in_35(_13_addbus_[35]), 
        .data_in_36(_13_addbus_[36]), 
        .data_in_37(_13_addbus_[37]), 
        .data_in_38(_13_addbus_[38]), 
        .data_in_39(_13_addbus_[39]), 
        .data_in_40(_13_addbus_[40]), 
        .data_in_41(_13_addbus_[41]), 
        .data_in_42(_13_addbus_[42]), 
        .data_in_43(_13_addbus_[43]), 
        .data_in_44(_13_addbus_[44]), 
        .data_in_45(_13_addbus_[45]), 
        .data_in_46(_13_addbus_[46]), 
        .data_in_47(_13_addbus_[47]), 
        .data_in_48(_13_addbus_[48]), 
        .data_in_49(_13_addbus_[49]), 
        .data_in_50(_13_addbus_[50]), 
        .data_in_51(_13_addbus_[51]), 
        .data_in_52(_13_addbus_[52]), 
        .data_in_53(_13_addbus_[53]), 
        .data_in_54(_13_addbus_[54]), 
        .data_in_55(_13_addbus_[55]), 
        .data_in_56(_13_addbus_[56]), 
        .data_in_57(_13_addbus_[57]), 
        .data_in_58(_13_addbus_[58]), 
        .data_in_59(_13_addbus_[59]), 
        .data_in_60(_13_addbus_[60]), 
        .data_in_61(_13_addbus_[61]), 
        .data_in_62(_13_addbus_[62]), 
        .data_in_63(_13_addbus_[63]) 
); 
wire [31:0] _14_addbus_[63:0];    
conv2d #("weight/max_polling/14_0.txt", 2, 0, 31, 31) conv2d_14_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_14_addbus_[0])
);
conv2d #("weight/max_polling/14_1.txt", 2, 0, 31, 31) conv2d_14_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_14_addbus_[1])
);
conv2d #("weight/max_polling/14_2.txt", 2, 0, 31, 31) conv2d_14_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_14_addbus_[2])
);
conv2d #("weight/max_polling/14_3.txt", 2, 0, 31, 31) conv2d_14_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_14_addbus_[3])
);
conv2d #("weight/max_polling/14_4.txt", 2, 0, 31, 31) conv2d_14_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_14_addbus_[4])
);
conv2d #("weight/max_polling/14_5.txt", 2, 0, 31, 31) conv2d_14_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_14_addbus_[5])
);
conv2d #("weight/max_polling/14_6.txt", 2, 0, 31, 31) conv2d_14_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_14_addbus_[6])
);
conv2d #("weight/max_polling/14_7.txt", 2, 0, 31, 31) conv2d_14_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_14_addbus_[7])
);
conv2d #("weight/max_polling/14_8.txt", 2, 0, 31, 31) conv2d_14_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_14_addbus_[8])
);
conv2d #("weight/max_polling/14_9.txt", 2, 0, 31, 31) conv2d_14_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_14_addbus_[9])
);
conv2d #("weight/max_polling/14_10.txt", 2, 0, 31, 31) conv2d_14_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_14_addbus_[10])
);
conv2d #("weight/max_polling/14_11.txt", 2, 0, 31, 31) conv2d_14_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_14_addbus_[11])
);
conv2d #("weight/max_polling/14_12.txt", 2, 0, 31, 31) conv2d_14_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_14_addbus_[12])
);
conv2d #("weight/max_polling/14_13.txt", 2, 0, 31, 31) conv2d_14_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_14_addbus_[13])
);
conv2d #("weight/max_polling/14_14.txt", 2, 0, 31, 31) conv2d_14_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_14_addbus_[14])
);
conv2d #("weight/max_polling/14_15.txt", 2, 0, 31, 31) conv2d_14_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_14_addbus_[15])
);
conv2d #("weight/max_polling/14_16.txt", 2, 0, 31, 31) conv2d_14_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_14_addbus_[16])
);
conv2d #("weight/max_polling/14_17.txt", 2, 0, 31, 31) conv2d_14_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_14_addbus_[17])
);
conv2d #("weight/max_polling/14_18.txt", 2, 0, 31, 31) conv2d_14_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_14_addbus_[18])
);
conv2d #("weight/max_polling/14_19.txt", 2, 0, 31, 31) conv2d_14_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_14_addbus_[19])
);
conv2d #("weight/max_polling/14_20.txt", 2, 0, 31, 31) conv2d_14_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_14_addbus_[20])
);
conv2d #("weight/max_polling/14_21.txt", 2, 0, 31, 31) conv2d_14_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_14_addbus_[21])
);
conv2d #("weight/max_polling/14_22.txt", 2, 0, 31, 31) conv2d_14_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_14_addbus_[22])
);
conv2d #("weight/max_polling/14_23.txt", 2, 0, 31, 31) conv2d_14_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_14_addbus_[23])
);
conv2d #("weight/max_polling/14_24.txt", 2, 0, 31, 31) conv2d_14_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_14_addbus_[24])
);
conv2d #("weight/max_polling/14_25.txt", 2, 0, 31, 31) conv2d_14_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_14_addbus_[25])
);
conv2d #("weight/max_polling/14_26.txt", 2, 0, 31, 31) conv2d_14_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_14_addbus_[26])
);
conv2d #("weight/max_polling/14_27.txt", 2, 0, 31, 31) conv2d_14_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_14_addbus_[27])
);
conv2d #("weight/max_polling/14_28.txt", 2, 0, 31, 31) conv2d_14_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_14_addbus_[28])
);
conv2d #("weight/max_polling/14_29.txt", 2, 0, 31, 31) conv2d_14_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_14_addbus_[29])
);
conv2d #("weight/max_polling/14_30.txt", 2, 0, 31, 31) conv2d_14_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_14_addbus_[30])
);
conv2d #("weight/max_polling/14_31.txt", 2, 0, 31, 31) conv2d_14_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_14_addbus_[31])
);
conv2d #("weight/max_polling/14_32.txt", 2, 0, 31, 31) conv2d_14_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_14_addbus_[32])
);
conv2d #("weight/max_polling/14_33.txt", 2, 0, 31, 31) conv2d_14_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_14_addbus_[33])
);
conv2d #("weight/max_polling/14_34.txt", 2, 0, 31, 31) conv2d_14_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_14_addbus_[34])
);
conv2d #("weight/max_polling/14_35.txt", 2, 0, 31, 31) conv2d_14_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_14_addbus_[35])
);
conv2d #("weight/max_polling/14_36.txt", 2, 0, 31, 31) conv2d_14_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_14_addbus_[36])
);
conv2d #("weight/max_polling/14_37.txt", 2, 0, 31, 31) conv2d_14_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_14_addbus_[37])
);
conv2d #("weight/max_polling/14_38.txt", 2, 0, 31, 31) conv2d_14_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_14_addbus_[38])
);
conv2d #("weight/max_polling/14_39.txt", 2, 0, 31, 31) conv2d_14_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_14_addbus_[39])
);
conv2d #("weight/max_polling/14_40.txt", 2, 0, 31, 31) conv2d_14_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_14_addbus_[40])
);
conv2d #("weight/max_polling/14_41.txt", 2, 0, 31, 31) conv2d_14_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_14_addbus_[41])
);
conv2d #("weight/max_polling/14_42.txt", 2, 0, 31, 31) conv2d_14_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_14_addbus_[42])
);
conv2d #("weight/max_polling/14_43.txt", 2, 0, 31, 31) conv2d_14_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_14_addbus_[43])
);
conv2d #("weight/max_polling/14_44.txt", 2, 0, 31, 31) conv2d_14_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_14_addbus_[44])
);
conv2d #("weight/max_polling/14_45.txt", 2, 0, 31, 31) conv2d_14_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_14_addbus_[45])
);
conv2d #("weight/max_polling/14_46.txt", 2, 0, 31, 31) conv2d_14_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_14_addbus_[46])
);
conv2d #("weight/max_polling/14_47.txt", 2, 0, 31, 31) conv2d_14_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_14_addbus_[47])
);
conv2d #("weight/max_polling/14_48.txt", 2, 0, 31, 31) conv2d_14_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_14_addbus_[48])
);
conv2d #("weight/max_polling/14_49.txt", 2, 0, 31, 31) conv2d_14_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_14_addbus_[49])
);
conv2d #("weight/max_polling/14_50.txt", 2, 0, 31, 31) conv2d_14_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_14_addbus_[50])
);
conv2d #("weight/max_polling/14_51.txt", 2, 0, 31, 31) conv2d_14_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_14_addbus_[51])
);
conv2d #("weight/max_polling/14_52.txt", 2, 0, 31, 31) conv2d_14_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_14_addbus_[52])
);
conv2d #("weight/max_polling/14_53.txt", 2, 0, 31, 31) conv2d_14_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_14_addbus_[53])
);
conv2d #("weight/max_polling/14_54.txt", 2, 0, 31, 31) conv2d_14_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_14_addbus_[54])
);
conv2d #("weight/max_polling/14_55.txt", 2, 0, 31, 31) conv2d_14_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_14_addbus_[55])
);
conv2d #("weight/max_polling/14_56.txt", 2, 0, 31, 31) conv2d_14_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_14_addbus_[56])
);
conv2d #("weight/max_polling/14_57.txt", 2, 0, 31, 31) conv2d_14_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_14_addbus_[57])
);
conv2d #("weight/max_polling/14_58.txt", 2, 0, 31, 31) conv2d_14_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_14_addbus_[58])
);
conv2d #("weight/max_polling/14_59.txt", 2, 0, 31, 31) conv2d_14_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_14_addbus_[59])
);
conv2d #("weight/max_polling/14_60.txt", 2, 0, 31, 31) conv2d_14_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_14_addbus_[60])
);
conv2d #("weight/max_polling/14_61.txt", 2, 0, 31, 31) conv2d_14_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_14_addbus_[61])
);
conv2d #("weight/max_polling/14_62.txt", 2, 0, 31, 31) conv2d_14_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_14_addbus_[62])
);
conv2d #("weight/max_polling/14_63.txt", 2, 0, 31, 31) conv2d_14_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_14_addbus_[63])
);
sum_64 #(15) sum_14( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[14]), 
        .data_in_0(_14_addbus_[0]), 
        .data_in_1(_14_addbus_[1]), 
        .data_in_2(_14_addbus_[2]), 
        .data_in_3(_14_addbus_[3]), 
        .data_in_4(_14_addbus_[4]), 
        .data_in_5(_14_addbus_[5]), 
        .data_in_6(_14_addbus_[6]), 
        .data_in_7(_14_addbus_[7]), 
        .data_in_8(_14_addbus_[8]), 
        .data_in_9(_14_addbus_[9]), 
        .data_in_10(_14_addbus_[10]), 
        .data_in_11(_14_addbus_[11]), 
        .data_in_12(_14_addbus_[12]), 
        .data_in_13(_14_addbus_[13]), 
        .data_in_14(_14_addbus_[14]), 
        .data_in_15(_14_addbus_[15]), 
        .data_in_16(_14_addbus_[16]), 
        .data_in_17(_14_addbus_[17]), 
        .data_in_18(_14_addbus_[18]), 
        .data_in_19(_14_addbus_[19]), 
        .data_in_20(_14_addbus_[20]), 
        .data_in_21(_14_addbus_[21]), 
        .data_in_22(_14_addbus_[22]), 
        .data_in_23(_14_addbus_[23]), 
        .data_in_24(_14_addbus_[24]), 
        .data_in_25(_14_addbus_[25]), 
        .data_in_26(_14_addbus_[26]), 
        .data_in_27(_14_addbus_[27]), 
        .data_in_28(_14_addbus_[28]), 
        .data_in_29(_14_addbus_[29]), 
        .data_in_30(_14_addbus_[30]), 
        .data_in_31(_14_addbus_[31]), 
        .data_in_32(_14_addbus_[32]), 
        .data_in_33(_14_addbus_[33]), 
        .data_in_34(_14_addbus_[34]), 
        .data_in_35(_14_addbus_[35]), 
        .data_in_36(_14_addbus_[36]), 
        .data_in_37(_14_addbus_[37]), 
        .data_in_38(_14_addbus_[38]), 
        .data_in_39(_14_addbus_[39]), 
        .data_in_40(_14_addbus_[40]), 
        .data_in_41(_14_addbus_[41]), 
        .data_in_42(_14_addbus_[42]), 
        .data_in_43(_14_addbus_[43]), 
        .data_in_44(_14_addbus_[44]), 
        .data_in_45(_14_addbus_[45]), 
        .data_in_46(_14_addbus_[46]), 
        .data_in_47(_14_addbus_[47]), 
        .data_in_48(_14_addbus_[48]), 
        .data_in_49(_14_addbus_[49]), 
        .data_in_50(_14_addbus_[50]), 
        .data_in_51(_14_addbus_[51]), 
        .data_in_52(_14_addbus_[52]), 
        .data_in_53(_14_addbus_[53]), 
        .data_in_54(_14_addbus_[54]), 
        .data_in_55(_14_addbus_[55]), 
        .data_in_56(_14_addbus_[56]), 
        .data_in_57(_14_addbus_[57]), 
        .data_in_58(_14_addbus_[58]), 
        .data_in_59(_14_addbus_[59]), 
        .data_in_60(_14_addbus_[60]), 
        .data_in_61(_14_addbus_[61]), 
        .data_in_62(_14_addbus_[62]), 
        .data_in_63(_14_addbus_[63]) 
); 
wire [31:0] _15_addbus_[63:0];    
conv2d #("weight/max_polling/15_0.txt", 2, 0, 31, 31) conv2d_15_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_15_addbus_[0])
);
conv2d #("weight/max_polling/15_1.txt", 2, 0, 31, 31) conv2d_15_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_15_addbus_[1])
);
conv2d #("weight/max_polling/15_2.txt", 2, 0, 31, 31) conv2d_15_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_15_addbus_[2])
);
conv2d #("weight/max_polling/15_3.txt", 2, 0, 31, 31) conv2d_15_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_15_addbus_[3])
);
conv2d #("weight/max_polling/15_4.txt", 2, 0, 31, 31) conv2d_15_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_15_addbus_[4])
);
conv2d #("weight/max_polling/15_5.txt", 2, 0, 31, 31) conv2d_15_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_15_addbus_[5])
);
conv2d #("weight/max_polling/15_6.txt", 2, 0, 31, 31) conv2d_15_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_15_addbus_[6])
);
conv2d #("weight/max_polling/15_7.txt", 2, 0, 31, 31) conv2d_15_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_15_addbus_[7])
);
conv2d #("weight/max_polling/15_8.txt", 2, 0, 31, 31) conv2d_15_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_15_addbus_[8])
);
conv2d #("weight/max_polling/15_9.txt", 2, 0, 31, 31) conv2d_15_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_15_addbus_[9])
);
conv2d #("weight/max_polling/15_10.txt", 2, 0, 31, 31) conv2d_15_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_15_addbus_[10])
);
conv2d #("weight/max_polling/15_11.txt", 2, 0, 31, 31) conv2d_15_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_15_addbus_[11])
);
conv2d #("weight/max_polling/15_12.txt", 2, 0, 31, 31) conv2d_15_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_15_addbus_[12])
);
conv2d #("weight/max_polling/15_13.txt", 2, 0, 31, 31) conv2d_15_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_15_addbus_[13])
);
conv2d #("weight/max_polling/15_14.txt", 2, 0, 31, 31) conv2d_15_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_15_addbus_[14])
);
conv2d #("weight/max_polling/15_15.txt", 2, 0, 31, 31) conv2d_15_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_15_addbus_[15])
);
conv2d #("weight/max_polling/15_16.txt", 2, 0, 31, 31) conv2d_15_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_15_addbus_[16])
);
conv2d #("weight/max_polling/15_17.txt", 2, 0, 31, 31) conv2d_15_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_15_addbus_[17])
);
conv2d #("weight/max_polling/15_18.txt", 2, 0, 31, 31) conv2d_15_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_15_addbus_[18])
);
conv2d #("weight/max_polling/15_19.txt", 2, 0, 31, 31) conv2d_15_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_15_addbus_[19])
);
conv2d #("weight/max_polling/15_20.txt", 2, 0, 31, 31) conv2d_15_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_15_addbus_[20])
);
conv2d #("weight/max_polling/15_21.txt", 2, 0, 31, 31) conv2d_15_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_15_addbus_[21])
);
conv2d #("weight/max_polling/15_22.txt", 2, 0, 31, 31) conv2d_15_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_15_addbus_[22])
);
conv2d #("weight/max_polling/15_23.txt", 2, 0, 31, 31) conv2d_15_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_15_addbus_[23])
);
conv2d #("weight/max_polling/15_24.txt", 2, 0, 31, 31) conv2d_15_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_15_addbus_[24])
);
conv2d #("weight/max_polling/15_25.txt", 2, 0, 31, 31) conv2d_15_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_15_addbus_[25])
);
conv2d #("weight/max_polling/15_26.txt", 2, 0, 31, 31) conv2d_15_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_15_addbus_[26])
);
conv2d #("weight/max_polling/15_27.txt", 2, 0, 31, 31) conv2d_15_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_15_addbus_[27])
);
conv2d #("weight/max_polling/15_28.txt", 2, 0, 31, 31) conv2d_15_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_15_addbus_[28])
);
conv2d #("weight/max_polling/15_29.txt", 2, 0, 31, 31) conv2d_15_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_15_addbus_[29])
);
conv2d #("weight/max_polling/15_30.txt", 2, 0, 31, 31) conv2d_15_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_15_addbus_[30])
);
conv2d #("weight/max_polling/15_31.txt", 2, 0, 31, 31) conv2d_15_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_15_addbus_[31])
);
conv2d #("weight/max_polling/15_32.txt", 2, 0, 31, 31) conv2d_15_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_15_addbus_[32])
);
conv2d #("weight/max_polling/15_33.txt", 2, 0, 31, 31) conv2d_15_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_15_addbus_[33])
);
conv2d #("weight/max_polling/15_34.txt", 2, 0, 31, 31) conv2d_15_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_15_addbus_[34])
);
conv2d #("weight/max_polling/15_35.txt", 2, 0, 31, 31) conv2d_15_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_15_addbus_[35])
);
conv2d #("weight/max_polling/15_36.txt", 2, 0, 31, 31) conv2d_15_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_15_addbus_[36])
);
conv2d #("weight/max_polling/15_37.txt", 2, 0, 31, 31) conv2d_15_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_15_addbus_[37])
);
conv2d #("weight/max_polling/15_38.txt", 2, 0, 31, 31) conv2d_15_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_15_addbus_[38])
);
conv2d #("weight/max_polling/15_39.txt", 2, 0, 31, 31) conv2d_15_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_15_addbus_[39])
);
conv2d #("weight/max_polling/15_40.txt", 2, 0, 31, 31) conv2d_15_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_15_addbus_[40])
);
conv2d #("weight/max_polling/15_41.txt", 2, 0, 31, 31) conv2d_15_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_15_addbus_[41])
);
conv2d #("weight/max_polling/15_42.txt", 2, 0, 31, 31) conv2d_15_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_15_addbus_[42])
);
conv2d #("weight/max_polling/15_43.txt", 2, 0, 31, 31) conv2d_15_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_15_addbus_[43])
);
conv2d #("weight/max_polling/15_44.txt", 2, 0, 31, 31) conv2d_15_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_15_addbus_[44])
);
conv2d #("weight/max_polling/15_45.txt", 2, 0, 31, 31) conv2d_15_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_15_addbus_[45])
);
conv2d #("weight/max_polling/15_46.txt", 2, 0, 31, 31) conv2d_15_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_15_addbus_[46])
);
conv2d #("weight/max_polling/15_47.txt", 2, 0, 31, 31) conv2d_15_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_15_addbus_[47])
);
conv2d #("weight/max_polling/15_48.txt", 2, 0, 31, 31) conv2d_15_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_15_addbus_[48])
);
conv2d #("weight/max_polling/15_49.txt", 2, 0, 31, 31) conv2d_15_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_15_addbus_[49])
);
conv2d #("weight/max_polling/15_50.txt", 2, 0, 31, 31) conv2d_15_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_15_addbus_[50])
);
conv2d #("weight/max_polling/15_51.txt", 2, 0, 31, 31) conv2d_15_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_15_addbus_[51])
);
conv2d #("weight/max_polling/15_52.txt", 2, 0, 31, 31) conv2d_15_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_15_addbus_[52])
);
conv2d #("weight/max_polling/15_53.txt", 2, 0, 31, 31) conv2d_15_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_15_addbus_[53])
);
conv2d #("weight/max_polling/15_54.txt", 2, 0, 31, 31) conv2d_15_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_15_addbus_[54])
);
conv2d #("weight/max_polling/15_55.txt", 2, 0, 31, 31) conv2d_15_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_15_addbus_[55])
);
conv2d #("weight/max_polling/15_56.txt", 2, 0, 31, 31) conv2d_15_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_15_addbus_[56])
);
conv2d #("weight/max_polling/15_57.txt", 2, 0, 31, 31) conv2d_15_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_15_addbus_[57])
);
conv2d #("weight/max_polling/15_58.txt", 2, 0, 31, 31) conv2d_15_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_15_addbus_[58])
);
conv2d #("weight/max_polling/15_59.txt", 2, 0, 31, 31) conv2d_15_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_15_addbus_[59])
);
conv2d #("weight/max_polling/15_60.txt", 2, 0, 31, 31) conv2d_15_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_15_addbus_[60])
);
conv2d #("weight/max_polling/15_61.txt", 2, 0, 31, 31) conv2d_15_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_15_addbus_[61])
);
conv2d #("weight/max_polling/15_62.txt", 2, 0, 31, 31) conv2d_15_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_15_addbus_[62])
);
conv2d #("weight/max_polling/15_63.txt", 2, 0, 31, 31) conv2d_15_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_15_addbus_[63])
);
sum_64 #(15) sum_15( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[15]), 
        .data_in_0(_15_addbus_[0]), 
        .data_in_1(_15_addbus_[1]), 
        .data_in_2(_15_addbus_[2]), 
        .data_in_3(_15_addbus_[3]), 
        .data_in_4(_15_addbus_[4]), 
        .data_in_5(_15_addbus_[5]), 
        .data_in_6(_15_addbus_[6]), 
        .data_in_7(_15_addbus_[7]), 
        .data_in_8(_15_addbus_[8]), 
        .data_in_9(_15_addbus_[9]), 
        .data_in_10(_15_addbus_[10]), 
        .data_in_11(_15_addbus_[11]), 
        .data_in_12(_15_addbus_[12]), 
        .data_in_13(_15_addbus_[13]), 
        .data_in_14(_15_addbus_[14]), 
        .data_in_15(_15_addbus_[15]), 
        .data_in_16(_15_addbus_[16]), 
        .data_in_17(_15_addbus_[17]), 
        .data_in_18(_15_addbus_[18]), 
        .data_in_19(_15_addbus_[19]), 
        .data_in_20(_15_addbus_[20]), 
        .data_in_21(_15_addbus_[21]), 
        .data_in_22(_15_addbus_[22]), 
        .data_in_23(_15_addbus_[23]), 
        .data_in_24(_15_addbus_[24]), 
        .data_in_25(_15_addbus_[25]), 
        .data_in_26(_15_addbus_[26]), 
        .data_in_27(_15_addbus_[27]), 
        .data_in_28(_15_addbus_[28]), 
        .data_in_29(_15_addbus_[29]), 
        .data_in_30(_15_addbus_[30]), 
        .data_in_31(_15_addbus_[31]), 
        .data_in_32(_15_addbus_[32]), 
        .data_in_33(_15_addbus_[33]), 
        .data_in_34(_15_addbus_[34]), 
        .data_in_35(_15_addbus_[35]), 
        .data_in_36(_15_addbus_[36]), 
        .data_in_37(_15_addbus_[37]), 
        .data_in_38(_15_addbus_[38]), 
        .data_in_39(_15_addbus_[39]), 
        .data_in_40(_15_addbus_[40]), 
        .data_in_41(_15_addbus_[41]), 
        .data_in_42(_15_addbus_[42]), 
        .data_in_43(_15_addbus_[43]), 
        .data_in_44(_15_addbus_[44]), 
        .data_in_45(_15_addbus_[45]), 
        .data_in_46(_15_addbus_[46]), 
        .data_in_47(_15_addbus_[47]), 
        .data_in_48(_15_addbus_[48]), 
        .data_in_49(_15_addbus_[49]), 
        .data_in_50(_15_addbus_[50]), 
        .data_in_51(_15_addbus_[51]), 
        .data_in_52(_15_addbus_[52]), 
        .data_in_53(_15_addbus_[53]), 
        .data_in_54(_15_addbus_[54]), 
        .data_in_55(_15_addbus_[55]), 
        .data_in_56(_15_addbus_[56]), 
        .data_in_57(_15_addbus_[57]), 
        .data_in_58(_15_addbus_[58]), 
        .data_in_59(_15_addbus_[59]), 
        .data_in_60(_15_addbus_[60]), 
        .data_in_61(_15_addbus_[61]), 
        .data_in_62(_15_addbus_[62]), 
        .data_in_63(_15_addbus_[63]) 
); 
wire [31:0] _16_addbus_[63:0];    
conv2d #("weight/max_polling/16_0.txt", 2, 0, 31, 31) conv2d_16_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_16_addbus_[0])
);
conv2d #("weight/max_polling/16_1.txt", 2, 0, 31, 31) conv2d_16_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_16_addbus_[1])
);
conv2d #("weight/max_polling/16_2.txt", 2, 0, 31, 31) conv2d_16_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_16_addbus_[2])
);
conv2d #("weight/max_polling/16_3.txt", 2, 0, 31, 31) conv2d_16_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_16_addbus_[3])
);
conv2d #("weight/max_polling/16_4.txt", 2, 0, 31, 31) conv2d_16_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_16_addbus_[4])
);
conv2d #("weight/max_polling/16_5.txt", 2, 0, 31, 31) conv2d_16_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_16_addbus_[5])
);
conv2d #("weight/max_polling/16_6.txt", 2, 0, 31, 31) conv2d_16_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_16_addbus_[6])
);
conv2d #("weight/max_polling/16_7.txt", 2, 0, 31, 31) conv2d_16_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_16_addbus_[7])
);
conv2d #("weight/max_polling/16_8.txt", 2, 0, 31, 31) conv2d_16_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_16_addbus_[8])
);
conv2d #("weight/max_polling/16_9.txt", 2, 0, 31, 31) conv2d_16_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_16_addbus_[9])
);
conv2d #("weight/max_polling/16_10.txt", 2, 0, 31, 31) conv2d_16_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_16_addbus_[10])
);
conv2d #("weight/max_polling/16_11.txt", 2, 0, 31, 31) conv2d_16_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_16_addbus_[11])
);
conv2d #("weight/max_polling/16_12.txt", 2, 0, 31, 31) conv2d_16_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_16_addbus_[12])
);
conv2d #("weight/max_polling/16_13.txt", 2, 0, 31, 31) conv2d_16_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_16_addbus_[13])
);
conv2d #("weight/max_polling/16_14.txt", 2, 0, 31, 31) conv2d_16_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_16_addbus_[14])
);
conv2d #("weight/max_polling/16_15.txt", 2, 0, 31, 31) conv2d_16_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_16_addbus_[15])
);
conv2d #("weight/max_polling/16_16.txt", 2, 0, 31, 31) conv2d_16_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_16_addbus_[16])
);
conv2d #("weight/max_polling/16_17.txt", 2, 0, 31, 31) conv2d_16_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_16_addbus_[17])
);
conv2d #("weight/max_polling/16_18.txt", 2, 0, 31, 31) conv2d_16_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_16_addbus_[18])
);
conv2d #("weight/max_polling/16_19.txt", 2, 0, 31, 31) conv2d_16_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_16_addbus_[19])
);
conv2d #("weight/max_polling/16_20.txt", 2, 0, 31, 31) conv2d_16_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_16_addbus_[20])
);
conv2d #("weight/max_polling/16_21.txt", 2, 0, 31, 31) conv2d_16_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_16_addbus_[21])
);
conv2d #("weight/max_polling/16_22.txt", 2, 0, 31, 31) conv2d_16_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_16_addbus_[22])
);
conv2d #("weight/max_polling/16_23.txt", 2, 0, 31, 31) conv2d_16_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_16_addbus_[23])
);
conv2d #("weight/max_polling/16_24.txt", 2, 0, 31, 31) conv2d_16_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_16_addbus_[24])
);
conv2d #("weight/max_polling/16_25.txt", 2, 0, 31, 31) conv2d_16_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_16_addbus_[25])
);
conv2d #("weight/max_polling/16_26.txt", 2, 0, 31, 31) conv2d_16_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_16_addbus_[26])
);
conv2d #("weight/max_polling/16_27.txt", 2, 0, 31, 31) conv2d_16_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_16_addbus_[27])
);
conv2d #("weight/max_polling/16_28.txt", 2, 0, 31, 31) conv2d_16_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_16_addbus_[28])
);
conv2d #("weight/max_polling/16_29.txt", 2, 0, 31, 31) conv2d_16_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_16_addbus_[29])
);
conv2d #("weight/max_polling/16_30.txt", 2, 0, 31, 31) conv2d_16_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_16_addbus_[30])
);
conv2d #("weight/max_polling/16_31.txt", 2, 0, 31, 31) conv2d_16_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_16_addbus_[31])
);
conv2d #("weight/max_polling/16_32.txt", 2, 0, 31, 31) conv2d_16_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_16_addbus_[32])
);
conv2d #("weight/max_polling/16_33.txt", 2, 0, 31, 31) conv2d_16_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_16_addbus_[33])
);
conv2d #("weight/max_polling/16_34.txt", 2, 0, 31, 31) conv2d_16_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_16_addbus_[34])
);
conv2d #("weight/max_polling/16_35.txt", 2, 0, 31, 31) conv2d_16_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_16_addbus_[35])
);
conv2d #("weight/max_polling/16_36.txt", 2, 0, 31, 31) conv2d_16_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_16_addbus_[36])
);
conv2d #("weight/max_polling/16_37.txt", 2, 0, 31, 31) conv2d_16_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_16_addbus_[37])
);
conv2d #("weight/max_polling/16_38.txt", 2, 0, 31, 31) conv2d_16_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_16_addbus_[38])
);
conv2d #("weight/max_polling/16_39.txt", 2, 0, 31, 31) conv2d_16_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_16_addbus_[39])
);
conv2d #("weight/max_polling/16_40.txt", 2, 0, 31, 31) conv2d_16_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_16_addbus_[40])
);
conv2d #("weight/max_polling/16_41.txt", 2, 0, 31, 31) conv2d_16_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_16_addbus_[41])
);
conv2d #("weight/max_polling/16_42.txt", 2, 0, 31, 31) conv2d_16_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_16_addbus_[42])
);
conv2d #("weight/max_polling/16_43.txt", 2, 0, 31, 31) conv2d_16_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_16_addbus_[43])
);
conv2d #("weight/max_polling/16_44.txt", 2, 0, 31, 31) conv2d_16_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_16_addbus_[44])
);
conv2d #("weight/max_polling/16_45.txt", 2, 0, 31, 31) conv2d_16_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_16_addbus_[45])
);
conv2d #("weight/max_polling/16_46.txt", 2, 0, 31, 31) conv2d_16_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_16_addbus_[46])
);
conv2d #("weight/max_polling/16_47.txt", 2, 0, 31, 31) conv2d_16_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_16_addbus_[47])
);
conv2d #("weight/max_polling/16_48.txt", 2, 0, 31, 31) conv2d_16_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_16_addbus_[48])
);
conv2d #("weight/max_polling/16_49.txt", 2, 0, 31, 31) conv2d_16_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_16_addbus_[49])
);
conv2d #("weight/max_polling/16_50.txt", 2, 0, 31, 31) conv2d_16_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_16_addbus_[50])
);
conv2d #("weight/max_polling/16_51.txt", 2, 0, 31, 31) conv2d_16_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_16_addbus_[51])
);
conv2d #("weight/max_polling/16_52.txt", 2, 0, 31, 31) conv2d_16_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_16_addbus_[52])
);
conv2d #("weight/max_polling/16_53.txt", 2, 0, 31, 31) conv2d_16_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_16_addbus_[53])
);
conv2d #("weight/max_polling/16_54.txt", 2, 0, 31, 31) conv2d_16_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_16_addbus_[54])
);
conv2d #("weight/max_polling/16_55.txt", 2, 0, 31, 31) conv2d_16_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_16_addbus_[55])
);
conv2d #("weight/max_polling/16_56.txt", 2, 0, 31, 31) conv2d_16_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_16_addbus_[56])
);
conv2d #("weight/max_polling/16_57.txt", 2, 0, 31, 31) conv2d_16_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_16_addbus_[57])
);
conv2d #("weight/max_polling/16_58.txt", 2, 0, 31, 31) conv2d_16_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_16_addbus_[58])
);
conv2d #("weight/max_polling/16_59.txt", 2, 0, 31, 31) conv2d_16_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_16_addbus_[59])
);
conv2d #("weight/max_polling/16_60.txt", 2, 0, 31, 31) conv2d_16_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_16_addbus_[60])
);
conv2d #("weight/max_polling/16_61.txt", 2, 0, 31, 31) conv2d_16_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_16_addbus_[61])
);
conv2d #("weight/max_polling/16_62.txt", 2, 0, 31, 31) conv2d_16_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_16_addbus_[62])
);
conv2d #("weight/max_polling/16_63.txt", 2, 0, 31, 31) conv2d_16_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_16_addbus_[63])
);
sum_64 #(15) sum_16( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[16]), 
        .data_in_0(_16_addbus_[0]), 
        .data_in_1(_16_addbus_[1]), 
        .data_in_2(_16_addbus_[2]), 
        .data_in_3(_16_addbus_[3]), 
        .data_in_4(_16_addbus_[4]), 
        .data_in_5(_16_addbus_[5]), 
        .data_in_6(_16_addbus_[6]), 
        .data_in_7(_16_addbus_[7]), 
        .data_in_8(_16_addbus_[8]), 
        .data_in_9(_16_addbus_[9]), 
        .data_in_10(_16_addbus_[10]), 
        .data_in_11(_16_addbus_[11]), 
        .data_in_12(_16_addbus_[12]), 
        .data_in_13(_16_addbus_[13]), 
        .data_in_14(_16_addbus_[14]), 
        .data_in_15(_16_addbus_[15]), 
        .data_in_16(_16_addbus_[16]), 
        .data_in_17(_16_addbus_[17]), 
        .data_in_18(_16_addbus_[18]), 
        .data_in_19(_16_addbus_[19]), 
        .data_in_20(_16_addbus_[20]), 
        .data_in_21(_16_addbus_[21]), 
        .data_in_22(_16_addbus_[22]), 
        .data_in_23(_16_addbus_[23]), 
        .data_in_24(_16_addbus_[24]), 
        .data_in_25(_16_addbus_[25]), 
        .data_in_26(_16_addbus_[26]), 
        .data_in_27(_16_addbus_[27]), 
        .data_in_28(_16_addbus_[28]), 
        .data_in_29(_16_addbus_[29]), 
        .data_in_30(_16_addbus_[30]), 
        .data_in_31(_16_addbus_[31]), 
        .data_in_32(_16_addbus_[32]), 
        .data_in_33(_16_addbus_[33]), 
        .data_in_34(_16_addbus_[34]), 
        .data_in_35(_16_addbus_[35]), 
        .data_in_36(_16_addbus_[36]), 
        .data_in_37(_16_addbus_[37]), 
        .data_in_38(_16_addbus_[38]), 
        .data_in_39(_16_addbus_[39]), 
        .data_in_40(_16_addbus_[40]), 
        .data_in_41(_16_addbus_[41]), 
        .data_in_42(_16_addbus_[42]), 
        .data_in_43(_16_addbus_[43]), 
        .data_in_44(_16_addbus_[44]), 
        .data_in_45(_16_addbus_[45]), 
        .data_in_46(_16_addbus_[46]), 
        .data_in_47(_16_addbus_[47]), 
        .data_in_48(_16_addbus_[48]), 
        .data_in_49(_16_addbus_[49]), 
        .data_in_50(_16_addbus_[50]), 
        .data_in_51(_16_addbus_[51]), 
        .data_in_52(_16_addbus_[52]), 
        .data_in_53(_16_addbus_[53]), 
        .data_in_54(_16_addbus_[54]), 
        .data_in_55(_16_addbus_[55]), 
        .data_in_56(_16_addbus_[56]), 
        .data_in_57(_16_addbus_[57]), 
        .data_in_58(_16_addbus_[58]), 
        .data_in_59(_16_addbus_[59]), 
        .data_in_60(_16_addbus_[60]), 
        .data_in_61(_16_addbus_[61]), 
        .data_in_62(_16_addbus_[62]), 
        .data_in_63(_16_addbus_[63]) 
); 
wire [31:0] _17_addbus_[63:0];    
conv2d #("weight/max_polling/17_0.txt", 2, 0, 31, 31) conv2d_17_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_17_addbus_[0])
);
conv2d #("weight/max_polling/17_1.txt", 2, 0, 31, 31) conv2d_17_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_17_addbus_[1])
);
conv2d #("weight/max_polling/17_2.txt", 2, 0, 31, 31) conv2d_17_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_17_addbus_[2])
);
conv2d #("weight/max_polling/17_3.txt", 2, 0, 31, 31) conv2d_17_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_17_addbus_[3])
);
conv2d #("weight/max_polling/17_4.txt", 2, 0, 31, 31) conv2d_17_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_17_addbus_[4])
);
conv2d #("weight/max_polling/17_5.txt", 2, 0, 31, 31) conv2d_17_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_17_addbus_[5])
);
conv2d #("weight/max_polling/17_6.txt", 2, 0, 31, 31) conv2d_17_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_17_addbus_[6])
);
conv2d #("weight/max_polling/17_7.txt", 2, 0, 31, 31) conv2d_17_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_17_addbus_[7])
);
conv2d #("weight/max_polling/17_8.txt", 2, 0, 31, 31) conv2d_17_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_17_addbus_[8])
);
conv2d #("weight/max_polling/17_9.txt", 2, 0, 31, 31) conv2d_17_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_17_addbus_[9])
);
conv2d #("weight/max_polling/17_10.txt", 2, 0, 31, 31) conv2d_17_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_17_addbus_[10])
);
conv2d #("weight/max_polling/17_11.txt", 2, 0, 31, 31) conv2d_17_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_17_addbus_[11])
);
conv2d #("weight/max_polling/17_12.txt", 2, 0, 31, 31) conv2d_17_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_17_addbus_[12])
);
conv2d #("weight/max_polling/17_13.txt", 2, 0, 31, 31) conv2d_17_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_17_addbus_[13])
);
conv2d #("weight/max_polling/17_14.txt", 2, 0, 31, 31) conv2d_17_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_17_addbus_[14])
);
conv2d #("weight/max_polling/17_15.txt", 2, 0, 31, 31) conv2d_17_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_17_addbus_[15])
);
conv2d #("weight/max_polling/17_16.txt", 2, 0, 31, 31) conv2d_17_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_17_addbus_[16])
);
conv2d #("weight/max_polling/17_17.txt", 2, 0, 31, 31) conv2d_17_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_17_addbus_[17])
);
conv2d #("weight/max_polling/17_18.txt", 2, 0, 31, 31) conv2d_17_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_17_addbus_[18])
);
conv2d #("weight/max_polling/17_19.txt", 2, 0, 31, 31) conv2d_17_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_17_addbus_[19])
);
conv2d #("weight/max_polling/17_20.txt", 2, 0, 31, 31) conv2d_17_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_17_addbus_[20])
);
conv2d #("weight/max_polling/17_21.txt", 2, 0, 31, 31) conv2d_17_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_17_addbus_[21])
);
conv2d #("weight/max_polling/17_22.txt", 2, 0, 31, 31) conv2d_17_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_17_addbus_[22])
);
conv2d #("weight/max_polling/17_23.txt", 2, 0, 31, 31) conv2d_17_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_17_addbus_[23])
);
conv2d #("weight/max_polling/17_24.txt", 2, 0, 31, 31) conv2d_17_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_17_addbus_[24])
);
conv2d #("weight/max_polling/17_25.txt", 2, 0, 31, 31) conv2d_17_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_17_addbus_[25])
);
conv2d #("weight/max_polling/17_26.txt", 2, 0, 31, 31) conv2d_17_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_17_addbus_[26])
);
conv2d #("weight/max_polling/17_27.txt", 2, 0, 31, 31) conv2d_17_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_17_addbus_[27])
);
conv2d #("weight/max_polling/17_28.txt", 2, 0, 31, 31) conv2d_17_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_17_addbus_[28])
);
conv2d #("weight/max_polling/17_29.txt", 2, 0, 31, 31) conv2d_17_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_17_addbus_[29])
);
conv2d #("weight/max_polling/17_30.txt", 2, 0, 31, 31) conv2d_17_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_17_addbus_[30])
);
conv2d #("weight/max_polling/17_31.txt", 2, 0, 31, 31) conv2d_17_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_17_addbus_[31])
);
conv2d #("weight/max_polling/17_32.txt", 2, 0, 31, 31) conv2d_17_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_17_addbus_[32])
);
conv2d #("weight/max_polling/17_33.txt", 2, 0, 31, 31) conv2d_17_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_17_addbus_[33])
);
conv2d #("weight/max_polling/17_34.txt", 2, 0, 31, 31) conv2d_17_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_17_addbus_[34])
);
conv2d #("weight/max_polling/17_35.txt", 2, 0, 31, 31) conv2d_17_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_17_addbus_[35])
);
conv2d #("weight/max_polling/17_36.txt", 2, 0, 31, 31) conv2d_17_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_17_addbus_[36])
);
conv2d #("weight/max_polling/17_37.txt", 2, 0, 31, 31) conv2d_17_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_17_addbus_[37])
);
conv2d #("weight/max_polling/17_38.txt", 2, 0, 31, 31) conv2d_17_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_17_addbus_[38])
);
conv2d #("weight/max_polling/17_39.txt", 2, 0, 31, 31) conv2d_17_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_17_addbus_[39])
);
conv2d #("weight/max_polling/17_40.txt", 2, 0, 31, 31) conv2d_17_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_17_addbus_[40])
);
conv2d #("weight/max_polling/17_41.txt", 2, 0, 31, 31) conv2d_17_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_17_addbus_[41])
);
conv2d #("weight/max_polling/17_42.txt", 2, 0, 31, 31) conv2d_17_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_17_addbus_[42])
);
conv2d #("weight/max_polling/17_43.txt", 2, 0, 31, 31) conv2d_17_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_17_addbus_[43])
);
conv2d #("weight/max_polling/17_44.txt", 2, 0, 31, 31) conv2d_17_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_17_addbus_[44])
);
conv2d #("weight/max_polling/17_45.txt", 2, 0, 31, 31) conv2d_17_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_17_addbus_[45])
);
conv2d #("weight/max_polling/17_46.txt", 2, 0, 31, 31) conv2d_17_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_17_addbus_[46])
);
conv2d #("weight/max_polling/17_47.txt", 2, 0, 31, 31) conv2d_17_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_17_addbus_[47])
);
conv2d #("weight/max_polling/17_48.txt", 2, 0, 31, 31) conv2d_17_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_17_addbus_[48])
);
conv2d #("weight/max_polling/17_49.txt", 2, 0, 31, 31) conv2d_17_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_17_addbus_[49])
);
conv2d #("weight/max_polling/17_50.txt", 2, 0, 31, 31) conv2d_17_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_17_addbus_[50])
);
conv2d #("weight/max_polling/17_51.txt", 2, 0, 31, 31) conv2d_17_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_17_addbus_[51])
);
conv2d #("weight/max_polling/17_52.txt", 2, 0, 31, 31) conv2d_17_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_17_addbus_[52])
);
conv2d #("weight/max_polling/17_53.txt", 2, 0, 31, 31) conv2d_17_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_17_addbus_[53])
);
conv2d #("weight/max_polling/17_54.txt", 2, 0, 31, 31) conv2d_17_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_17_addbus_[54])
);
conv2d #("weight/max_polling/17_55.txt", 2, 0, 31, 31) conv2d_17_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_17_addbus_[55])
);
conv2d #("weight/max_polling/17_56.txt", 2, 0, 31, 31) conv2d_17_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_17_addbus_[56])
);
conv2d #("weight/max_polling/17_57.txt", 2, 0, 31, 31) conv2d_17_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_17_addbus_[57])
);
conv2d #("weight/max_polling/17_58.txt", 2, 0, 31, 31) conv2d_17_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_17_addbus_[58])
);
conv2d #("weight/max_polling/17_59.txt", 2, 0, 31, 31) conv2d_17_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_17_addbus_[59])
);
conv2d #("weight/max_polling/17_60.txt", 2, 0, 31, 31) conv2d_17_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_17_addbus_[60])
);
conv2d #("weight/max_polling/17_61.txt", 2, 0, 31, 31) conv2d_17_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_17_addbus_[61])
);
conv2d #("weight/max_polling/17_62.txt", 2, 0, 31, 31) conv2d_17_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_17_addbus_[62])
);
conv2d #("weight/max_polling/17_63.txt", 2, 0, 31, 31) conv2d_17_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_17_addbus_[63])
);
sum_64 #(15) sum_17( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[17]), 
        .data_in_0(_17_addbus_[0]), 
        .data_in_1(_17_addbus_[1]), 
        .data_in_2(_17_addbus_[2]), 
        .data_in_3(_17_addbus_[3]), 
        .data_in_4(_17_addbus_[4]), 
        .data_in_5(_17_addbus_[5]), 
        .data_in_6(_17_addbus_[6]), 
        .data_in_7(_17_addbus_[7]), 
        .data_in_8(_17_addbus_[8]), 
        .data_in_9(_17_addbus_[9]), 
        .data_in_10(_17_addbus_[10]), 
        .data_in_11(_17_addbus_[11]), 
        .data_in_12(_17_addbus_[12]), 
        .data_in_13(_17_addbus_[13]), 
        .data_in_14(_17_addbus_[14]), 
        .data_in_15(_17_addbus_[15]), 
        .data_in_16(_17_addbus_[16]), 
        .data_in_17(_17_addbus_[17]), 
        .data_in_18(_17_addbus_[18]), 
        .data_in_19(_17_addbus_[19]), 
        .data_in_20(_17_addbus_[20]), 
        .data_in_21(_17_addbus_[21]), 
        .data_in_22(_17_addbus_[22]), 
        .data_in_23(_17_addbus_[23]), 
        .data_in_24(_17_addbus_[24]), 
        .data_in_25(_17_addbus_[25]), 
        .data_in_26(_17_addbus_[26]), 
        .data_in_27(_17_addbus_[27]), 
        .data_in_28(_17_addbus_[28]), 
        .data_in_29(_17_addbus_[29]), 
        .data_in_30(_17_addbus_[30]), 
        .data_in_31(_17_addbus_[31]), 
        .data_in_32(_17_addbus_[32]), 
        .data_in_33(_17_addbus_[33]), 
        .data_in_34(_17_addbus_[34]), 
        .data_in_35(_17_addbus_[35]), 
        .data_in_36(_17_addbus_[36]), 
        .data_in_37(_17_addbus_[37]), 
        .data_in_38(_17_addbus_[38]), 
        .data_in_39(_17_addbus_[39]), 
        .data_in_40(_17_addbus_[40]), 
        .data_in_41(_17_addbus_[41]), 
        .data_in_42(_17_addbus_[42]), 
        .data_in_43(_17_addbus_[43]), 
        .data_in_44(_17_addbus_[44]), 
        .data_in_45(_17_addbus_[45]), 
        .data_in_46(_17_addbus_[46]), 
        .data_in_47(_17_addbus_[47]), 
        .data_in_48(_17_addbus_[48]), 
        .data_in_49(_17_addbus_[49]), 
        .data_in_50(_17_addbus_[50]), 
        .data_in_51(_17_addbus_[51]), 
        .data_in_52(_17_addbus_[52]), 
        .data_in_53(_17_addbus_[53]), 
        .data_in_54(_17_addbus_[54]), 
        .data_in_55(_17_addbus_[55]), 
        .data_in_56(_17_addbus_[56]), 
        .data_in_57(_17_addbus_[57]), 
        .data_in_58(_17_addbus_[58]), 
        .data_in_59(_17_addbus_[59]), 
        .data_in_60(_17_addbus_[60]), 
        .data_in_61(_17_addbus_[61]), 
        .data_in_62(_17_addbus_[62]), 
        .data_in_63(_17_addbus_[63]) 
); 
wire [31:0] _18_addbus_[63:0];    
conv2d #("weight/max_polling/18_0.txt", 2, 0, 31, 31) conv2d_18_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_18_addbus_[0])
);
conv2d #("weight/max_polling/18_1.txt", 2, 0, 31, 31) conv2d_18_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_18_addbus_[1])
);
conv2d #("weight/max_polling/18_2.txt", 2, 0, 31, 31) conv2d_18_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_18_addbus_[2])
);
conv2d #("weight/max_polling/18_3.txt", 2, 0, 31, 31) conv2d_18_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_18_addbus_[3])
);
conv2d #("weight/max_polling/18_4.txt", 2, 0, 31, 31) conv2d_18_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_18_addbus_[4])
);
conv2d #("weight/max_polling/18_5.txt", 2, 0, 31, 31) conv2d_18_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_18_addbus_[5])
);
conv2d #("weight/max_polling/18_6.txt", 2, 0, 31, 31) conv2d_18_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_18_addbus_[6])
);
conv2d #("weight/max_polling/18_7.txt", 2, 0, 31, 31) conv2d_18_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_18_addbus_[7])
);
conv2d #("weight/max_polling/18_8.txt", 2, 0, 31, 31) conv2d_18_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_18_addbus_[8])
);
conv2d #("weight/max_polling/18_9.txt", 2, 0, 31, 31) conv2d_18_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_18_addbus_[9])
);
conv2d #("weight/max_polling/18_10.txt", 2, 0, 31, 31) conv2d_18_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_18_addbus_[10])
);
conv2d #("weight/max_polling/18_11.txt", 2, 0, 31, 31) conv2d_18_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_18_addbus_[11])
);
conv2d #("weight/max_polling/18_12.txt", 2, 0, 31, 31) conv2d_18_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_18_addbus_[12])
);
conv2d #("weight/max_polling/18_13.txt", 2, 0, 31, 31) conv2d_18_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_18_addbus_[13])
);
conv2d #("weight/max_polling/18_14.txt", 2, 0, 31, 31) conv2d_18_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_18_addbus_[14])
);
conv2d #("weight/max_polling/18_15.txt", 2, 0, 31, 31) conv2d_18_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_18_addbus_[15])
);
conv2d #("weight/max_polling/18_16.txt", 2, 0, 31, 31) conv2d_18_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_18_addbus_[16])
);
conv2d #("weight/max_polling/18_17.txt", 2, 0, 31, 31) conv2d_18_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_18_addbus_[17])
);
conv2d #("weight/max_polling/18_18.txt", 2, 0, 31, 31) conv2d_18_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_18_addbus_[18])
);
conv2d #("weight/max_polling/18_19.txt", 2, 0, 31, 31) conv2d_18_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_18_addbus_[19])
);
conv2d #("weight/max_polling/18_20.txt", 2, 0, 31, 31) conv2d_18_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_18_addbus_[20])
);
conv2d #("weight/max_polling/18_21.txt", 2, 0, 31, 31) conv2d_18_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_18_addbus_[21])
);
conv2d #("weight/max_polling/18_22.txt", 2, 0, 31, 31) conv2d_18_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_18_addbus_[22])
);
conv2d #("weight/max_polling/18_23.txt", 2, 0, 31, 31) conv2d_18_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_18_addbus_[23])
);
conv2d #("weight/max_polling/18_24.txt", 2, 0, 31, 31) conv2d_18_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_18_addbus_[24])
);
conv2d #("weight/max_polling/18_25.txt", 2, 0, 31, 31) conv2d_18_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_18_addbus_[25])
);
conv2d #("weight/max_polling/18_26.txt", 2, 0, 31, 31) conv2d_18_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_18_addbus_[26])
);
conv2d #("weight/max_polling/18_27.txt", 2, 0, 31, 31) conv2d_18_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_18_addbus_[27])
);
conv2d #("weight/max_polling/18_28.txt", 2, 0, 31, 31) conv2d_18_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_18_addbus_[28])
);
conv2d #("weight/max_polling/18_29.txt", 2, 0, 31, 31) conv2d_18_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_18_addbus_[29])
);
conv2d #("weight/max_polling/18_30.txt", 2, 0, 31, 31) conv2d_18_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_18_addbus_[30])
);
conv2d #("weight/max_polling/18_31.txt", 2, 0, 31, 31) conv2d_18_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_18_addbus_[31])
);
conv2d #("weight/max_polling/18_32.txt", 2, 0, 31, 31) conv2d_18_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_18_addbus_[32])
);
conv2d #("weight/max_polling/18_33.txt", 2, 0, 31, 31) conv2d_18_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_18_addbus_[33])
);
conv2d #("weight/max_polling/18_34.txt", 2, 0, 31, 31) conv2d_18_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_18_addbus_[34])
);
conv2d #("weight/max_polling/18_35.txt", 2, 0, 31, 31) conv2d_18_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_18_addbus_[35])
);
conv2d #("weight/max_polling/18_36.txt", 2, 0, 31, 31) conv2d_18_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_18_addbus_[36])
);
conv2d #("weight/max_polling/18_37.txt", 2, 0, 31, 31) conv2d_18_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_18_addbus_[37])
);
conv2d #("weight/max_polling/18_38.txt", 2, 0, 31, 31) conv2d_18_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_18_addbus_[38])
);
conv2d #("weight/max_polling/18_39.txt", 2, 0, 31, 31) conv2d_18_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_18_addbus_[39])
);
conv2d #("weight/max_polling/18_40.txt", 2, 0, 31, 31) conv2d_18_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_18_addbus_[40])
);
conv2d #("weight/max_polling/18_41.txt", 2, 0, 31, 31) conv2d_18_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_18_addbus_[41])
);
conv2d #("weight/max_polling/18_42.txt", 2, 0, 31, 31) conv2d_18_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_18_addbus_[42])
);
conv2d #("weight/max_polling/18_43.txt", 2, 0, 31, 31) conv2d_18_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_18_addbus_[43])
);
conv2d #("weight/max_polling/18_44.txt", 2, 0, 31, 31) conv2d_18_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_18_addbus_[44])
);
conv2d #("weight/max_polling/18_45.txt", 2, 0, 31, 31) conv2d_18_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_18_addbus_[45])
);
conv2d #("weight/max_polling/18_46.txt", 2, 0, 31, 31) conv2d_18_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_18_addbus_[46])
);
conv2d #("weight/max_polling/18_47.txt", 2, 0, 31, 31) conv2d_18_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_18_addbus_[47])
);
conv2d #("weight/max_polling/18_48.txt", 2, 0, 31, 31) conv2d_18_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_18_addbus_[48])
);
conv2d #("weight/max_polling/18_49.txt", 2, 0, 31, 31) conv2d_18_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_18_addbus_[49])
);
conv2d #("weight/max_polling/18_50.txt", 2, 0, 31, 31) conv2d_18_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_18_addbus_[50])
);
conv2d #("weight/max_polling/18_51.txt", 2, 0, 31, 31) conv2d_18_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_18_addbus_[51])
);
conv2d #("weight/max_polling/18_52.txt", 2, 0, 31, 31) conv2d_18_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_18_addbus_[52])
);
conv2d #("weight/max_polling/18_53.txt", 2, 0, 31, 31) conv2d_18_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_18_addbus_[53])
);
conv2d #("weight/max_polling/18_54.txt", 2, 0, 31, 31) conv2d_18_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_18_addbus_[54])
);
conv2d #("weight/max_polling/18_55.txt", 2, 0, 31, 31) conv2d_18_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_18_addbus_[55])
);
conv2d #("weight/max_polling/18_56.txt", 2, 0, 31, 31) conv2d_18_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_18_addbus_[56])
);
conv2d #("weight/max_polling/18_57.txt", 2, 0, 31, 31) conv2d_18_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_18_addbus_[57])
);
conv2d #("weight/max_polling/18_58.txt", 2, 0, 31, 31) conv2d_18_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_18_addbus_[58])
);
conv2d #("weight/max_polling/18_59.txt", 2, 0, 31, 31) conv2d_18_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_18_addbus_[59])
);
conv2d #("weight/max_polling/18_60.txt", 2, 0, 31, 31) conv2d_18_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_18_addbus_[60])
);
conv2d #("weight/max_polling/18_61.txt", 2, 0, 31, 31) conv2d_18_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_18_addbus_[61])
);
conv2d #("weight/max_polling/18_62.txt", 2, 0, 31, 31) conv2d_18_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_18_addbus_[62])
);
conv2d #("weight/max_polling/18_63.txt", 2, 0, 31, 31) conv2d_18_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_18_addbus_[63])
);
sum_64 #(15) sum_18( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[18]), 
        .data_in_0(_18_addbus_[0]), 
        .data_in_1(_18_addbus_[1]), 
        .data_in_2(_18_addbus_[2]), 
        .data_in_3(_18_addbus_[3]), 
        .data_in_4(_18_addbus_[4]), 
        .data_in_5(_18_addbus_[5]), 
        .data_in_6(_18_addbus_[6]), 
        .data_in_7(_18_addbus_[7]), 
        .data_in_8(_18_addbus_[8]), 
        .data_in_9(_18_addbus_[9]), 
        .data_in_10(_18_addbus_[10]), 
        .data_in_11(_18_addbus_[11]), 
        .data_in_12(_18_addbus_[12]), 
        .data_in_13(_18_addbus_[13]), 
        .data_in_14(_18_addbus_[14]), 
        .data_in_15(_18_addbus_[15]), 
        .data_in_16(_18_addbus_[16]), 
        .data_in_17(_18_addbus_[17]), 
        .data_in_18(_18_addbus_[18]), 
        .data_in_19(_18_addbus_[19]), 
        .data_in_20(_18_addbus_[20]), 
        .data_in_21(_18_addbus_[21]), 
        .data_in_22(_18_addbus_[22]), 
        .data_in_23(_18_addbus_[23]), 
        .data_in_24(_18_addbus_[24]), 
        .data_in_25(_18_addbus_[25]), 
        .data_in_26(_18_addbus_[26]), 
        .data_in_27(_18_addbus_[27]), 
        .data_in_28(_18_addbus_[28]), 
        .data_in_29(_18_addbus_[29]), 
        .data_in_30(_18_addbus_[30]), 
        .data_in_31(_18_addbus_[31]), 
        .data_in_32(_18_addbus_[32]), 
        .data_in_33(_18_addbus_[33]), 
        .data_in_34(_18_addbus_[34]), 
        .data_in_35(_18_addbus_[35]), 
        .data_in_36(_18_addbus_[36]), 
        .data_in_37(_18_addbus_[37]), 
        .data_in_38(_18_addbus_[38]), 
        .data_in_39(_18_addbus_[39]), 
        .data_in_40(_18_addbus_[40]), 
        .data_in_41(_18_addbus_[41]), 
        .data_in_42(_18_addbus_[42]), 
        .data_in_43(_18_addbus_[43]), 
        .data_in_44(_18_addbus_[44]), 
        .data_in_45(_18_addbus_[45]), 
        .data_in_46(_18_addbus_[46]), 
        .data_in_47(_18_addbus_[47]), 
        .data_in_48(_18_addbus_[48]), 
        .data_in_49(_18_addbus_[49]), 
        .data_in_50(_18_addbus_[50]), 
        .data_in_51(_18_addbus_[51]), 
        .data_in_52(_18_addbus_[52]), 
        .data_in_53(_18_addbus_[53]), 
        .data_in_54(_18_addbus_[54]), 
        .data_in_55(_18_addbus_[55]), 
        .data_in_56(_18_addbus_[56]), 
        .data_in_57(_18_addbus_[57]), 
        .data_in_58(_18_addbus_[58]), 
        .data_in_59(_18_addbus_[59]), 
        .data_in_60(_18_addbus_[60]), 
        .data_in_61(_18_addbus_[61]), 
        .data_in_62(_18_addbus_[62]), 
        .data_in_63(_18_addbus_[63]) 
); 
wire [31:0] _19_addbus_[63:0];    
conv2d #("weight/max_polling/19_0.txt", 2, 0, 31, 31) conv2d_19_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_19_addbus_[0])
);
conv2d #("weight/max_polling/19_1.txt", 2, 0, 31, 31) conv2d_19_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_19_addbus_[1])
);
conv2d #("weight/max_polling/19_2.txt", 2, 0, 31, 31) conv2d_19_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_19_addbus_[2])
);
conv2d #("weight/max_polling/19_3.txt", 2, 0, 31, 31) conv2d_19_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_19_addbus_[3])
);
conv2d #("weight/max_polling/19_4.txt", 2, 0, 31, 31) conv2d_19_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_19_addbus_[4])
);
conv2d #("weight/max_polling/19_5.txt", 2, 0, 31, 31) conv2d_19_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_19_addbus_[5])
);
conv2d #("weight/max_polling/19_6.txt", 2, 0, 31, 31) conv2d_19_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_19_addbus_[6])
);
conv2d #("weight/max_polling/19_7.txt", 2, 0, 31, 31) conv2d_19_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_19_addbus_[7])
);
conv2d #("weight/max_polling/19_8.txt", 2, 0, 31, 31) conv2d_19_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_19_addbus_[8])
);
conv2d #("weight/max_polling/19_9.txt", 2, 0, 31, 31) conv2d_19_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_19_addbus_[9])
);
conv2d #("weight/max_polling/19_10.txt", 2, 0, 31, 31) conv2d_19_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_19_addbus_[10])
);
conv2d #("weight/max_polling/19_11.txt", 2, 0, 31, 31) conv2d_19_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_19_addbus_[11])
);
conv2d #("weight/max_polling/19_12.txt", 2, 0, 31, 31) conv2d_19_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_19_addbus_[12])
);
conv2d #("weight/max_polling/19_13.txt", 2, 0, 31, 31) conv2d_19_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_19_addbus_[13])
);
conv2d #("weight/max_polling/19_14.txt", 2, 0, 31, 31) conv2d_19_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_19_addbus_[14])
);
conv2d #("weight/max_polling/19_15.txt", 2, 0, 31, 31) conv2d_19_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_19_addbus_[15])
);
conv2d #("weight/max_polling/19_16.txt", 2, 0, 31, 31) conv2d_19_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_19_addbus_[16])
);
conv2d #("weight/max_polling/19_17.txt", 2, 0, 31, 31) conv2d_19_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_19_addbus_[17])
);
conv2d #("weight/max_polling/19_18.txt", 2, 0, 31, 31) conv2d_19_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_19_addbus_[18])
);
conv2d #("weight/max_polling/19_19.txt", 2, 0, 31, 31) conv2d_19_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_19_addbus_[19])
);
conv2d #("weight/max_polling/19_20.txt", 2, 0, 31, 31) conv2d_19_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_19_addbus_[20])
);
conv2d #("weight/max_polling/19_21.txt", 2, 0, 31, 31) conv2d_19_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_19_addbus_[21])
);
conv2d #("weight/max_polling/19_22.txt", 2, 0, 31, 31) conv2d_19_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_19_addbus_[22])
);
conv2d #("weight/max_polling/19_23.txt", 2, 0, 31, 31) conv2d_19_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_19_addbus_[23])
);
conv2d #("weight/max_polling/19_24.txt", 2, 0, 31, 31) conv2d_19_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_19_addbus_[24])
);
conv2d #("weight/max_polling/19_25.txt", 2, 0, 31, 31) conv2d_19_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_19_addbus_[25])
);
conv2d #("weight/max_polling/19_26.txt", 2, 0, 31, 31) conv2d_19_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_19_addbus_[26])
);
conv2d #("weight/max_polling/19_27.txt", 2, 0, 31, 31) conv2d_19_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_19_addbus_[27])
);
conv2d #("weight/max_polling/19_28.txt", 2, 0, 31, 31) conv2d_19_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_19_addbus_[28])
);
conv2d #("weight/max_polling/19_29.txt", 2, 0, 31, 31) conv2d_19_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_19_addbus_[29])
);
conv2d #("weight/max_polling/19_30.txt", 2, 0, 31, 31) conv2d_19_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_19_addbus_[30])
);
conv2d #("weight/max_polling/19_31.txt", 2, 0, 31, 31) conv2d_19_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_19_addbus_[31])
);
conv2d #("weight/max_polling/19_32.txt", 2, 0, 31, 31) conv2d_19_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_19_addbus_[32])
);
conv2d #("weight/max_polling/19_33.txt", 2, 0, 31, 31) conv2d_19_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_19_addbus_[33])
);
conv2d #("weight/max_polling/19_34.txt", 2, 0, 31, 31) conv2d_19_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_19_addbus_[34])
);
conv2d #("weight/max_polling/19_35.txt", 2, 0, 31, 31) conv2d_19_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_19_addbus_[35])
);
conv2d #("weight/max_polling/19_36.txt", 2, 0, 31, 31) conv2d_19_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_19_addbus_[36])
);
conv2d #("weight/max_polling/19_37.txt", 2, 0, 31, 31) conv2d_19_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_19_addbus_[37])
);
conv2d #("weight/max_polling/19_38.txt", 2, 0, 31, 31) conv2d_19_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_19_addbus_[38])
);
conv2d #("weight/max_polling/19_39.txt", 2, 0, 31, 31) conv2d_19_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_19_addbus_[39])
);
conv2d #("weight/max_polling/19_40.txt", 2, 0, 31, 31) conv2d_19_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_19_addbus_[40])
);
conv2d #("weight/max_polling/19_41.txt", 2, 0, 31, 31) conv2d_19_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_19_addbus_[41])
);
conv2d #("weight/max_polling/19_42.txt", 2, 0, 31, 31) conv2d_19_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_19_addbus_[42])
);
conv2d #("weight/max_polling/19_43.txt", 2, 0, 31, 31) conv2d_19_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_19_addbus_[43])
);
conv2d #("weight/max_polling/19_44.txt", 2, 0, 31, 31) conv2d_19_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_19_addbus_[44])
);
conv2d #("weight/max_polling/19_45.txt", 2, 0, 31, 31) conv2d_19_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_19_addbus_[45])
);
conv2d #("weight/max_polling/19_46.txt", 2, 0, 31, 31) conv2d_19_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_19_addbus_[46])
);
conv2d #("weight/max_polling/19_47.txt", 2, 0, 31, 31) conv2d_19_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_19_addbus_[47])
);
conv2d #("weight/max_polling/19_48.txt", 2, 0, 31, 31) conv2d_19_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_19_addbus_[48])
);
conv2d #("weight/max_polling/19_49.txt", 2, 0, 31, 31) conv2d_19_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_19_addbus_[49])
);
conv2d #("weight/max_polling/19_50.txt", 2, 0, 31, 31) conv2d_19_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_19_addbus_[50])
);
conv2d #("weight/max_polling/19_51.txt", 2, 0, 31, 31) conv2d_19_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_19_addbus_[51])
);
conv2d #("weight/max_polling/19_52.txt", 2, 0, 31, 31) conv2d_19_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_19_addbus_[52])
);
conv2d #("weight/max_polling/19_53.txt", 2, 0, 31, 31) conv2d_19_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_19_addbus_[53])
);
conv2d #("weight/max_polling/19_54.txt", 2, 0, 31, 31) conv2d_19_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_19_addbus_[54])
);
conv2d #("weight/max_polling/19_55.txt", 2, 0, 31, 31) conv2d_19_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_19_addbus_[55])
);
conv2d #("weight/max_polling/19_56.txt", 2, 0, 31, 31) conv2d_19_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_19_addbus_[56])
);
conv2d #("weight/max_polling/19_57.txt", 2, 0, 31, 31) conv2d_19_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_19_addbus_[57])
);
conv2d #("weight/max_polling/19_58.txt", 2, 0, 31, 31) conv2d_19_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_19_addbus_[58])
);
conv2d #("weight/max_polling/19_59.txt", 2, 0, 31, 31) conv2d_19_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_19_addbus_[59])
);
conv2d #("weight/max_polling/19_60.txt", 2, 0, 31, 31) conv2d_19_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_19_addbus_[60])
);
conv2d #("weight/max_polling/19_61.txt", 2, 0, 31, 31) conv2d_19_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_19_addbus_[61])
);
conv2d #("weight/max_polling/19_62.txt", 2, 0, 31, 31) conv2d_19_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_19_addbus_[62])
);
conv2d #("weight/max_polling/19_63.txt", 2, 0, 31, 31) conv2d_19_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_19_addbus_[63])
);
sum_64 #(15) sum_19( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[19]), 
        .data_in_0(_19_addbus_[0]), 
        .data_in_1(_19_addbus_[1]), 
        .data_in_2(_19_addbus_[2]), 
        .data_in_3(_19_addbus_[3]), 
        .data_in_4(_19_addbus_[4]), 
        .data_in_5(_19_addbus_[5]), 
        .data_in_6(_19_addbus_[6]), 
        .data_in_7(_19_addbus_[7]), 
        .data_in_8(_19_addbus_[8]), 
        .data_in_9(_19_addbus_[9]), 
        .data_in_10(_19_addbus_[10]), 
        .data_in_11(_19_addbus_[11]), 
        .data_in_12(_19_addbus_[12]), 
        .data_in_13(_19_addbus_[13]), 
        .data_in_14(_19_addbus_[14]), 
        .data_in_15(_19_addbus_[15]), 
        .data_in_16(_19_addbus_[16]), 
        .data_in_17(_19_addbus_[17]), 
        .data_in_18(_19_addbus_[18]), 
        .data_in_19(_19_addbus_[19]), 
        .data_in_20(_19_addbus_[20]), 
        .data_in_21(_19_addbus_[21]), 
        .data_in_22(_19_addbus_[22]), 
        .data_in_23(_19_addbus_[23]), 
        .data_in_24(_19_addbus_[24]), 
        .data_in_25(_19_addbus_[25]), 
        .data_in_26(_19_addbus_[26]), 
        .data_in_27(_19_addbus_[27]), 
        .data_in_28(_19_addbus_[28]), 
        .data_in_29(_19_addbus_[29]), 
        .data_in_30(_19_addbus_[30]), 
        .data_in_31(_19_addbus_[31]), 
        .data_in_32(_19_addbus_[32]), 
        .data_in_33(_19_addbus_[33]), 
        .data_in_34(_19_addbus_[34]), 
        .data_in_35(_19_addbus_[35]), 
        .data_in_36(_19_addbus_[36]), 
        .data_in_37(_19_addbus_[37]), 
        .data_in_38(_19_addbus_[38]), 
        .data_in_39(_19_addbus_[39]), 
        .data_in_40(_19_addbus_[40]), 
        .data_in_41(_19_addbus_[41]), 
        .data_in_42(_19_addbus_[42]), 
        .data_in_43(_19_addbus_[43]), 
        .data_in_44(_19_addbus_[44]), 
        .data_in_45(_19_addbus_[45]), 
        .data_in_46(_19_addbus_[46]), 
        .data_in_47(_19_addbus_[47]), 
        .data_in_48(_19_addbus_[48]), 
        .data_in_49(_19_addbus_[49]), 
        .data_in_50(_19_addbus_[50]), 
        .data_in_51(_19_addbus_[51]), 
        .data_in_52(_19_addbus_[52]), 
        .data_in_53(_19_addbus_[53]), 
        .data_in_54(_19_addbus_[54]), 
        .data_in_55(_19_addbus_[55]), 
        .data_in_56(_19_addbus_[56]), 
        .data_in_57(_19_addbus_[57]), 
        .data_in_58(_19_addbus_[58]), 
        .data_in_59(_19_addbus_[59]), 
        .data_in_60(_19_addbus_[60]), 
        .data_in_61(_19_addbus_[61]), 
        .data_in_62(_19_addbus_[62]), 
        .data_in_63(_19_addbus_[63]) 
); 
wire [31:0] _20_addbus_[63:0];    
conv2d #("weight/max_polling/20_0.txt", 2, 0, 31, 31) conv2d_20_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_20_addbus_[0])
);
conv2d #("weight/max_polling/20_1.txt", 2, 0, 31, 31) conv2d_20_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_20_addbus_[1])
);
conv2d #("weight/max_polling/20_2.txt", 2, 0, 31, 31) conv2d_20_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_20_addbus_[2])
);
conv2d #("weight/max_polling/20_3.txt", 2, 0, 31, 31) conv2d_20_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_20_addbus_[3])
);
conv2d #("weight/max_polling/20_4.txt", 2, 0, 31, 31) conv2d_20_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_20_addbus_[4])
);
conv2d #("weight/max_polling/20_5.txt", 2, 0, 31, 31) conv2d_20_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_20_addbus_[5])
);
conv2d #("weight/max_polling/20_6.txt", 2, 0, 31, 31) conv2d_20_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_20_addbus_[6])
);
conv2d #("weight/max_polling/20_7.txt", 2, 0, 31, 31) conv2d_20_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_20_addbus_[7])
);
conv2d #("weight/max_polling/20_8.txt", 2, 0, 31, 31) conv2d_20_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_20_addbus_[8])
);
conv2d #("weight/max_polling/20_9.txt", 2, 0, 31, 31) conv2d_20_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_20_addbus_[9])
);
conv2d #("weight/max_polling/20_10.txt", 2, 0, 31, 31) conv2d_20_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_20_addbus_[10])
);
conv2d #("weight/max_polling/20_11.txt", 2, 0, 31, 31) conv2d_20_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_20_addbus_[11])
);
conv2d #("weight/max_polling/20_12.txt", 2, 0, 31, 31) conv2d_20_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_20_addbus_[12])
);
conv2d #("weight/max_polling/20_13.txt", 2, 0, 31, 31) conv2d_20_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_20_addbus_[13])
);
conv2d #("weight/max_polling/20_14.txt", 2, 0, 31, 31) conv2d_20_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_20_addbus_[14])
);
conv2d #("weight/max_polling/20_15.txt", 2, 0, 31, 31) conv2d_20_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_20_addbus_[15])
);
conv2d #("weight/max_polling/20_16.txt", 2, 0, 31, 31) conv2d_20_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_20_addbus_[16])
);
conv2d #("weight/max_polling/20_17.txt", 2, 0, 31, 31) conv2d_20_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_20_addbus_[17])
);
conv2d #("weight/max_polling/20_18.txt", 2, 0, 31, 31) conv2d_20_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_20_addbus_[18])
);
conv2d #("weight/max_polling/20_19.txt", 2, 0, 31, 31) conv2d_20_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_20_addbus_[19])
);
conv2d #("weight/max_polling/20_20.txt", 2, 0, 31, 31) conv2d_20_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_20_addbus_[20])
);
conv2d #("weight/max_polling/20_21.txt", 2, 0, 31, 31) conv2d_20_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_20_addbus_[21])
);
conv2d #("weight/max_polling/20_22.txt", 2, 0, 31, 31) conv2d_20_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_20_addbus_[22])
);
conv2d #("weight/max_polling/20_23.txt", 2, 0, 31, 31) conv2d_20_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_20_addbus_[23])
);
conv2d #("weight/max_polling/20_24.txt", 2, 0, 31, 31) conv2d_20_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_20_addbus_[24])
);
conv2d #("weight/max_polling/20_25.txt", 2, 0, 31, 31) conv2d_20_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_20_addbus_[25])
);
conv2d #("weight/max_polling/20_26.txt", 2, 0, 31, 31) conv2d_20_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_20_addbus_[26])
);
conv2d #("weight/max_polling/20_27.txt", 2, 0, 31, 31) conv2d_20_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_20_addbus_[27])
);
conv2d #("weight/max_polling/20_28.txt", 2, 0, 31, 31) conv2d_20_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_20_addbus_[28])
);
conv2d #("weight/max_polling/20_29.txt", 2, 0, 31, 31) conv2d_20_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_20_addbus_[29])
);
conv2d #("weight/max_polling/20_30.txt", 2, 0, 31, 31) conv2d_20_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_20_addbus_[30])
);
conv2d #("weight/max_polling/20_31.txt", 2, 0, 31, 31) conv2d_20_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_20_addbus_[31])
);
conv2d #("weight/max_polling/20_32.txt", 2, 0, 31, 31) conv2d_20_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_20_addbus_[32])
);
conv2d #("weight/max_polling/20_33.txt", 2, 0, 31, 31) conv2d_20_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_20_addbus_[33])
);
conv2d #("weight/max_polling/20_34.txt", 2, 0, 31, 31) conv2d_20_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_20_addbus_[34])
);
conv2d #("weight/max_polling/20_35.txt", 2, 0, 31, 31) conv2d_20_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_20_addbus_[35])
);
conv2d #("weight/max_polling/20_36.txt", 2, 0, 31, 31) conv2d_20_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_20_addbus_[36])
);
conv2d #("weight/max_polling/20_37.txt", 2, 0, 31, 31) conv2d_20_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_20_addbus_[37])
);
conv2d #("weight/max_polling/20_38.txt", 2, 0, 31, 31) conv2d_20_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_20_addbus_[38])
);
conv2d #("weight/max_polling/20_39.txt", 2, 0, 31, 31) conv2d_20_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_20_addbus_[39])
);
conv2d #("weight/max_polling/20_40.txt", 2, 0, 31, 31) conv2d_20_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_20_addbus_[40])
);
conv2d #("weight/max_polling/20_41.txt", 2, 0, 31, 31) conv2d_20_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_20_addbus_[41])
);
conv2d #("weight/max_polling/20_42.txt", 2, 0, 31, 31) conv2d_20_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_20_addbus_[42])
);
conv2d #("weight/max_polling/20_43.txt", 2, 0, 31, 31) conv2d_20_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_20_addbus_[43])
);
conv2d #("weight/max_polling/20_44.txt", 2, 0, 31, 31) conv2d_20_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_20_addbus_[44])
);
conv2d #("weight/max_polling/20_45.txt", 2, 0, 31, 31) conv2d_20_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_20_addbus_[45])
);
conv2d #("weight/max_polling/20_46.txt", 2, 0, 31, 31) conv2d_20_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_20_addbus_[46])
);
conv2d #("weight/max_polling/20_47.txt", 2, 0, 31, 31) conv2d_20_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_20_addbus_[47])
);
conv2d #("weight/max_polling/20_48.txt", 2, 0, 31, 31) conv2d_20_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_20_addbus_[48])
);
conv2d #("weight/max_polling/20_49.txt", 2, 0, 31, 31) conv2d_20_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_20_addbus_[49])
);
conv2d #("weight/max_polling/20_50.txt", 2, 0, 31, 31) conv2d_20_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_20_addbus_[50])
);
conv2d #("weight/max_polling/20_51.txt", 2, 0, 31, 31) conv2d_20_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_20_addbus_[51])
);
conv2d #("weight/max_polling/20_52.txt", 2, 0, 31, 31) conv2d_20_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_20_addbus_[52])
);
conv2d #("weight/max_polling/20_53.txt", 2, 0, 31, 31) conv2d_20_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_20_addbus_[53])
);
conv2d #("weight/max_polling/20_54.txt", 2, 0, 31, 31) conv2d_20_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_20_addbus_[54])
);
conv2d #("weight/max_polling/20_55.txt", 2, 0, 31, 31) conv2d_20_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_20_addbus_[55])
);
conv2d #("weight/max_polling/20_56.txt", 2, 0, 31, 31) conv2d_20_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_20_addbus_[56])
);
conv2d #("weight/max_polling/20_57.txt", 2, 0, 31, 31) conv2d_20_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_20_addbus_[57])
);
conv2d #("weight/max_polling/20_58.txt", 2, 0, 31, 31) conv2d_20_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_20_addbus_[58])
);
conv2d #("weight/max_polling/20_59.txt", 2, 0, 31, 31) conv2d_20_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_20_addbus_[59])
);
conv2d #("weight/max_polling/20_60.txt", 2, 0, 31, 31) conv2d_20_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_20_addbus_[60])
);
conv2d #("weight/max_polling/20_61.txt", 2, 0, 31, 31) conv2d_20_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_20_addbus_[61])
);
conv2d #("weight/max_polling/20_62.txt", 2, 0, 31, 31) conv2d_20_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_20_addbus_[62])
);
conv2d #("weight/max_polling/20_63.txt", 2, 0, 31, 31) conv2d_20_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_20_addbus_[63])
);
sum_64 #(15) sum_20( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[20]), 
        .data_in_0(_20_addbus_[0]), 
        .data_in_1(_20_addbus_[1]), 
        .data_in_2(_20_addbus_[2]), 
        .data_in_3(_20_addbus_[3]), 
        .data_in_4(_20_addbus_[4]), 
        .data_in_5(_20_addbus_[5]), 
        .data_in_6(_20_addbus_[6]), 
        .data_in_7(_20_addbus_[7]), 
        .data_in_8(_20_addbus_[8]), 
        .data_in_9(_20_addbus_[9]), 
        .data_in_10(_20_addbus_[10]), 
        .data_in_11(_20_addbus_[11]), 
        .data_in_12(_20_addbus_[12]), 
        .data_in_13(_20_addbus_[13]), 
        .data_in_14(_20_addbus_[14]), 
        .data_in_15(_20_addbus_[15]), 
        .data_in_16(_20_addbus_[16]), 
        .data_in_17(_20_addbus_[17]), 
        .data_in_18(_20_addbus_[18]), 
        .data_in_19(_20_addbus_[19]), 
        .data_in_20(_20_addbus_[20]), 
        .data_in_21(_20_addbus_[21]), 
        .data_in_22(_20_addbus_[22]), 
        .data_in_23(_20_addbus_[23]), 
        .data_in_24(_20_addbus_[24]), 
        .data_in_25(_20_addbus_[25]), 
        .data_in_26(_20_addbus_[26]), 
        .data_in_27(_20_addbus_[27]), 
        .data_in_28(_20_addbus_[28]), 
        .data_in_29(_20_addbus_[29]), 
        .data_in_30(_20_addbus_[30]), 
        .data_in_31(_20_addbus_[31]), 
        .data_in_32(_20_addbus_[32]), 
        .data_in_33(_20_addbus_[33]), 
        .data_in_34(_20_addbus_[34]), 
        .data_in_35(_20_addbus_[35]), 
        .data_in_36(_20_addbus_[36]), 
        .data_in_37(_20_addbus_[37]), 
        .data_in_38(_20_addbus_[38]), 
        .data_in_39(_20_addbus_[39]), 
        .data_in_40(_20_addbus_[40]), 
        .data_in_41(_20_addbus_[41]), 
        .data_in_42(_20_addbus_[42]), 
        .data_in_43(_20_addbus_[43]), 
        .data_in_44(_20_addbus_[44]), 
        .data_in_45(_20_addbus_[45]), 
        .data_in_46(_20_addbus_[46]), 
        .data_in_47(_20_addbus_[47]), 
        .data_in_48(_20_addbus_[48]), 
        .data_in_49(_20_addbus_[49]), 
        .data_in_50(_20_addbus_[50]), 
        .data_in_51(_20_addbus_[51]), 
        .data_in_52(_20_addbus_[52]), 
        .data_in_53(_20_addbus_[53]), 
        .data_in_54(_20_addbus_[54]), 
        .data_in_55(_20_addbus_[55]), 
        .data_in_56(_20_addbus_[56]), 
        .data_in_57(_20_addbus_[57]), 
        .data_in_58(_20_addbus_[58]), 
        .data_in_59(_20_addbus_[59]), 
        .data_in_60(_20_addbus_[60]), 
        .data_in_61(_20_addbus_[61]), 
        .data_in_62(_20_addbus_[62]), 
        .data_in_63(_20_addbus_[63]) 
); 
wire [31:0] _21_addbus_[63:0];    
conv2d #("weight/max_polling/21_0.txt", 2, 0, 31, 31) conv2d_21_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_21_addbus_[0])
);
conv2d #("weight/max_polling/21_1.txt", 2, 0, 31, 31) conv2d_21_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_21_addbus_[1])
);
conv2d #("weight/max_polling/21_2.txt", 2, 0, 31, 31) conv2d_21_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_21_addbus_[2])
);
conv2d #("weight/max_polling/21_3.txt", 2, 0, 31, 31) conv2d_21_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_21_addbus_[3])
);
conv2d #("weight/max_polling/21_4.txt", 2, 0, 31, 31) conv2d_21_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_21_addbus_[4])
);
conv2d #("weight/max_polling/21_5.txt", 2, 0, 31, 31) conv2d_21_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_21_addbus_[5])
);
conv2d #("weight/max_polling/21_6.txt", 2, 0, 31, 31) conv2d_21_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_21_addbus_[6])
);
conv2d #("weight/max_polling/21_7.txt", 2, 0, 31, 31) conv2d_21_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_21_addbus_[7])
);
conv2d #("weight/max_polling/21_8.txt", 2, 0, 31, 31) conv2d_21_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_21_addbus_[8])
);
conv2d #("weight/max_polling/21_9.txt", 2, 0, 31, 31) conv2d_21_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_21_addbus_[9])
);
conv2d #("weight/max_polling/21_10.txt", 2, 0, 31, 31) conv2d_21_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_21_addbus_[10])
);
conv2d #("weight/max_polling/21_11.txt", 2, 0, 31, 31) conv2d_21_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_21_addbus_[11])
);
conv2d #("weight/max_polling/21_12.txt", 2, 0, 31, 31) conv2d_21_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_21_addbus_[12])
);
conv2d #("weight/max_polling/21_13.txt", 2, 0, 31, 31) conv2d_21_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_21_addbus_[13])
);
conv2d #("weight/max_polling/21_14.txt", 2, 0, 31, 31) conv2d_21_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_21_addbus_[14])
);
conv2d #("weight/max_polling/21_15.txt", 2, 0, 31, 31) conv2d_21_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_21_addbus_[15])
);
conv2d #("weight/max_polling/21_16.txt", 2, 0, 31, 31) conv2d_21_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_21_addbus_[16])
);
conv2d #("weight/max_polling/21_17.txt", 2, 0, 31, 31) conv2d_21_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_21_addbus_[17])
);
conv2d #("weight/max_polling/21_18.txt", 2, 0, 31, 31) conv2d_21_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_21_addbus_[18])
);
conv2d #("weight/max_polling/21_19.txt", 2, 0, 31, 31) conv2d_21_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_21_addbus_[19])
);
conv2d #("weight/max_polling/21_20.txt", 2, 0, 31, 31) conv2d_21_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_21_addbus_[20])
);
conv2d #("weight/max_polling/21_21.txt", 2, 0, 31, 31) conv2d_21_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_21_addbus_[21])
);
conv2d #("weight/max_polling/21_22.txt", 2, 0, 31, 31) conv2d_21_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_21_addbus_[22])
);
conv2d #("weight/max_polling/21_23.txt", 2, 0, 31, 31) conv2d_21_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_21_addbus_[23])
);
conv2d #("weight/max_polling/21_24.txt", 2, 0, 31, 31) conv2d_21_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_21_addbus_[24])
);
conv2d #("weight/max_polling/21_25.txt", 2, 0, 31, 31) conv2d_21_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_21_addbus_[25])
);
conv2d #("weight/max_polling/21_26.txt", 2, 0, 31, 31) conv2d_21_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_21_addbus_[26])
);
conv2d #("weight/max_polling/21_27.txt", 2, 0, 31, 31) conv2d_21_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_21_addbus_[27])
);
conv2d #("weight/max_polling/21_28.txt", 2, 0, 31, 31) conv2d_21_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_21_addbus_[28])
);
conv2d #("weight/max_polling/21_29.txt", 2, 0, 31, 31) conv2d_21_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_21_addbus_[29])
);
conv2d #("weight/max_polling/21_30.txt", 2, 0, 31, 31) conv2d_21_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_21_addbus_[30])
);
conv2d #("weight/max_polling/21_31.txt", 2, 0, 31, 31) conv2d_21_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_21_addbus_[31])
);
conv2d #("weight/max_polling/21_32.txt", 2, 0, 31, 31) conv2d_21_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_21_addbus_[32])
);
conv2d #("weight/max_polling/21_33.txt", 2, 0, 31, 31) conv2d_21_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_21_addbus_[33])
);
conv2d #("weight/max_polling/21_34.txt", 2, 0, 31, 31) conv2d_21_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_21_addbus_[34])
);
conv2d #("weight/max_polling/21_35.txt", 2, 0, 31, 31) conv2d_21_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_21_addbus_[35])
);
conv2d #("weight/max_polling/21_36.txt", 2, 0, 31, 31) conv2d_21_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_21_addbus_[36])
);
conv2d #("weight/max_polling/21_37.txt", 2, 0, 31, 31) conv2d_21_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_21_addbus_[37])
);
conv2d #("weight/max_polling/21_38.txt", 2, 0, 31, 31) conv2d_21_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_21_addbus_[38])
);
conv2d #("weight/max_polling/21_39.txt", 2, 0, 31, 31) conv2d_21_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_21_addbus_[39])
);
conv2d #("weight/max_polling/21_40.txt", 2, 0, 31, 31) conv2d_21_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_21_addbus_[40])
);
conv2d #("weight/max_polling/21_41.txt", 2, 0, 31, 31) conv2d_21_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_21_addbus_[41])
);
conv2d #("weight/max_polling/21_42.txt", 2, 0, 31, 31) conv2d_21_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_21_addbus_[42])
);
conv2d #("weight/max_polling/21_43.txt", 2, 0, 31, 31) conv2d_21_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_21_addbus_[43])
);
conv2d #("weight/max_polling/21_44.txt", 2, 0, 31, 31) conv2d_21_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_21_addbus_[44])
);
conv2d #("weight/max_polling/21_45.txt", 2, 0, 31, 31) conv2d_21_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_21_addbus_[45])
);
conv2d #("weight/max_polling/21_46.txt", 2, 0, 31, 31) conv2d_21_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_21_addbus_[46])
);
conv2d #("weight/max_polling/21_47.txt", 2, 0, 31, 31) conv2d_21_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_21_addbus_[47])
);
conv2d #("weight/max_polling/21_48.txt", 2, 0, 31, 31) conv2d_21_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_21_addbus_[48])
);
conv2d #("weight/max_polling/21_49.txt", 2, 0, 31, 31) conv2d_21_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_21_addbus_[49])
);
conv2d #("weight/max_polling/21_50.txt", 2, 0, 31, 31) conv2d_21_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_21_addbus_[50])
);
conv2d #("weight/max_polling/21_51.txt", 2, 0, 31, 31) conv2d_21_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_21_addbus_[51])
);
conv2d #("weight/max_polling/21_52.txt", 2, 0, 31, 31) conv2d_21_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_21_addbus_[52])
);
conv2d #("weight/max_polling/21_53.txt", 2, 0, 31, 31) conv2d_21_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_21_addbus_[53])
);
conv2d #("weight/max_polling/21_54.txt", 2, 0, 31, 31) conv2d_21_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_21_addbus_[54])
);
conv2d #("weight/max_polling/21_55.txt", 2, 0, 31, 31) conv2d_21_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_21_addbus_[55])
);
conv2d #("weight/max_polling/21_56.txt", 2, 0, 31, 31) conv2d_21_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_21_addbus_[56])
);
conv2d #("weight/max_polling/21_57.txt", 2, 0, 31, 31) conv2d_21_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_21_addbus_[57])
);
conv2d #("weight/max_polling/21_58.txt", 2, 0, 31, 31) conv2d_21_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_21_addbus_[58])
);
conv2d #("weight/max_polling/21_59.txt", 2, 0, 31, 31) conv2d_21_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_21_addbus_[59])
);
conv2d #("weight/max_polling/21_60.txt", 2, 0, 31, 31) conv2d_21_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_21_addbus_[60])
);
conv2d #("weight/max_polling/21_61.txt", 2, 0, 31, 31) conv2d_21_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_21_addbus_[61])
);
conv2d #("weight/max_polling/21_62.txt", 2, 0, 31, 31) conv2d_21_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_21_addbus_[62])
);
conv2d #("weight/max_polling/21_63.txt", 2, 0, 31, 31) conv2d_21_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_21_addbus_[63])
);
sum_64 #(15) sum_21( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[21]), 
        .data_in_0(_21_addbus_[0]), 
        .data_in_1(_21_addbus_[1]), 
        .data_in_2(_21_addbus_[2]), 
        .data_in_3(_21_addbus_[3]), 
        .data_in_4(_21_addbus_[4]), 
        .data_in_5(_21_addbus_[5]), 
        .data_in_6(_21_addbus_[6]), 
        .data_in_7(_21_addbus_[7]), 
        .data_in_8(_21_addbus_[8]), 
        .data_in_9(_21_addbus_[9]), 
        .data_in_10(_21_addbus_[10]), 
        .data_in_11(_21_addbus_[11]), 
        .data_in_12(_21_addbus_[12]), 
        .data_in_13(_21_addbus_[13]), 
        .data_in_14(_21_addbus_[14]), 
        .data_in_15(_21_addbus_[15]), 
        .data_in_16(_21_addbus_[16]), 
        .data_in_17(_21_addbus_[17]), 
        .data_in_18(_21_addbus_[18]), 
        .data_in_19(_21_addbus_[19]), 
        .data_in_20(_21_addbus_[20]), 
        .data_in_21(_21_addbus_[21]), 
        .data_in_22(_21_addbus_[22]), 
        .data_in_23(_21_addbus_[23]), 
        .data_in_24(_21_addbus_[24]), 
        .data_in_25(_21_addbus_[25]), 
        .data_in_26(_21_addbus_[26]), 
        .data_in_27(_21_addbus_[27]), 
        .data_in_28(_21_addbus_[28]), 
        .data_in_29(_21_addbus_[29]), 
        .data_in_30(_21_addbus_[30]), 
        .data_in_31(_21_addbus_[31]), 
        .data_in_32(_21_addbus_[32]), 
        .data_in_33(_21_addbus_[33]), 
        .data_in_34(_21_addbus_[34]), 
        .data_in_35(_21_addbus_[35]), 
        .data_in_36(_21_addbus_[36]), 
        .data_in_37(_21_addbus_[37]), 
        .data_in_38(_21_addbus_[38]), 
        .data_in_39(_21_addbus_[39]), 
        .data_in_40(_21_addbus_[40]), 
        .data_in_41(_21_addbus_[41]), 
        .data_in_42(_21_addbus_[42]), 
        .data_in_43(_21_addbus_[43]), 
        .data_in_44(_21_addbus_[44]), 
        .data_in_45(_21_addbus_[45]), 
        .data_in_46(_21_addbus_[46]), 
        .data_in_47(_21_addbus_[47]), 
        .data_in_48(_21_addbus_[48]), 
        .data_in_49(_21_addbus_[49]), 
        .data_in_50(_21_addbus_[50]), 
        .data_in_51(_21_addbus_[51]), 
        .data_in_52(_21_addbus_[52]), 
        .data_in_53(_21_addbus_[53]), 
        .data_in_54(_21_addbus_[54]), 
        .data_in_55(_21_addbus_[55]), 
        .data_in_56(_21_addbus_[56]), 
        .data_in_57(_21_addbus_[57]), 
        .data_in_58(_21_addbus_[58]), 
        .data_in_59(_21_addbus_[59]), 
        .data_in_60(_21_addbus_[60]), 
        .data_in_61(_21_addbus_[61]), 
        .data_in_62(_21_addbus_[62]), 
        .data_in_63(_21_addbus_[63]) 
); 
wire [31:0] _22_addbus_[63:0];    
conv2d #("weight/max_polling/22_0.txt", 2, 0, 31, 31) conv2d_22_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_22_addbus_[0])
);
conv2d #("weight/max_polling/22_1.txt", 2, 0, 31, 31) conv2d_22_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_22_addbus_[1])
);
conv2d #("weight/max_polling/22_2.txt", 2, 0, 31, 31) conv2d_22_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_22_addbus_[2])
);
conv2d #("weight/max_polling/22_3.txt", 2, 0, 31, 31) conv2d_22_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_22_addbus_[3])
);
conv2d #("weight/max_polling/22_4.txt", 2, 0, 31, 31) conv2d_22_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_22_addbus_[4])
);
conv2d #("weight/max_polling/22_5.txt", 2, 0, 31, 31) conv2d_22_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_22_addbus_[5])
);
conv2d #("weight/max_polling/22_6.txt", 2, 0, 31, 31) conv2d_22_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_22_addbus_[6])
);
conv2d #("weight/max_polling/22_7.txt", 2, 0, 31, 31) conv2d_22_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_22_addbus_[7])
);
conv2d #("weight/max_polling/22_8.txt", 2, 0, 31, 31) conv2d_22_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_22_addbus_[8])
);
conv2d #("weight/max_polling/22_9.txt", 2, 0, 31, 31) conv2d_22_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_22_addbus_[9])
);
conv2d #("weight/max_polling/22_10.txt", 2, 0, 31, 31) conv2d_22_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_22_addbus_[10])
);
conv2d #("weight/max_polling/22_11.txt", 2, 0, 31, 31) conv2d_22_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_22_addbus_[11])
);
conv2d #("weight/max_polling/22_12.txt", 2, 0, 31, 31) conv2d_22_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_22_addbus_[12])
);
conv2d #("weight/max_polling/22_13.txt", 2, 0, 31, 31) conv2d_22_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_22_addbus_[13])
);
conv2d #("weight/max_polling/22_14.txt", 2, 0, 31, 31) conv2d_22_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_22_addbus_[14])
);
conv2d #("weight/max_polling/22_15.txt", 2, 0, 31, 31) conv2d_22_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_22_addbus_[15])
);
conv2d #("weight/max_polling/22_16.txt", 2, 0, 31, 31) conv2d_22_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_22_addbus_[16])
);
conv2d #("weight/max_polling/22_17.txt", 2, 0, 31, 31) conv2d_22_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_22_addbus_[17])
);
conv2d #("weight/max_polling/22_18.txt", 2, 0, 31, 31) conv2d_22_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_22_addbus_[18])
);
conv2d #("weight/max_polling/22_19.txt", 2, 0, 31, 31) conv2d_22_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_22_addbus_[19])
);
conv2d #("weight/max_polling/22_20.txt", 2, 0, 31, 31) conv2d_22_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_22_addbus_[20])
);
conv2d #("weight/max_polling/22_21.txt", 2, 0, 31, 31) conv2d_22_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_22_addbus_[21])
);
conv2d #("weight/max_polling/22_22.txt", 2, 0, 31, 31) conv2d_22_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_22_addbus_[22])
);
conv2d #("weight/max_polling/22_23.txt", 2, 0, 31, 31) conv2d_22_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_22_addbus_[23])
);
conv2d #("weight/max_polling/22_24.txt", 2, 0, 31, 31) conv2d_22_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_22_addbus_[24])
);
conv2d #("weight/max_polling/22_25.txt", 2, 0, 31, 31) conv2d_22_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_22_addbus_[25])
);
conv2d #("weight/max_polling/22_26.txt", 2, 0, 31, 31) conv2d_22_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_22_addbus_[26])
);
conv2d #("weight/max_polling/22_27.txt", 2, 0, 31, 31) conv2d_22_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_22_addbus_[27])
);
conv2d #("weight/max_polling/22_28.txt", 2, 0, 31, 31) conv2d_22_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_22_addbus_[28])
);
conv2d #("weight/max_polling/22_29.txt", 2, 0, 31, 31) conv2d_22_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_22_addbus_[29])
);
conv2d #("weight/max_polling/22_30.txt", 2, 0, 31, 31) conv2d_22_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_22_addbus_[30])
);
conv2d #("weight/max_polling/22_31.txt", 2, 0, 31, 31) conv2d_22_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_22_addbus_[31])
);
conv2d #("weight/max_polling/22_32.txt", 2, 0, 31, 31) conv2d_22_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_22_addbus_[32])
);
conv2d #("weight/max_polling/22_33.txt", 2, 0, 31, 31) conv2d_22_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_22_addbus_[33])
);
conv2d #("weight/max_polling/22_34.txt", 2, 0, 31, 31) conv2d_22_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_22_addbus_[34])
);
conv2d #("weight/max_polling/22_35.txt", 2, 0, 31, 31) conv2d_22_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_22_addbus_[35])
);
conv2d #("weight/max_polling/22_36.txt", 2, 0, 31, 31) conv2d_22_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_22_addbus_[36])
);
conv2d #("weight/max_polling/22_37.txt", 2, 0, 31, 31) conv2d_22_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_22_addbus_[37])
);
conv2d #("weight/max_polling/22_38.txt", 2, 0, 31, 31) conv2d_22_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_22_addbus_[38])
);
conv2d #("weight/max_polling/22_39.txt", 2, 0, 31, 31) conv2d_22_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_22_addbus_[39])
);
conv2d #("weight/max_polling/22_40.txt", 2, 0, 31, 31) conv2d_22_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_22_addbus_[40])
);
conv2d #("weight/max_polling/22_41.txt", 2, 0, 31, 31) conv2d_22_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_22_addbus_[41])
);
conv2d #("weight/max_polling/22_42.txt", 2, 0, 31, 31) conv2d_22_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_22_addbus_[42])
);
conv2d #("weight/max_polling/22_43.txt", 2, 0, 31, 31) conv2d_22_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_22_addbus_[43])
);
conv2d #("weight/max_polling/22_44.txt", 2, 0, 31, 31) conv2d_22_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_22_addbus_[44])
);
conv2d #("weight/max_polling/22_45.txt", 2, 0, 31, 31) conv2d_22_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_22_addbus_[45])
);
conv2d #("weight/max_polling/22_46.txt", 2, 0, 31, 31) conv2d_22_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_22_addbus_[46])
);
conv2d #("weight/max_polling/22_47.txt", 2, 0, 31, 31) conv2d_22_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_22_addbus_[47])
);
conv2d #("weight/max_polling/22_48.txt", 2, 0, 31, 31) conv2d_22_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_22_addbus_[48])
);
conv2d #("weight/max_polling/22_49.txt", 2, 0, 31, 31) conv2d_22_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_22_addbus_[49])
);
conv2d #("weight/max_polling/22_50.txt", 2, 0, 31, 31) conv2d_22_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_22_addbus_[50])
);
conv2d #("weight/max_polling/22_51.txt", 2, 0, 31, 31) conv2d_22_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_22_addbus_[51])
);
conv2d #("weight/max_polling/22_52.txt", 2, 0, 31, 31) conv2d_22_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_22_addbus_[52])
);
conv2d #("weight/max_polling/22_53.txt", 2, 0, 31, 31) conv2d_22_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_22_addbus_[53])
);
conv2d #("weight/max_polling/22_54.txt", 2, 0, 31, 31) conv2d_22_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_22_addbus_[54])
);
conv2d #("weight/max_polling/22_55.txt", 2, 0, 31, 31) conv2d_22_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_22_addbus_[55])
);
conv2d #("weight/max_polling/22_56.txt", 2, 0, 31, 31) conv2d_22_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_22_addbus_[56])
);
conv2d #("weight/max_polling/22_57.txt", 2, 0, 31, 31) conv2d_22_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_22_addbus_[57])
);
conv2d #("weight/max_polling/22_58.txt", 2, 0, 31, 31) conv2d_22_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_22_addbus_[58])
);
conv2d #("weight/max_polling/22_59.txt", 2, 0, 31, 31) conv2d_22_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_22_addbus_[59])
);
conv2d #("weight/max_polling/22_60.txt", 2, 0, 31, 31) conv2d_22_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_22_addbus_[60])
);
conv2d #("weight/max_polling/22_61.txt", 2, 0, 31, 31) conv2d_22_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_22_addbus_[61])
);
conv2d #("weight/max_polling/22_62.txt", 2, 0, 31, 31) conv2d_22_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_22_addbus_[62])
);
conv2d #("weight/max_polling/22_63.txt", 2, 0, 31, 31) conv2d_22_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_22_addbus_[63])
);
sum_64 #(15) sum_22( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[22]), 
        .data_in_0(_22_addbus_[0]), 
        .data_in_1(_22_addbus_[1]), 
        .data_in_2(_22_addbus_[2]), 
        .data_in_3(_22_addbus_[3]), 
        .data_in_4(_22_addbus_[4]), 
        .data_in_5(_22_addbus_[5]), 
        .data_in_6(_22_addbus_[6]), 
        .data_in_7(_22_addbus_[7]), 
        .data_in_8(_22_addbus_[8]), 
        .data_in_9(_22_addbus_[9]), 
        .data_in_10(_22_addbus_[10]), 
        .data_in_11(_22_addbus_[11]), 
        .data_in_12(_22_addbus_[12]), 
        .data_in_13(_22_addbus_[13]), 
        .data_in_14(_22_addbus_[14]), 
        .data_in_15(_22_addbus_[15]), 
        .data_in_16(_22_addbus_[16]), 
        .data_in_17(_22_addbus_[17]), 
        .data_in_18(_22_addbus_[18]), 
        .data_in_19(_22_addbus_[19]), 
        .data_in_20(_22_addbus_[20]), 
        .data_in_21(_22_addbus_[21]), 
        .data_in_22(_22_addbus_[22]), 
        .data_in_23(_22_addbus_[23]), 
        .data_in_24(_22_addbus_[24]), 
        .data_in_25(_22_addbus_[25]), 
        .data_in_26(_22_addbus_[26]), 
        .data_in_27(_22_addbus_[27]), 
        .data_in_28(_22_addbus_[28]), 
        .data_in_29(_22_addbus_[29]), 
        .data_in_30(_22_addbus_[30]), 
        .data_in_31(_22_addbus_[31]), 
        .data_in_32(_22_addbus_[32]), 
        .data_in_33(_22_addbus_[33]), 
        .data_in_34(_22_addbus_[34]), 
        .data_in_35(_22_addbus_[35]), 
        .data_in_36(_22_addbus_[36]), 
        .data_in_37(_22_addbus_[37]), 
        .data_in_38(_22_addbus_[38]), 
        .data_in_39(_22_addbus_[39]), 
        .data_in_40(_22_addbus_[40]), 
        .data_in_41(_22_addbus_[41]), 
        .data_in_42(_22_addbus_[42]), 
        .data_in_43(_22_addbus_[43]), 
        .data_in_44(_22_addbus_[44]), 
        .data_in_45(_22_addbus_[45]), 
        .data_in_46(_22_addbus_[46]), 
        .data_in_47(_22_addbus_[47]), 
        .data_in_48(_22_addbus_[48]), 
        .data_in_49(_22_addbus_[49]), 
        .data_in_50(_22_addbus_[50]), 
        .data_in_51(_22_addbus_[51]), 
        .data_in_52(_22_addbus_[52]), 
        .data_in_53(_22_addbus_[53]), 
        .data_in_54(_22_addbus_[54]), 
        .data_in_55(_22_addbus_[55]), 
        .data_in_56(_22_addbus_[56]), 
        .data_in_57(_22_addbus_[57]), 
        .data_in_58(_22_addbus_[58]), 
        .data_in_59(_22_addbus_[59]), 
        .data_in_60(_22_addbus_[60]), 
        .data_in_61(_22_addbus_[61]), 
        .data_in_62(_22_addbus_[62]), 
        .data_in_63(_22_addbus_[63]) 
); 
wire [31:0] _23_addbus_[63:0];    
conv2d #("weight/max_polling/23_0.txt", 2, 0, 31, 31) conv2d_23_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_23_addbus_[0])
);
conv2d #("weight/max_polling/23_1.txt", 2, 0, 31, 31) conv2d_23_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_23_addbus_[1])
);
conv2d #("weight/max_polling/23_2.txt", 2, 0, 31, 31) conv2d_23_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_23_addbus_[2])
);
conv2d #("weight/max_polling/23_3.txt", 2, 0, 31, 31) conv2d_23_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_23_addbus_[3])
);
conv2d #("weight/max_polling/23_4.txt", 2, 0, 31, 31) conv2d_23_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_23_addbus_[4])
);
conv2d #("weight/max_polling/23_5.txt", 2, 0, 31, 31) conv2d_23_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_23_addbus_[5])
);
conv2d #("weight/max_polling/23_6.txt", 2, 0, 31, 31) conv2d_23_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_23_addbus_[6])
);
conv2d #("weight/max_polling/23_7.txt", 2, 0, 31, 31) conv2d_23_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_23_addbus_[7])
);
conv2d #("weight/max_polling/23_8.txt", 2, 0, 31, 31) conv2d_23_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_23_addbus_[8])
);
conv2d #("weight/max_polling/23_9.txt", 2, 0, 31, 31) conv2d_23_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_23_addbus_[9])
);
conv2d #("weight/max_polling/23_10.txt", 2, 0, 31, 31) conv2d_23_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_23_addbus_[10])
);
conv2d #("weight/max_polling/23_11.txt", 2, 0, 31, 31) conv2d_23_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_23_addbus_[11])
);
conv2d #("weight/max_polling/23_12.txt", 2, 0, 31, 31) conv2d_23_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_23_addbus_[12])
);
conv2d #("weight/max_polling/23_13.txt", 2, 0, 31, 31) conv2d_23_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_23_addbus_[13])
);
conv2d #("weight/max_polling/23_14.txt", 2, 0, 31, 31) conv2d_23_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_23_addbus_[14])
);
conv2d #("weight/max_polling/23_15.txt", 2, 0, 31, 31) conv2d_23_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_23_addbus_[15])
);
conv2d #("weight/max_polling/23_16.txt", 2, 0, 31, 31) conv2d_23_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_23_addbus_[16])
);
conv2d #("weight/max_polling/23_17.txt", 2, 0, 31, 31) conv2d_23_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_23_addbus_[17])
);
conv2d #("weight/max_polling/23_18.txt", 2, 0, 31, 31) conv2d_23_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_23_addbus_[18])
);
conv2d #("weight/max_polling/23_19.txt", 2, 0, 31, 31) conv2d_23_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_23_addbus_[19])
);
conv2d #("weight/max_polling/23_20.txt", 2, 0, 31, 31) conv2d_23_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_23_addbus_[20])
);
conv2d #("weight/max_polling/23_21.txt", 2, 0, 31, 31) conv2d_23_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_23_addbus_[21])
);
conv2d #("weight/max_polling/23_22.txt", 2, 0, 31, 31) conv2d_23_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_23_addbus_[22])
);
conv2d #("weight/max_polling/23_23.txt", 2, 0, 31, 31) conv2d_23_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_23_addbus_[23])
);
conv2d #("weight/max_polling/23_24.txt", 2, 0, 31, 31) conv2d_23_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_23_addbus_[24])
);
conv2d #("weight/max_polling/23_25.txt", 2, 0, 31, 31) conv2d_23_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_23_addbus_[25])
);
conv2d #("weight/max_polling/23_26.txt", 2, 0, 31, 31) conv2d_23_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_23_addbus_[26])
);
conv2d #("weight/max_polling/23_27.txt", 2, 0, 31, 31) conv2d_23_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_23_addbus_[27])
);
conv2d #("weight/max_polling/23_28.txt", 2, 0, 31, 31) conv2d_23_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_23_addbus_[28])
);
conv2d #("weight/max_polling/23_29.txt", 2, 0, 31, 31) conv2d_23_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_23_addbus_[29])
);
conv2d #("weight/max_polling/23_30.txt", 2, 0, 31, 31) conv2d_23_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_23_addbus_[30])
);
conv2d #("weight/max_polling/23_31.txt", 2, 0, 31, 31) conv2d_23_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_23_addbus_[31])
);
conv2d #("weight/max_polling/23_32.txt", 2, 0, 31, 31) conv2d_23_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_23_addbus_[32])
);
conv2d #("weight/max_polling/23_33.txt", 2, 0, 31, 31) conv2d_23_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_23_addbus_[33])
);
conv2d #("weight/max_polling/23_34.txt", 2, 0, 31, 31) conv2d_23_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_23_addbus_[34])
);
conv2d #("weight/max_polling/23_35.txt", 2, 0, 31, 31) conv2d_23_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_23_addbus_[35])
);
conv2d #("weight/max_polling/23_36.txt", 2, 0, 31, 31) conv2d_23_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_23_addbus_[36])
);
conv2d #("weight/max_polling/23_37.txt", 2, 0, 31, 31) conv2d_23_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_23_addbus_[37])
);
conv2d #("weight/max_polling/23_38.txt", 2, 0, 31, 31) conv2d_23_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_23_addbus_[38])
);
conv2d #("weight/max_polling/23_39.txt", 2, 0, 31, 31) conv2d_23_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_23_addbus_[39])
);
conv2d #("weight/max_polling/23_40.txt", 2, 0, 31, 31) conv2d_23_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_23_addbus_[40])
);
conv2d #("weight/max_polling/23_41.txt", 2, 0, 31, 31) conv2d_23_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_23_addbus_[41])
);
conv2d #("weight/max_polling/23_42.txt", 2, 0, 31, 31) conv2d_23_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_23_addbus_[42])
);
conv2d #("weight/max_polling/23_43.txt", 2, 0, 31, 31) conv2d_23_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_23_addbus_[43])
);
conv2d #("weight/max_polling/23_44.txt", 2, 0, 31, 31) conv2d_23_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_23_addbus_[44])
);
conv2d #("weight/max_polling/23_45.txt", 2, 0, 31, 31) conv2d_23_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_23_addbus_[45])
);
conv2d #("weight/max_polling/23_46.txt", 2, 0, 31, 31) conv2d_23_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_23_addbus_[46])
);
conv2d #("weight/max_polling/23_47.txt", 2, 0, 31, 31) conv2d_23_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_23_addbus_[47])
);
conv2d #("weight/max_polling/23_48.txt", 2, 0, 31, 31) conv2d_23_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_23_addbus_[48])
);
conv2d #("weight/max_polling/23_49.txt", 2, 0, 31, 31) conv2d_23_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_23_addbus_[49])
);
conv2d #("weight/max_polling/23_50.txt", 2, 0, 31, 31) conv2d_23_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_23_addbus_[50])
);
conv2d #("weight/max_polling/23_51.txt", 2, 0, 31, 31) conv2d_23_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_23_addbus_[51])
);
conv2d #("weight/max_polling/23_52.txt", 2, 0, 31, 31) conv2d_23_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_23_addbus_[52])
);
conv2d #("weight/max_polling/23_53.txt", 2, 0, 31, 31) conv2d_23_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_23_addbus_[53])
);
conv2d #("weight/max_polling/23_54.txt", 2, 0, 31, 31) conv2d_23_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_23_addbus_[54])
);
conv2d #("weight/max_polling/23_55.txt", 2, 0, 31, 31) conv2d_23_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_23_addbus_[55])
);
conv2d #("weight/max_polling/23_56.txt", 2, 0, 31, 31) conv2d_23_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_23_addbus_[56])
);
conv2d #("weight/max_polling/23_57.txt", 2, 0, 31, 31) conv2d_23_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_23_addbus_[57])
);
conv2d #("weight/max_polling/23_58.txt", 2, 0, 31, 31) conv2d_23_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_23_addbus_[58])
);
conv2d #("weight/max_polling/23_59.txt", 2, 0, 31, 31) conv2d_23_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_23_addbus_[59])
);
conv2d #("weight/max_polling/23_60.txt", 2, 0, 31, 31) conv2d_23_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_23_addbus_[60])
);
conv2d #("weight/max_polling/23_61.txt", 2, 0, 31, 31) conv2d_23_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_23_addbus_[61])
);
conv2d #("weight/max_polling/23_62.txt", 2, 0, 31, 31) conv2d_23_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_23_addbus_[62])
);
conv2d #("weight/max_polling/23_63.txt", 2, 0, 31, 31) conv2d_23_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_23_addbus_[63])
);
sum_64 #(15) sum_23( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[23]), 
        .data_in_0(_23_addbus_[0]), 
        .data_in_1(_23_addbus_[1]), 
        .data_in_2(_23_addbus_[2]), 
        .data_in_3(_23_addbus_[3]), 
        .data_in_4(_23_addbus_[4]), 
        .data_in_5(_23_addbus_[5]), 
        .data_in_6(_23_addbus_[6]), 
        .data_in_7(_23_addbus_[7]), 
        .data_in_8(_23_addbus_[8]), 
        .data_in_9(_23_addbus_[9]), 
        .data_in_10(_23_addbus_[10]), 
        .data_in_11(_23_addbus_[11]), 
        .data_in_12(_23_addbus_[12]), 
        .data_in_13(_23_addbus_[13]), 
        .data_in_14(_23_addbus_[14]), 
        .data_in_15(_23_addbus_[15]), 
        .data_in_16(_23_addbus_[16]), 
        .data_in_17(_23_addbus_[17]), 
        .data_in_18(_23_addbus_[18]), 
        .data_in_19(_23_addbus_[19]), 
        .data_in_20(_23_addbus_[20]), 
        .data_in_21(_23_addbus_[21]), 
        .data_in_22(_23_addbus_[22]), 
        .data_in_23(_23_addbus_[23]), 
        .data_in_24(_23_addbus_[24]), 
        .data_in_25(_23_addbus_[25]), 
        .data_in_26(_23_addbus_[26]), 
        .data_in_27(_23_addbus_[27]), 
        .data_in_28(_23_addbus_[28]), 
        .data_in_29(_23_addbus_[29]), 
        .data_in_30(_23_addbus_[30]), 
        .data_in_31(_23_addbus_[31]), 
        .data_in_32(_23_addbus_[32]), 
        .data_in_33(_23_addbus_[33]), 
        .data_in_34(_23_addbus_[34]), 
        .data_in_35(_23_addbus_[35]), 
        .data_in_36(_23_addbus_[36]), 
        .data_in_37(_23_addbus_[37]), 
        .data_in_38(_23_addbus_[38]), 
        .data_in_39(_23_addbus_[39]), 
        .data_in_40(_23_addbus_[40]), 
        .data_in_41(_23_addbus_[41]), 
        .data_in_42(_23_addbus_[42]), 
        .data_in_43(_23_addbus_[43]), 
        .data_in_44(_23_addbus_[44]), 
        .data_in_45(_23_addbus_[45]), 
        .data_in_46(_23_addbus_[46]), 
        .data_in_47(_23_addbus_[47]), 
        .data_in_48(_23_addbus_[48]), 
        .data_in_49(_23_addbus_[49]), 
        .data_in_50(_23_addbus_[50]), 
        .data_in_51(_23_addbus_[51]), 
        .data_in_52(_23_addbus_[52]), 
        .data_in_53(_23_addbus_[53]), 
        .data_in_54(_23_addbus_[54]), 
        .data_in_55(_23_addbus_[55]), 
        .data_in_56(_23_addbus_[56]), 
        .data_in_57(_23_addbus_[57]), 
        .data_in_58(_23_addbus_[58]), 
        .data_in_59(_23_addbus_[59]), 
        .data_in_60(_23_addbus_[60]), 
        .data_in_61(_23_addbus_[61]), 
        .data_in_62(_23_addbus_[62]), 
        .data_in_63(_23_addbus_[63]) 
); 
wire [31:0] _24_addbus_[63:0];    
conv2d #("weight/max_polling/24_0.txt", 2, 0, 31, 31) conv2d_24_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_24_addbus_[0])
);
conv2d #("weight/max_polling/24_1.txt", 2, 0, 31, 31) conv2d_24_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_24_addbus_[1])
);
conv2d #("weight/max_polling/24_2.txt", 2, 0, 31, 31) conv2d_24_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_24_addbus_[2])
);
conv2d #("weight/max_polling/24_3.txt", 2, 0, 31, 31) conv2d_24_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_24_addbus_[3])
);
conv2d #("weight/max_polling/24_4.txt", 2, 0, 31, 31) conv2d_24_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_24_addbus_[4])
);
conv2d #("weight/max_polling/24_5.txt", 2, 0, 31, 31) conv2d_24_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_24_addbus_[5])
);
conv2d #("weight/max_polling/24_6.txt", 2, 0, 31, 31) conv2d_24_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_24_addbus_[6])
);
conv2d #("weight/max_polling/24_7.txt", 2, 0, 31, 31) conv2d_24_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_24_addbus_[7])
);
conv2d #("weight/max_polling/24_8.txt", 2, 0, 31, 31) conv2d_24_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_24_addbus_[8])
);
conv2d #("weight/max_polling/24_9.txt", 2, 0, 31, 31) conv2d_24_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_24_addbus_[9])
);
conv2d #("weight/max_polling/24_10.txt", 2, 0, 31, 31) conv2d_24_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_24_addbus_[10])
);
conv2d #("weight/max_polling/24_11.txt", 2, 0, 31, 31) conv2d_24_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_24_addbus_[11])
);
conv2d #("weight/max_polling/24_12.txt", 2, 0, 31, 31) conv2d_24_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_24_addbus_[12])
);
conv2d #("weight/max_polling/24_13.txt", 2, 0, 31, 31) conv2d_24_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_24_addbus_[13])
);
conv2d #("weight/max_polling/24_14.txt", 2, 0, 31, 31) conv2d_24_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_24_addbus_[14])
);
conv2d #("weight/max_polling/24_15.txt", 2, 0, 31, 31) conv2d_24_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_24_addbus_[15])
);
conv2d #("weight/max_polling/24_16.txt", 2, 0, 31, 31) conv2d_24_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_24_addbus_[16])
);
conv2d #("weight/max_polling/24_17.txt", 2, 0, 31, 31) conv2d_24_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_24_addbus_[17])
);
conv2d #("weight/max_polling/24_18.txt", 2, 0, 31, 31) conv2d_24_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_24_addbus_[18])
);
conv2d #("weight/max_polling/24_19.txt", 2, 0, 31, 31) conv2d_24_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_24_addbus_[19])
);
conv2d #("weight/max_polling/24_20.txt", 2, 0, 31, 31) conv2d_24_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_24_addbus_[20])
);
conv2d #("weight/max_polling/24_21.txt", 2, 0, 31, 31) conv2d_24_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_24_addbus_[21])
);
conv2d #("weight/max_polling/24_22.txt", 2, 0, 31, 31) conv2d_24_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_24_addbus_[22])
);
conv2d #("weight/max_polling/24_23.txt", 2, 0, 31, 31) conv2d_24_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_24_addbus_[23])
);
conv2d #("weight/max_polling/24_24.txt", 2, 0, 31, 31) conv2d_24_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_24_addbus_[24])
);
conv2d #("weight/max_polling/24_25.txt", 2, 0, 31, 31) conv2d_24_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_24_addbus_[25])
);
conv2d #("weight/max_polling/24_26.txt", 2, 0, 31, 31) conv2d_24_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_24_addbus_[26])
);
conv2d #("weight/max_polling/24_27.txt", 2, 0, 31, 31) conv2d_24_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_24_addbus_[27])
);
conv2d #("weight/max_polling/24_28.txt", 2, 0, 31, 31) conv2d_24_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_24_addbus_[28])
);
conv2d #("weight/max_polling/24_29.txt", 2, 0, 31, 31) conv2d_24_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_24_addbus_[29])
);
conv2d #("weight/max_polling/24_30.txt", 2, 0, 31, 31) conv2d_24_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_24_addbus_[30])
);
conv2d #("weight/max_polling/24_31.txt", 2, 0, 31, 31) conv2d_24_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_24_addbus_[31])
);
conv2d #("weight/max_polling/24_32.txt", 2, 0, 31, 31) conv2d_24_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_24_addbus_[32])
);
conv2d #("weight/max_polling/24_33.txt", 2, 0, 31, 31) conv2d_24_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_24_addbus_[33])
);
conv2d #("weight/max_polling/24_34.txt", 2, 0, 31, 31) conv2d_24_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_24_addbus_[34])
);
conv2d #("weight/max_polling/24_35.txt", 2, 0, 31, 31) conv2d_24_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_24_addbus_[35])
);
conv2d #("weight/max_polling/24_36.txt", 2, 0, 31, 31) conv2d_24_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_24_addbus_[36])
);
conv2d #("weight/max_polling/24_37.txt", 2, 0, 31, 31) conv2d_24_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_24_addbus_[37])
);
conv2d #("weight/max_polling/24_38.txt", 2, 0, 31, 31) conv2d_24_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_24_addbus_[38])
);
conv2d #("weight/max_polling/24_39.txt", 2, 0, 31, 31) conv2d_24_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_24_addbus_[39])
);
conv2d #("weight/max_polling/24_40.txt", 2, 0, 31, 31) conv2d_24_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_24_addbus_[40])
);
conv2d #("weight/max_polling/24_41.txt", 2, 0, 31, 31) conv2d_24_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_24_addbus_[41])
);
conv2d #("weight/max_polling/24_42.txt", 2, 0, 31, 31) conv2d_24_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_24_addbus_[42])
);
conv2d #("weight/max_polling/24_43.txt", 2, 0, 31, 31) conv2d_24_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_24_addbus_[43])
);
conv2d #("weight/max_polling/24_44.txt", 2, 0, 31, 31) conv2d_24_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_24_addbus_[44])
);
conv2d #("weight/max_polling/24_45.txt", 2, 0, 31, 31) conv2d_24_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_24_addbus_[45])
);
conv2d #("weight/max_polling/24_46.txt", 2, 0, 31, 31) conv2d_24_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_24_addbus_[46])
);
conv2d #("weight/max_polling/24_47.txt", 2, 0, 31, 31) conv2d_24_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_24_addbus_[47])
);
conv2d #("weight/max_polling/24_48.txt", 2, 0, 31, 31) conv2d_24_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_24_addbus_[48])
);
conv2d #("weight/max_polling/24_49.txt", 2, 0, 31, 31) conv2d_24_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_24_addbus_[49])
);
conv2d #("weight/max_polling/24_50.txt", 2, 0, 31, 31) conv2d_24_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_24_addbus_[50])
);
conv2d #("weight/max_polling/24_51.txt", 2, 0, 31, 31) conv2d_24_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_24_addbus_[51])
);
conv2d #("weight/max_polling/24_52.txt", 2, 0, 31, 31) conv2d_24_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_24_addbus_[52])
);
conv2d #("weight/max_polling/24_53.txt", 2, 0, 31, 31) conv2d_24_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_24_addbus_[53])
);
conv2d #("weight/max_polling/24_54.txt", 2, 0, 31, 31) conv2d_24_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_24_addbus_[54])
);
conv2d #("weight/max_polling/24_55.txt", 2, 0, 31, 31) conv2d_24_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_24_addbus_[55])
);
conv2d #("weight/max_polling/24_56.txt", 2, 0, 31, 31) conv2d_24_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_24_addbus_[56])
);
conv2d #("weight/max_polling/24_57.txt", 2, 0, 31, 31) conv2d_24_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_24_addbus_[57])
);
conv2d #("weight/max_polling/24_58.txt", 2, 0, 31, 31) conv2d_24_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_24_addbus_[58])
);
conv2d #("weight/max_polling/24_59.txt", 2, 0, 31, 31) conv2d_24_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_24_addbus_[59])
);
conv2d #("weight/max_polling/24_60.txt", 2, 0, 31, 31) conv2d_24_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_24_addbus_[60])
);
conv2d #("weight/max_polling/24_61.txt", 2, 0, 31, 31) conv2d_24_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_24_addbus_[61])
);
conv2d #("weight/max_polling/24_62.txt", 2, 0, 31, 31) conv2d_24_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_24_addbus_[62])
);
conv2d #("weight/max_polling/24_63.txt", 2, 0, 31, 31) conv2d_24_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_24_addbus_[63])
);
sum_64 #(15) sum_24( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[24]), 
        .data_in_0(_24_addbus_[0]), 
        .data_in_1(_24_addbus_[1]), 
        .data_in_2(_24_addbus_[2]), 
        .data_in_3(_24_addbus_[3]), 
        .data_in_4(_24_addbus_[4]), 
        .data_in_5(_24_addbus_[5]), 
        .data_in_6(_24_addbus_[6]), 
        .data_in_7(_24_addbus_[7]), 
        .data_in_8(_24_addbus_[8]), 
        .data_in_9(_24_addbus_[9]), 
        .data_in_10(_24_addbus_[10]), 
        .data_in_11(_24_addbus_[11]), 
        .data_in_12(_24_addbus_[12]), 
        .data_in_13(_24_addbus_[13]), 
        .data_in_14(_24_addbus_[14]), 
        .data_in_15(_24_addbus_[15]), 
        .data_in_16(_24_addbus_[16]), 
        .data_in_17(_24_addbus_[17]), 
        .data_in_18(_24_addbus_[18]), 
        .data_in_19(_24_addbus_[19]), 
        .data_in_20(_24_addbus_[20]), 
        .data_in_21(_24_addbus_[21]), 
        .data_in_22(_24_addbus_[22]), 
        .data_in_23(_24_addbus_[23]), 
        .data_in_24(_24_addbus_[24]), 
        .data_in_25(_24_addbus_[25]), 
        .data_in_26(_24_addbus_[26]), 
        .data_in_27(_24_addbus_[27]), 
        .data_in_28(_24_addbus_[28]), 
        .data_in_29(_24_addbus_[29]), 
        .data_in_30(_24_addbus_[30]), 
        .data_in_31(_24_addbus_[31]), 
        .data_in_32(_24_addbus_[32]), 
        .data_in_33(_24_addbus_[33]), 
        .data_in_34(_24_addbus_[34]), 
        .data_in_35(_24_addbus_[35]), 
        .data_in_36(_24_addbus_[36]), 
        .data_in_37(_24_addbus_[37]), 
        .data_in_38(_24_addbus_[38]), 
        .data_in_39(_24_addbus_[39]), 
        .data_in_40(_24_addbus_[40]), 
        .data_in_41(_24_addbus_[41]), 
        .data_in_42(_24_addbus_[42]), 
        .data_in_43(_24_addbus_[43]), 
        .data_in_44(_24_addbus_[44]), 
        .data_in_45(_24_addbus_[45]), 
        .data_in_46(_24_addbus_[46]), 
        .data_in_47(_24_addbus_[47]), 
        .data_in_48(_24_addbus_[48]), 
        .data_in_49(_24_addbus_[49]), 
        .data_in_50(_24_addbus_[50]), 
        .data_in_51(_24_addbus_[51]), 
        .data_in_52(_24_addbus_[52]), 
        .data_in_53(_24_addbus_[53]), 
        .data_in_54(_24_addbus_[54]), 
        .data_in_55(_24_addbus_[55]), 
        .data_in_56(_24_addbus_[56]), 
        .data_in_57(_24_addbus_[57]), 
        .data_in_58(_24_addbus_[58]), 
        .data_in_59(_24_addbus_[59]), 
        .data_in_60(_24_addbus_[60]), 
        .data_in_61(_24_addbus_[61]), 
        .data_in_62(_24_addbus_[62]), 
        .data_in_63(_24_addbus_[63]) 
); 
wire [31:0] _25_addbus_[63:0];    
conv2d #("weight/max_polling/25_0.txt", 2, 0, 31, 31) conv2d_25_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_25_addbus_[0])
);
conv2d #("weight/max_polling/25_1.txt", 2, 0, 31, 31) conv2d_25_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_25_addbus_[1])
);
conv2d #("weight/max_polling/25_2.txt", 2, 0, 31, 31) conv2d_25_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_25_addbus_[2])
);
conv2d #("weight/max_polling/25_3.txt", 2, 0, 31, 31) conv2d_25_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_25_addbus_[3])
);
conv2d #("weight/max_polling/25_4.txt", 2, 0, 31, 31) conv2d_25_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_25_addbus_[4])
);
conv2d #("weight/max_polling/25_5.txt", 2, 0, 31, 31) conv2d_25_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_25_addbus_[5])
);
conv2d #("weight/max_polling/25_6.txt", 2, 0, 31, 31) conv2d_25_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_25_addbus_[6])
);
conv2d #("weight/max_polling/25_7.txt", 2, 0, 31, 31) conv2d_25_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_25_addbus_[7])
);
conv2d #("weight/max_polling/25_8.txt", 2, 0, 31, 31) conv2d_25_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_25_addbus_[8])
);
conv2d #("weight/max_polling/25_9.txt", 2, 0, 31, 31) conv2d_25_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_25_addbus_[9])
);
conv2d #("weight/max_polling/25_10.txt", 2, 0, 31, 31) conv2d_25_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_25_addbus_[10])
);
conv2d #("weight/max_polling/25_11.txt", 2, 0, 31, 31) conv2d_25_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_25_addbus_[11])
);
conv2d #("weight/max_polling/25_12.txt", 2, 0, 31, 31) conv2d_25_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_25_addbus_[12])
);
conv2d #("weight/max_polling/25_13.txt", 2, 0, 31, 31) conv2d_25_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_25_addbus_[13])
);
conv2d #("weight/max_polling/25_14.txt", 2, 0, 31, 31) conv2d_25_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_25_addbus_[14])
);
conv2d #("weight/max_polling/25_15.txt", 2, 0, 31, 31) conv2d_25_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_25_addbus_[15])
);
conv2d #("weight/max_polling/25_16.txt", 2, 0, 31, 31) conv2d_25_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_25_addbus_[16])
);
conv2d #("weight/max_polling/25_17.txt", 2, 0, 31, 31) conv2d_25_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_25_addbus_[17])
);
conv2d #("weight/max_polling/25_18.txt", 2, 0, 31, 31) conv2d_25_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_25_addbus_[18])
);
conv2d #("weight/max_polling/25_19.txt", 2, 0, 31, 31) conv2d_25_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_25_addbus_[19])
);
conv2d #("weight/max_polling/25_20.txt", 2, 0, 31, 31) conv2d_25_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_25_addbus_[20])
);
conv2d #("weight/max_polling/25_21.txt", 2, 0, 31, 31) conv2d_25_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_25_addbus_[21])
);
conv2d #("weight/max_polling/25_22.txt", 2, 0, 31, 31) conv2d_25_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_25_addbus_[22])
);
conv2d #("weight/max_polling/25_23.txt", 2, 0, 31, 31) conv2d_25_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_25_addbus_[23])
);
conv2d #("weight/max_polling/25_24.txt", 2, 0, 31, 31) conv2d_25_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_25_addbus_[24])
);
conv2d #("weight/max_polling/25_25.txt", 2, 0, 31, 31) conv2d_25_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_25_addbus_[25])
);
conv2d #("weight/max_polling/25_26.txt", 2, 0, 31, 31) conv2d_25_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_25_addbus_[26])
);
conv2d #("weight/max_polling/25_27.txt", 2, 0, 31, 31) conv2d_25_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_25_addbus_[27])
);
conv2d #("weight/max_polling/25_28.txt", 2, 0, 31, 31) conv2d_25_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_25_addbus_[28])
);
conv2d #("weight/max_polling/25_29.txt", 2, 0, 31, 31) conv2d_25_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_25_addbus_[29])
);
conv2d #("weight/max_polling/25_30.txt", 2, 0, 31, 31) conv2d_25_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_25_addbus_[30])
);
conv2d #("weight/max_polling/25_31.txt", 2, 0, 31, 31) conv2d_25_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_25_addbus_[31])
);
conv2d #("weight/max_polling/25_32.txt", 2, 0, 31, 31) conv2d_25_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_25_addbus_[32])
);
conv2d #("weight/max_polling/25_33.txt", 2, 0, 31, 31) conv2d_25_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_25_addbus_[33])
);
conv2d #("weight/max_polling/25_34.txt", 2, 0, 31, 31) conv2d_25_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_25_addbus_[34])
);
conv2d #("weight/max_polling/25_35.txt", 2, 0, 31, 31) conv2d_25_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_25_addbus_[35])
);
conv2d #("weight/max_polling/25_36.txt", 2, 0, 31, 31) conv2d_25_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_25_addbus_[36])
);
conv2d #("weight/max_polling/25_37.txt", 2, 0, 31, 31) conv2d_25_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_25_addbus_[37])
);
conv2d #("weight/max_polling/25_38.txt", 2, 0, 31, 31) conv2d_25_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_25_addbus_[38])
);
conv2d #("weight/max_polling/25_39.txt", 2, 0, 31, 31) conv2d_25_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_25_addbus_[39])
);
conv2d #("weight/max_polling/25_40.txt", 2, 0, 31, 31) conv2d_25_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_25_addbus_[40])
);
conv2d #("weight/max_polling/25_41.txt", 2, 0, 31, 31) conv2d_25_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_25_addbus_[41])
);
conv2d #("weight/max_polling/25_42.txt", 2, 0, 31, 31) conv2d_25_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_25_addbus_[42])
);
conv2d #("weight/max_polling/25_43.txt", 2, 0, 31, 31) conv2d_25_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_25_addbus_[43])
);
conv2d #("weight/max_polling/25_44.txt", 2, 0, 31, 31) conv2d_25_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_25_addbus_[44])
);
conv2d #("weight/max_polling/25_45.txt", 2, 0, 31, 31) conv2d_25_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_25_addbus_[45])
);
conv2d #("weight/max_polling/25_46.txt", 2, 0, 31, 31) conv2d_25_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_25_addbus_[46])
);
conv2d #("weight/max_polling/25_47.txt", 2, 0, 31, 31) conv2d_25_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_25_addbus_[47])
);
conv2d #("weight/max_polling/25_48.txt", 2, 0, 31, 31) conv2d_25_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_25_addbus_[48])
);
conv2d #("weight/max_polling/25_49.txt", 2, 0, 31, 31) conv2d_25_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_25_addbus_[49])
);
conv2d #("weight/max_polling/25_50.txt", 2, 0, 31, 31) conv2d_25_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_25_addbus_[50])
);
conv2d #("weight/max_polling/25_51.txt", 2, 0, 31, 31) conv2d_25_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_25_addbus_[51])
);
conv2d #("weight/max_polling/25_52.txt", 2, 0, 31, 31) conv2d_25_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_25_addbus_[52])
);
conv2d #("weight/max_polling/25_53.txt", 2, 0, 31, 31) conv2d_25_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_25_addbus_[53])
);
conv2d #("weight/max_polling/25_54.txt", 2, 0, 31, 31) conv2d_25_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_25_addbus_[54])
);
conv2d #("weight/max_polling/25_55.txt", 2, 0, 31, 31) conv2d_25_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_25_addbus_[55])
);
conv2d #("weight/max_polling/25_56.txt", 2, 0, 31, 31) conv2d_25_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_25_addbus_[56])
);
conv2d #("weight/max_polling/25_57.txt", 2, 0, 31, 31) conv2d_25_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_25_addbus_[57])
);
conv2d #("weight/max_polling/25_58.txt", 2, 0, 31, 31) conv2d_25_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_25_addbus_[58])
);
conv2d #("weight/max_polling/25_59.txt", 2, 0, 31, 31) conv2d_25_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_25_addbus_[59])
);
conv2d #("weight/max_polling/25_60.txt", 2, 0, 31, 31) conv2d_25_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_25_addbus_[60])
);
conv2d #("weight/max_polling/25_61.txt", 2, 0, 31, 31) conv2d_25_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_25_addbus_[61])
);
conv2d #("weight/max_polling/25_62.txt", 2, 0, 31, 31) conv2d_25_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_25_addbus_[62])
);
conv2d #("weight/max_polling/25_63.txt", 2, 0, 31, 31) conv2d_25_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_25_addbus_[63])
);
sum_64 #(15) sum_25( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[25]), 
        .data_in_0(_25_addbus_[0]), 
        .data_in_1(_25_addbus_[1]), 
        .data_in_2(_25_addbus_[2]), 
        .data_in_3(_25_addbus_[3]), 
        .data_in_4(_25_addbus_[4]), 
        .data_in_5(_25_addbus_[5]), 
        .data_in_6(_25_addbus_[6]), 
        .data_in_7(_25_addbus_[7]), 
        .data_in_8(_25_addbus_[8]), 
        .data_in_9(_25_addbus_[9]), 
        .data_in_10(_25_addbus_[10]), 
        .data_in_11(_25_addbus_[11]), 
        .data_in_12(_25_addbus_[12]), 
        .data_in_13(_25_addbus_[13]), 
        .data_in_14(_25_addbus_[14]), 
        .data_in_15(_25_addbus_[15]), 
        .data_in_16(_25_addbus_[16]), 
        .data_in_17(_25_addbus_[17]), 
        .data_in_18(_25_addbus_[18]), 
        .data_in_19(_25_addbus_[19]), 
        .data_in_20(_25_addbus_[20]), 
        .data_in_21(_25_addbus_[21]), 
        .data_in_22(_25_addbus_[22]), 
        .data_in_23(_25_addbus_[23]), 
        .data_in_24(_25_addbus_[24]), 
        .data_in_25(_25_addbus_[25]), 
        .data_in_26(_25_addbus_[26]), 
        .data_in_27(_25_addbus_[27]), 
        .data_in_28(_25_addbus_[28]), 
        .data_in_29(_25_addbus_[29]), 
        .data_in_30(_25_addbus_[30]), 
        .data_in_31(_25_addbus_[31]), 
        .data_in_32(_25_addbus_[32]), 
        .data_in_33(_25_addbus_[33]), 
        .data_in_34(_25_addbus_[34]), 
        .data_in_35(_25_addbus_[35]), 
        .data_in_36(_25_addbus_[36]), 
        .data_in_37(_25_addbus_[37]), 
        .data_in_38(_25_addbus_[38]), 
        .data_in_39(_25_addbus_[39]), 
        .data_in_40(_25_addbus_[40]), 
        .data_in_41(_25_addbus_[41]), 
        .data_in_42(_25_addbus_[42]), 
        .data_in_43(_25_addbus_[43]), 
        .data_in_44(_25_addbus_[44]), 
        .data_in_45(_25_addbus_[45]), 
        .data_in_46(_25_addbus_[46]), 
        .data_in_47(_25_addbus_[47]), 
        .data_in_48(_25_addbus_[48]), 
        .data_in_49(_25_addbus_[49]), 
        .data_in_50(_25_addbus_[50]), 
        .data_in_51(_25_addbus_[51]), 
        .data_in_52(_25_addbus_[52]), 
        .data_in_53(_25_addbus_[53]), 
        .data_in_54(_25_addbus_[54]), 
        .data_in_55(_25_addbus_[55]), 
        .data_in_56(_25_addbus_[56]), 
        .data_in_57(_25_addbus_[57]), 
        .data_in_58(_25_addbus_[58]), 
        .data_in_59(_25_addbus_[59]), 
        .data_in_60(_25_addbus_[60]), 
        .data_in_61(_25_addbus_[61]), 
        .data_in_62(_25_addbus_[62]), 
        .data_in_63(_25_addbus_[63]) 
); 
wire [31:0] _26_addbus_[63:0];    
conv2d #("weight/max_polling/26_0.txt", 2, 0, 31, 31) conv2d_26_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_26_addbus_[0])
);
conv2d #("weight/max_polling/26_1.txt", 2, 0, 31, 31) conv2d_26_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_26_addbus_[1])
);
conv2d #("weight/max_polling/26_2.txt", 2, 0, 31, 31) conv2d_26_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_26_addbus_[2])
);
conv2d #("weight/max_polling/26_3.txt", 2, 0, 31, 31) conv2d_26_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_26_addbus_[3])
);
conv2d #("weight/max_polling/26_4.txt", 2, 0, 31, 31) conv2d_26_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_26_addbus_[4])
);
conv2d #("weight/max_polling/26_5.txt", 2, 0, 31, 31) conv2d_26_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_26_addbus_[5])
);
conv2d #("weight/max_polling/26_6.txt", 2, 0, 31, 31) conv2d_26_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_26_addbus_[6])
);
conv2d #("weight/max_polling/26_7.txt", 2, 0, 31, 31) conv2d_26_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_26_addbus_[7])
);
conv2d #("weight/max_polling/26_8.txt", 2, 0, 31, 31) conv2d_26_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_26_addbus_[8])
);
conv2d #("weight/max_polling/26_9.txt", 2, 0, 31, 31) conv2d_26_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_26_addbus_[9])
);
conv2d #("weight/max_polling/26_10.txt", 2, 0, 31, 31) conv2d_26_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_26_addbus_[10])
);
conv2d #("weight/max_polling/26_11.txt", 2, 0, 31, 31) conv2d_26_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_26_addbus_[11])
);
conv2d #("weight/max_polling/26_12.txt", 2, 0, 31, 31) conv2d_26_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_26_addbus_[12])
);
conv2d #("weight/max_polling/26_13.txt", 2, 0, 31, 31) conv2d_26_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_26_addbus_[13])
);
conv2d #("weight/max_polling/26_14.txt", 2, 0, 31, 31) conv2d_26_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_26_addbus_[14])
);
conv2d #("weight/max_polling/26_15.txt", 2, 0, 31, 31) conv2d_26_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_26_addbus_[15])
);
conv2d #("weight/max_polling/26_16.txt", 2, 0, 31, 31) conv2d_26_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_26_addbus_[16])
);
conv2d #("weight/max_polling/26_17.txt", 2, 0, 31, 31) conv2d_26_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_26_addbus_[17])
);
conv2d #("weight/max_polling/26_18.txt", 2, 0, 31, 31) conv2d_26_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_26_addbus_[18])
);
conv2d #("weight/max_polling/26_19.txt", 2, 0, 31, 31) conv2d_26_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_26_addbus_[19])
);
conv2d #("weight/max_polling/26_20.txt", 2, 0, 31, 31) conv2d_26_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_26_addbus_[20])
);
conv2d #("weight/max_polling/26_21.txt", 2, 0, 31, 31) conv2d_26_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_26_addbus_[21])
);
conv2d #("weight/max_polling/26_22.txt", 2, 0, 31, 31) conv2d_26_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_26_addbus_[22])
);
conv2d #("weight/max_polling/26_23.txt", 2, 0, 31, 31) conv2d_26_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_26_addbus_[23])
);
conv2d #("weight/max_polling/26_24.txt", 2, 0, 31, 31) conv2d_26_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_26_addbus_[24])
);
conv2d #("weight/max_polling/26_25.txt", 2, 0, 31, 31) conv2d_26_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_26_addbus_[25])
);
conv2d #("weight/max_polling/26_26.txt", 2, 0, 31, 31) conv2d_26_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_26_addbus_[26])
);
conv2d #("weight/max_polling/26_27.txt", 2, 0, 31, 31) conv2d_26_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_26_addbus_[27])
);
conv2d #("weight/max_polling/26_28.txt", 2, 0, 31, 31) conv2d_26_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_26_addbus_[28])
);
conv2d #("weight/max_polling/26_29.txt", 2, 0, 31, 31) conv2d_26_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_26_addbus_[29])
);
conv2d #("weight/max_polling/26_30.txt", 2, 0, 31, 31) conv2d_26_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_26_addbus_[30])
);
conv2d #("weight/max_polling/26_31.txt", 2, 0, 31, 31) conv2d_26_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_26_addbus_[31])
);
conv2d #("weight/max_polling/26_32.txt", 2, 0, 31, 31) conv2d_26_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_26_addbus_[32])
);
conv2d #("weight/max_polling/26_33.txt", 2, 0, 31, 31) conv2d_26_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_26_addbus_[33])
);
conv2d #("weight/max_polling/26_34.txt", 2, 0, 31, 31) conv2d_26_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_26_addbus_[34])
);
conv2d #("weight/max_polling/26_35.txt", 2, 0, 31, 31) conv2d_26_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_26_addbus_[35])
);
conv2d #("weight/max_polling/26_36.txt", 2, 0, 31, 31) conv2d_26_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_26_addbus_[36])
);
conv2d #("weight/max_polling/26_37.txt", 2, 0, 31, 31) conv2d_26_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_26_addbus_[37])
);
conv2d #("weight/max_polling/26_38.txt", 2, 0, 31, 31) conv2d_26_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_26_addbus_[38])
);
conv2d #("weight/max_polling/26_39.txt", 2, 0, 31, 31) conv2d_26_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_26_addbus_[39])
);
conv2d #("weight/max_polling/26_40.txt", 2, 0, 31, 31) conv2d_26_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_26_addbus_[40])
);
conv2d #("weight/max_polling/26_41.txt", 2, 0, 31, 31) conv2d_26_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_26_addbus_[41])
);
conv2d #("weight/max_polling/26_42.txt", 2, 0, 31, 31) conv2d_26_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_26_addbus_[42])
);
conv2d #("weight/max_polling/26_43.txt", 2, 0, 31, 31) conv2d_26_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_26_addbus_[43])
);
conv2d #("weight/max_polling/26_44.txt", 2, 0, 31, 31) conv2d_26_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_26_addbus_[44])
);
conv2d #("weight/max_polling/26_45.txt", 2, 0, 31, 31) conv2d_26_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_26_addbus_[45])
);
conv2d #("weight/max_polling/26_46.txt", 2, 0, 31, 31) conv2d_26_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_26_addbus_[46])
);
conv2d #("weight/max_polling/26_47.txt", 2, 0, 31, 31) conv2d_26_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_26_addbus_[47])
);
conv2d #("weight/max_polling/26_48.txt", 2, 0, 31, 31) conv2d_26_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_26_addbus_[48])
);
conv2d #("weight/max_polling/26_49.txt", 2, 0, 31, 31) conv2d_26_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_26_addbus_[49])
);
conv2d #("weight/max_polling/26_50.txt", 2, 0, 31, 31) conv2d_26_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_26_addbus_[50])
);
conv2d #("weight/max_polling/26_51.txt", 2, 0, 31, 31) conv2d_26_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_26_addbus_[51])
);
conv2d #("weight/max_polling/26_52.txt", 2, 0, 31, 31) conv2d_26_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_26_addbus_[52])
);
conv2d #("weight/max_polling/26_53.txt", 2, 0, 31, 31) conv2d_26_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_26_addbus_[53])
);
conv2d #("weight/max_polling/26_54.txt", 2, 0, 31, 31) conv2d_26_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_26_addbus_[54])
);
conv2d #("weight/max_polling/26_55.txt", 2, 0, 31, 31) conv2d_26_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_26_addbus_[55])
);
conv2d #("weight/max_polling/26_56.txt", 2, 0, 31, 31) conv2d_26_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_26_addbus_[56])
);
conv2d #("weight/max_polling/26_57.txt", 2, 0, 31, 31) conv2d_26_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_26_addbus_[57])
);
conv2d #("weight/max_polling/26_58.txt", 2, 0, 31, 31) conv2d_26_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_26_addbus_[58])
);
conv2d #("weight/max_polling/26_59.txt", 2, 0, 31, 31) conv2d_26_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_26_addbus_[59])
);
conv2d #("weight/max_polling/26_60.txt", 2, 0, 31, 31) conv2d_26_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_26_addbus_[60])
);
conv2d #("weight/max_polling/26_61.txt", 2, 0, 31, 31) conv2d_26_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_26_addbus_[61])
);
conv2d #("weight/max_polling/26_62.txt", 2, 0, 31, 31) conv2d_26_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_26_addbus_[62])
);
conv2d #("weight/max_polling/26_63.txt", 2, 0, 31, 31) conv2d_26_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_26_addbus_[63])
);
sum_64 #(15) sum_26( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[26]), 
        .data_in_0(_26_addbus_[0]), 
        .data_in_1(_26_addbus_[1]), 
        .data_in_2(_26_addbus_[2]), 
        .data_in_3(_26_addbus_[3]), 
        .data_in_4(_26_addbus_[4]), 
        .data_in_5(_26_addbus_[5]), 
        .data_in_6(_26_addbus_[6]), 
        .data_in_7(_26_addbus_[7]), 
        .data_in_8(_26_addbus_[8]), 
        .data_in_9(_26_addbus_[9]), 
        .data_in_10(_26_addbus_[10]), 
        .data_in_11(_26_addbus_[11]), 
        .data_in_12(_26_addbus_[12]), 
        .data_in_13(_26_addbus_[13]), 
        .data_in_14(_26_addbus_[14]), 
        .data_in_15(_26_addbus_[15]), 
        .data_in_16(_26_addbus_[16]), 
        .data_in_17(_26_addbus_[17]), 
        .data_in_18(_26_addbus_[18]), 
        .data_in_19(_26_addbus_[19]), 
        .data_in_20(_26_addbus_[20]), 
        .data_in_21(_26_addbus_[21]), 
        .data_in_22(_26_addbus_[22]), 
        .data_in_23(_26_addbus_[23]), 
        .data_in_24(_26_addbus_[24]), 
        .data_in_25(_26_addbus_[25]), 
        .data_in_26(_26_addbus_[26]), 
        .data_in_27(_26_addbus_[27]), 
        .data_in_28(_26_addbus_[28]), 
        .data_in_29(_26_addbus_[29]), 
        .data_in_30(_26_addbus_[30]), 
        .data_in_31(_26_addbus_[31]), 
        .data_in_32(_26_addbus_[32]), 
        .data_in_33(_26_addbus_[33]), 
        .data_in_34(_26_addbus_[34]), 
        .data_in_35(_26_addbus_[35]), 
        .data_in_36(_26_addbus_[36]), 
        .data_in_37(_26_addbus_[37]), 
        .data_in_38(_26_addbus_[38]), 
        .data_in_39(_26_addbus_[39]), 
        .data_in_40(_26_addbus_[40]), 
        .data_in_41(_26_addbus_[41]), 
        .data_in_42(_26_addbus_[42]), 
        .data_in_43(_26_addbus_[43]), 
        .data_in_44(_26_addbus_[44]), 
        .data_in_45(_26_addbus_[45]), 
        .data_in_46(_26_addbus_[46]), 
        .data_in_47(_26_addbus_[47]), 
        .data_in_48(_26_addbus_[48]), 
        .data_in_49(_26_addbus_[49]), 
        .data_in_50(_26_addbus_[50]), 
        .data_in_51(_26_addbus_[51]), 
        .data_in_52(_26_addbus_[52]), 
        .data_in_53(_26_addbus_[53]), 
        .data_in_54(_26_addbus_[54]), 
        .data_in_55(_26_addbus_[55]), 
        .data_in_56(_26_addbus_[56]), 
        .data_in_57(_26_addbus_[57]), 
        .data_in_58(_26_addbus_[58]), 
        .data_in_59(_26_addbus_[59]), 
        .data_in_60(_26_addbus_[60]), 
        .data_in_61(_26_addbus_[61]), 
        .data_in_62(_26_addbus_[62]), 
        .data_in_63(_26_addbus_[63]) 
); 
wire [31:0] _27_addbus_[63:0];    
conv2d #("weight/max_polling/27_0.txt", 2, 0, 31, 31) conv2d_27_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_27_addbus_[0])
);
conv2d #("weight/max_polling/27_1.txt", 2, 0, 31, 31) conv2d_27_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_27_addbus_[1])
);
conv2d #("weight/max_polling/27_2.txt", 2, 0, 31, 31) conv2d_27_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_27_addbus_[2])
);
conv2d #("weight/max_polling/27_3.txt", 2, 0, 31, 31) conv2d_27_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_27_addbus_[3])
);
conv2d #("weight/max_polling/27_4.txt", 2, 0, 31, 31) conv2d_27_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_27_addbus_[4])
);
conv2d #("weight/max_polling/27_5.txt", 2, 0, 31, 31) conv2d_27_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_27_addbus_[5])
);
conv2d #("weight/max_polling/27_6.txt", 2, 0, 31, 31) conv2d_27_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_27_addbus_[6])
);
conv2d #("weight/max_polling/27_7.txt", 2, 0, 31, 31) conv2d_27_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_27_addbus_[7])
);
conv2d #("weight/max_polling/27_8.txt", 2, 0, 31, 31) conv2d_27_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_27_addbus_[8])
);
conv2d #("weight/max_polling/27_9.txt", 2, 0, 31, 31) conv2d_27_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_27_addbus_[9])
);
conv2d #("weight/max_polling/27_10.txt", 2, 0, 31, 31) conv2d_27_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_27_addbus_[10])
);
conv2d #("weight/max_polling/27_11.txt", 2, 0, 31, 31) conv2d_27_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_27_addbus_[11])
);
conv2d #("weight/max_polling/27_12.txt", 2, 0, 31, 31) conv2d_27_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_27_addbus_[12])
);
conv2d #("weight/max_polling/27_13.txt", 2, 0, 31, 31) conv2d_27_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_27_addbus_[13])
);
conv2d #("weight/max_polling/27_14.txt", 2, 0, 31, 31) conv2d_27_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_27_addbus_[14])
);
conv2d #("weight/max_polling/27_15.txt", 2, 0, 31, 31) conv2d_27_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_27_addbus_[15])
);
conv2d #("weight/max_polling/27_16.txt", 2, 0, 31, 31) conv2d_27_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_27_addbus_[16])
);
conv2d #("weight/max_polling/27_17.txt", 2, 0, 31, 31) conv2d_27_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_27_addbus_[17])
);
conv2d #("weight/max_polling/27_18.txt", 2, 0, 31, 31) conv2d_27_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_27_addbus_[18])
);
conv2d #("weight/max_polling/27_19.txt", 2, 0, 31, 31) conv2d_27_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_27_addbus_[19])
);
conv2d #("weight/max_polling/27_20.txt", 2, 0, 31, 31) conv2d_27_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_27_addbus_[20])
);
conv2d #("weight/max_polling/27_21.txt", 2, 0, 31, 31) conv2d_27_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_27_addbus_[21])
);
conv2d #("weight/max_polling/27_22.txt", 2, 0, 31, 31) conv2d_27_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_27_addbus_[22])
);
conv2d #("weight/max_polling/27_23.txt", 2, 0, 31, 31) conv2d_27_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_27_addbus_[23])
);
conv2d #("weight/max_polling/27_24.txt", 2, 0, 31, 31) conv2d_27_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_27_addbus_[24])
);
conv2d #("weight/max_polling/27_25.txt", 2, 0, 31, 31) conv2d_27_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_27_addbus_[25])
);
conv2d #("weight/max_polling/27_26.txt", 2, 0, 31, 31) conv2d_27_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_27_addbus_[26])
);
conv2d #("weight/max_polling/27_27.txt", 2, 0, 31, 31) conv2d_27_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_27_addbus_[27])
);
conv2d #("weight/max_polling/27_28.txt", 2, 0, 31, 31) conv2d_27_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_27_addbus_[28])
);
conv2d #("weight/max_polling/27_29.txt", 2, 0, 31, 31) conv2d_27_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_27_addbus_[29])
);
conv2d #("weight/max_polling/27_30.txt", 2, 0, 31, 31) conv2d_27_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_27_addbus_[30])
);
conv2d #("weight/max_polling/27_31.txt", 2, 0, 31, 31) conv2d_27_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_27_addbus_[31])
);
conv2d #("weight/max_polling/27_32.txt", 2, 0, 31, 31) conv2d_27_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_27_addbus_[32])
);
conv2d #("weight/max_polling/27_33.txt", 2, 0, 31, 31) conv2d_27_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_27_addbus_[33])
);
conv2d #("weight/max_polling/27_34.txt", 2, 0, 31, 31) conv2d_27_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_27_addbus_[34])
);
conv2d #("weight/max_polling/27_35.txt", 2, 0, 31, 31) conv2d_27_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_27_addbus_[35])
);
conv2d #("weight/max_polling/27_36.txt", 2, 0, 31, 31) conv2d_27_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_27_addbus_[36])
);
conv2d #("weight/max_polling/27_37.txt", 2, 0, 31, 31) conv2d_27_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_27_addbus_[37])
);
conv2d #("weight/max_polling/27_38.txt", 2, 0, 31, 31) conv2d_27_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_27_addbus_[38])
);
conv2d #("weight/max_polling/27_39.txt", 2, 0, 31, 31) conv2d_27_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_27_addbus_[39])
);
conv2d #("weight/max_polling/27_40.txt", 2, 0, 31, 31) conv2d_27_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_27_addbus_[40])
);
conv2d #("weight/max_polling/27_41.txt", 2, 0, 31, 31) conv2d_27_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_27_addbus_[41])
);
conv2d #("weight/max_polling/27_42.txt", 2, 0, 31, 31) conv2d_27_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_27_addbus_[42])
);
conv2d #("weight/max_polling/27_43.txt", 2, 0, 31, 31) conv2d_27_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_27_addbus_[43])
);
conv2d #("weight/max_polling/27_44.txt", 2, 0, 31, 31) conv2d_27_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_27_addbus_[44])
);
conv2d #("weight/max_polling/27_45.txt", 2, 0, 31, 31) conv2d_27_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_27_addbus_[45])
);
conv2d #("weight/max_polling/27_46.txt", 2, 0, 31, 31) conv2d_27_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_27_addbus_[46])
);
conv2d #("weight/max_polling/27_47.txt", 2, 0, 31, 31) conv2d_27_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_27_addbus_[47])
);
conv2d #("weight/max_polling/27_48.txt", 2, 0, 31, 31) conv2d_27_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_27_addbus_[48])
);
conv2d #("weight/max_polling/27_49.txt", 2, 0, 31, 31) conv2d_27_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_27_addbus_[49])
);
conv2d #("weight/max_polling/27_50.txt", 2, 0, 31, 31) conv2d_27_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_27_addbus_[50])
);
conv2d #("weight/max_polling/27_51.txt", 2, 0, 31, 31) conv2d_27_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_27_addbus_[51])
);
conv2d #("weight/max_polling/27_52.txt", 2, 0, 31, 31) conv2d_27_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_27_addbus_[52])
);
conv2d #("weight/max_polling/27_53.txt", 2, 0, 31, 31) conv2d_27_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_27_addbus_[53])
);
conv2d #("weight/max_polling/27_54.txt", 2, 0, 31, 31) conv2d_27_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_27_addbus_[54])
);
conv2d #("weight/max_polling/27_55.txt", 2, 0, 31, 31) conv2d_27_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_27_addbus_[55])
);
conv2d #("weight/max_polling/27_56.txt", 2, 0, 31, 31) conv2d_27_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_27_addbus_[56])
);
conv2d #("weight/max_polling/27_57.txt", 2, 0, 31, 31) conv2d_27_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_27_addbus_[57])
);
conv2d #("weight/max_polling/27_58.txt", 2, 0, 31, 31) conv2d_27_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_27_addbus_[58])
);
conv2d #("weight/max_polling/27_59.txt", 2, 0, 31, 31) conv2d_27_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_27_addbus_[59])
);
conv2d #("weight/max_polling/27_60.txt", 2, 0, 31, 31) conv2d_27_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_27_addbus_[60])
);
conv2d #("weight/max_polling/27_61.txt", 2, 0, 31, 31) conv2d_27_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_27_addbus_[61])
);
conv2d #("weight/max_polling/27_62.txt", 2, 0, 31, 31) conv2d_27_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_27_addbus_[62])
);
conv2d #("weight/max_polling/27_63.txt", 2, 0, 31, 31) conv2d_27_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_27_addbus_[63])
);
sum_64 #(15) sum_27( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[27]), 
        .data_in_0(_27_addbus_[0]), 
        .data_in_1(_27_addbus_[1]), 
        .data_in_2(_27_addbus_[2]), 
        .data_in_3(_27_addbus_[3]), 
        .data_in_4(_27_addbus_[4]), 
        .data_in_5(_27_addbus_[5]), 
        .data_in_6(_27_addbus_[6]), 
        .data_in_7(_27_addbus_[7]), 
        .data_in_8(_27_addbus_[8]), 
        .data_in_9(_27_addbus_[9]), 
        .data_in_10(_27_addbus_[10]), 
        .data_in_11(_27_addbus_[11]), 
        .data_in_12(_27_addbus_[12]), 
        .data_in_13(_27_addbus_[13]), 
        .data_in_14(_27_addbus_[14]), 
        .data_in_15(_27_addbus_[15]), 
        .data_in_16(_27_addbus_[16]), 
        .data_in_17(_27_addbus_[17]), 
        .data_in_18(_27_addbus_[18]), 
        .data_in_19(_27_addbus_[19]), 
        .data_in_20(_27_addbus_[20]), 
        .data_in_21(_27_addbus_[21]), 
        .data_in_22(_27_addbus_[22]), 
        .data_in_23(_27_addbus_[23]), 
        .data_in_24(_27_addbus_[24]), 
        .data_in_25(_27_addbus_[25]), 
        .data_in_26(_27_addbus_[26]), 
        .data_in_27(_27_addbus_[27]), 
        .data_in_28(_27_addbus_[28]), 
        .data_in_29(_27_addbus_[29]), 
        .data_in_30(_27_addbus_[30]), 
        .data_in_31(_27_addbus_[31]), 
        .data_in_32(_27_addbus_[32]), 
        .data_in_33(_27_addbus_[33]), 
        .data_in_34(_27_addbus_[34]), 
        .data_in_35(_27_addbus_[35]), 
        .data_in_36(_27_addbus_[36]), 
        .data_in_37(_27_addbus_[37]), 
        .data_in_38(_27_addbus_[38]), 
        .data_in_39(_27_addbus_[39]), 
        .data_in_40(_27_addbus_[40]), 
        .data_in_41(_27_addbus_[41]), 
        .data_in_42(_27_addbus_[42]), 
        .data_in_43(_27_addbus_[43]), 
        .data_in_44(_27_addbus_[44]), 
        .data_in_45(_27_addbus_[45]), 
        .data_in_46(_27_addbus_[46]), 
        .data_in_47(_27_addbus_[47]), 
        .data_in_48(_27_addbus_[48]), 
        .data_in_49(_27_addbus_[49]), 
        .data_in_50(_27_addbus_[50]), 
        .data_in_51(_27_addbus_[51]), 
        .data_in_52(_27_addbus_[52]), 
        .data_in_53(_27_addbus_[53]), 
        .data_in_54(_27_addbus_[54]), 
        .data_in_55(_27_addbus_[55]), 
        .data_in_56(_27_addbus_[56]), 
        .data_in_57(_27_addbus_[57]), 
        .data_in_58(_27_addbus_[58]), 
        .data_in_59(_27_addbus_[59]), 
        .data_in_60(_27_addbus_[60]), 
        .data_in_61(_27_addbus_[61]), 
        .data_in_62(_27_addbus_[62]), 
        .data_in_63(_27_addbus_[63]) 
); 
wire [31:0] _28_addbus_[63:0];    
conv2d #("weight/max_polling/28_0.txt", 2, 0, 31, 31) conv2d_28_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_28_addbus_[0])
);
conv2d #("weight/max_polling/28_1.txt", 2, 0, 31, 31) conv2d_28_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_28_addbus_[1])
);
conv2d #("weight/max_polling/28_2.txt", 2, 0, 31, 31) conv2d_28_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_28_addbus_[2])
);
conv2d #("weight/max_polling/28_3.txt", 2, 0, 31, 31) conv2d_28_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_28_addbus_[3])
);
conv2d #("weight/max_polling/28_4.txt", 2, 0, 31, 31) conv2d_28_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_28_addbus_[4])
);
conv2d #("weight/max_polling/28_5.txt", 2, 0, 31, 31) conv2d_28_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_28_addbus_[5])
);
conv2d #("weight/max_polling/28_6.txt", 2, 0, 31, 31) conv2d_28_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_28_addbus_[6])
);
conv2d #("weight/max_polling/28_7.txt", 2, 0, 31, 31) conv2d_28_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_28_addbus_[7])
);
conv2d #("weight/max_polling/28_8.txt", 2, 0, 31, 31) conv2d_28_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_28_addbus_[8])
);
conv2d #("weight/max_polling/28_9.txt", 2, 0, 31, 31) conv2d_28_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_28_addbus_[9])
);
conv2d #("weight/max_polling/28_10.txt", 2, 0, 31, 31) conv2d_28_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_28_addbus_[10])
);
conv2d #("weight/max_polling/28_11.txt", 2, 0, 31, 31) conv2d_28_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_28_addbus_[11])
);
conv2d #("weight/max_polling/28_12.txt", 2, 0, 31, 31) conv2d_28_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_28_addbus_[12])
);
conv2d #("weight/max_polling/28_13.txt", 2, 0, 31, 31) conv2d_28_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_28_addbus_[13])
);
conv2d #("weight/max_polling/28_14.txt", 2, 0, 31, 31) conv2d_28_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_28_addbus_[14])
);
conv2d #("weight/max_polling/28_15.txt", 2, 0, 31, 31) conv2d_28_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_28_addbus_[15])
);
conv2d #("weight/max_polling/28_16.txt", 2, 0, 31, 31) conv2d_28_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_28_addbus_[16])
);
conv2d #("weight/max_polling/28_17.txt", 2, 0, 31, 31) conv2d_28_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_28_addbus_[17])
);
conv2d #("weight/max_polling/28_18.txt", 2, 0, 31, 31) conv2d_28_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_28_addbus_[18])
);
conv2d #("weight/max_polling/28_19.txt", 2, 0, 31, 31) conv2d_28_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_28_addbus_[19])
);
conv2d #("weight/max_polling/28_20.txt", 2, 0, 31, 31) conv2d_28_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_28_addbus_[20])
);
conv2d #("weight/max_polling/28_21.txt", 2, 0, 31, 31) conv2d_28_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_28_addbus_[21])
);
conv2d #("weight/max_polling/28_22.txt", 2, 0, 31, 31) conv2d_28_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_28_addbus_[22])
);
conv2d #("weight/max_polling/28_23.txt", 2, 0, 31, 31) conv2d_28_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_28_addbus_[23])
);
conv2d #("weight/max_polling/28_24.txt", 2, 0, 31, 31) conv2d_28_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_28_addbus_[24])
);
conv2d #("weight/max_polling/28_25.txt", 2, 0, 31, 31) conv2d_28_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_28_addbus_[25])
);
conv2d #("weight/max_polling/28_26.txt", 2, 0, 31, 31) conv2d_28_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_28_addbus_[26])
);
conv2d #("weight/max_polling/28_27.txt", 2, 0, 31, 31) conv2d_28_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_28_addbus_[27])
);
conv2d #("weight/max_polling/28_28.txt", 2, 0, 31, 31) conv2d_28_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_28_addbus_[28])
);
conv2d #("weight/max_polling/28_29.txt", 2, 0, 31, 31) conv2d_28_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_28_addbus_[29])
);
conv2d #("weight/max_polling/28_30.txt", 2, 0, 31, 31) conv2d_28_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_28_addbus_[30])
);
conv2d #("weight/max_polling/28_31.txt", 2, 0, 31, 31) conv2d_28_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_28_addbus_[31])
);
conv2d #("weight/max_polling/28_32.txt", 2, 0, 31, 31) conv2d_28_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_28_addbus_[32])
);
conv2d #("weight/max_polling/28_33.txt", 2, 0, 31, 31) conv2d_28_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_28_addbus_[33])
);
conv2d #("weight/max_polling/28_34.txt", 2, 0, 31, 31) conv2d_28_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_28_addbus_[34])
);
conv2d #("weight/max_polling/28_35.txt", 2, 0, 31, 31) conv2d_28_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_28_addbus_[35])
);
conv2d #("weight/max_polling/28_36.txt", 2, 0, 31, 31) conv2d_28_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_28_addbus_[36])
);
conv2d #("weight/max_polling/28_37.txt", 2, 0, 31, 31) conv2d_28_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_28_addbus_[37])
);
conv2d #("weight/max_polling/28_38.txt", 2, 0, 31, 31) conv2d_28_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_28_addbus_[38])
);
conv2d #("weight/max_polling/28_39.txt", 2, 0, 31, 31) conv2d_28_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_28_addbus_[39])
);
conv2d #("weight/max_polling/28_40.txt", 2, 0, 31, 31) conv2d_28_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_28_addbus_[40])
);
conv2d #("weight/max_polling/28_41.txt", 2, 0, 31, 31) conv2d_28_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_28_addbus_[41])
);
conv2d #("weight/max_polling/28_42.txt", 2, 0, 31, 31) conv2d_28_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_28_addbus_[42])
);
conv2d #("weight/max_polling/28_43.txt", 2, 0, 31, 31) conv2d_28_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_28_addbus_[43])
);
conv2d #("weight/max_polling/28_44.txt", 2, 0, 31, 31) conv2d_28_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_28_addbus_[44])
);
conv2d #("weight/max_polling/28_45.txt", 2, 0, 31, 31) conv2d_28_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_28_addbus_[45])
);
conv2d #("weight/max_polling/28_46.txt", 2, 0, 31, 31) conv2d_28_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_28_addbus_[46])
);
conv2d #("weight/max_polling/28_47.txt", 2, 0, 31, 31) conv2d_28_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_28_addbus_[47])
);
conv2d #("weight/max_polling/28_48.txt", 2, 0, 31, 31) conv2d_28_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_28_addbus_[48])
);
conv2d #("weight/max_polling/28_49.txt", 2, 0, 31, 31) conv2d_28_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_28_addbus_[49])
);
conv2d #("weight/max_polling/28_50.txt", 2, 0, 31, 31) conv2d_28_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_28_addbus_[50])
);
conv2d #("weight/max_polling/28_51.txt", 2, 0, 31, 31) conv2d_28_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_28_addbus_[51])
);
conv2d #("weight/max_polling/28_52.txt", 2, 0, 31, 31) conv2d_28_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_28_addbus_[52])
);
conv2d #("weight/max_polling/28_53.txt", 2, 0, 31, 31) conv2d_28_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_28_addbus_[53])
);
conv2d #("weight/max_polling/28_54.txt", 2, 0, 31, 31) conv2d_28_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_28_addbus_[54])
);
conv2d #("weight/max_polling/28_55.txt", 2, 0, 31, 31) conv2d_28_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_28_addbus_[55])
);
conv2d #("weight/max_polling/28_56.txt", 2, 0, 31, 31) conv2d_28_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_28_addbus_[56])
);
conv2d #("weight/max_polling/28_57.txt", 2, 0, 31, 31) conv2d_28_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_28_addbus_[57])
);
conv2d #("weight/max_polling/28_58.txt", 2, 0, 31, 31) conv2d_28_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_28_addbus_[58])
);
conv2d #("weight/max_polling/28_59.txt", 2, 0, 31, 31) conv2d_28_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_28_addbus_[59])
);
conv2d #("weight/max_polling/28_60.txt", 2, 0, 31, 31) conv2d_28_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_28_addbus_[60])
);
conv2d #("weight/max_polling/28_61.txt", 2, 0, 31, 31) conv2d_28_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_28_addbus_[61])
);
conv2d #("weight/max_polling/28_62.txt", 2, 0, 31, 31) conv2d_28_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_28_addbus_[62])
);
conv2d #("weight/max_polling/28_63.txt", 2, 0, 31, 31) conv2d_28_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_28_addbus_[63])
);
sum_64 #(15) sum_28( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[28]), 
        .data_in_0(_28_addbus_[0]), 
        .data_in_1(_28_addbus_[1]), 
        .data_in_2(_28_addbus_[2]), 
        .data_in_3(_28_addbus_[3]), 
        .data_in_4(_28_addbus_[4]), 
        .data_in_5(_28_addbus_[5]), 
        .data_in_6(_28_addbus_[6]), 
        .data_in_7(_28_addbus_[7]), 
        .data_in_8(_28_addbus_[8]), 
        .data_in_9(_28_addbus_[9]), 
        .data_in_10(_28_addbus_[10]), 
        .data_in_11(_28_addbus_[11]), 
        .data_in_12(_28_addbus_[12]), 
        .data_in_13(_28_addbus_[13]), 
        .data_in_14(_28_addbus_[14]), 
        .data_in_15(_28_addbus_[15]), 
        .data_in_16(_28_addbus_[16]), 
        .data_in_17(_28_addbus_[17]), 
        .data_in_18(_28_addbus_[18]), 
        .data_in_19(_28_addbus_[19]), 
        .data_in_20(_28_addbus_[20]), 
        .data_in_21(_28_addbus_[21]), 
        .data_in_22(_28_addbus_[22]), 
        .data_in_23(_28_addbus_[23]), 
        .data_in_24(_28_addbus_[24]), 
        .data_in_25(_28_addbus_[25]), 
        .data_in_26(_28_addbus_[26]), 
        .data_in_27(_28_addbus_[27]), 
        .data_in_28(_28_addbus_[28]), 
        .data_in_29(_28_addbus_[29]), 
        .data_in_30(_28_addbus_[30]), 
        .data_in_31(_28_addbus_[31]), 
        .data_in_32(_28_addbus_[32]), 
        .data_in_33(_28_addbus_[33]), 
        .data_in_34(_28_addbus_[34]), 
        .data_in_35(_28_addbus_[35]), 
        .data_in_36(_28_addbus_[36]), 
        .data_in_37(_28_addbus_[37]), 
        .data_in_38(_28_addbus_[38]), 
        .data_in_39(_28_addbus_[39]), 
        .data_in_40(_28_addbus_[40]), 
        .data_in_41(_28_addbus_[41]), 
        .data_in_42(_28_addbus_[42]), 
        .data_in_43(_28_addbus_[43]), 
        .data_in_44(_28_addbus_[44]), 
        .data_in_45(_28_addbus_[45]), 
        .data_in_46(_28_addbus_[46]), 
        .data_in_47(_28_addbus_[47]), 
        .data_in_48(_28_addbus_[48]), 
        .data_in_49(_28_addbus_[49]), 
        .data_in_50(_28_addbus_[50]), 
        .data_in_51(_28_addbus_[51]), 
        .data_in_52(_28_addbus_[52]), 
        .data_in_53(_28_addbus_[53]), 
        .data_in_54(_28_addbus_[54]), 
        .data_in_55(_28_addbus_[55]), 
        .data_in_56(_28_addbus_[56]), 
        .data_in_57(_28_addbus_[57]), 
        .data_in_58(_28_addbus_[58]), 
        .data_in_59(_28_addbus_[59]), 
        .data_in_60(_28_addbus_[60]), 
        .data_in_61(_28_addbus_[61]), 
        .data_in_62(_28_addbus_[62]), 
        .data_in_63(_28_addbus_[63]) 
); 
wire [31:0] _29_addbus_[63:0];    
conv2d #("weight/max_polling/29_0.txt", 2, 0, 31, 31) conv2d_29_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_29_addbus_[0])
);
conv2d #("weight/max_polling/29_1.txt", 2, 0, 31, 31) conv2d_29_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_29_addbus_[1])
);
conv2d #("weight/max_polling/29_2.txt", 2, 0, 31, 31) conv2d_29_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_29_addbus_[2])
);
conv2d #("weight/max_polling/29_3.txt", 2, 0, 31, 31) conv2d_29_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_29_addbus_[3])
);
conv2d #("weight/max_polling/29_4.txt", 2, 0, 31, 31) conv2d_29_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_29_addbus_[4])
);
conv2d #("weight/max_polling/29_5.txt", 2, 0, 31, 31) conv2d_29_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_29_addbus_[5])
);
conv2d #("weight/max_polling/29_6.txt", 2, 0, 31, 31) conv2d_29_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_29_addbus_[6])
);
conv2d #("weight/max_polling/29_7.txt", 2, 0, 31, 31) conv2d_29_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_29_addbus_[7])
);
conv2d #("weight/max_polling/29_8.txt", 2, 0, 31, 31) conv2d_29_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_29_addbus_[8])
);
conv2d #("weight/max_polling/29_9.txt", 2, 0, 31, 31) conv2d_29_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_29_addbus_[9])
);
conv2d #("weight/max_polling/29_10.txt", 2, 0, 31, 31) conv2d_29_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_29_addbus_[10])
);
conv2d #("weight/max_polling/29_11.txt", 2, 0, 31, 31) conv2d_29_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_29_addbus_[11])
);
conv2d #("weight/max_polling/29_12.txt", 2, 0, 31, 31) conv2d_29_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_29_addbus_[12])
);
conv2d #("weight/max_polling/29_13.txt", 2, 0, 31, 31) conv2d_29_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_29_addbus_[13])
);
conv2d #("weight/max_polling/29_14.txt", 2, 0, 31, 31) conv2d_29_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_29_addbus_[14])
);
conv2d #("weight/max_polling/29_15.txt", 2, 0, 31, 31) conv2d_29_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_29_addbus_[15])
);
conv2d #("weight/max_polling/29_16.txt", 2, 0, 31, 31) conv2d_29_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_29_addbus_[16])
);
conv2d #("weight/max_polling/29_17.txt", 2, 0, 31, 31) conv2d_29_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_29_addbus_[17])
);
conv2d #("weight/max_polling/29_18.txt", 2, 0, 31, 31) conv2d_29_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_29_addbus_[18])
);
conv2d #("weight/max_polling/29_19.txt", 2, 0, 31, 31) conv2d_29_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_29_addbus_[19])
);
conv2d #("weight/max_polling/29_20.txt", 2, 0, 31, 31) conv2d_29_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_29_addbus_[20])
);
conv2d #("weight/max_polling/29_21.txt", 2, 0, 31, 31) conv2d_29_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_29_addbus_[21])
);
conv2d #("weight/max_polling/29_22.txt", 2, 0, 31, 31) conv2d_29_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_29_addbus_[22])
);
conv2d #("weight/max_polling/29_23.txt", 2, 0, 31, 31) conv2d_29_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_29_addbus_[23])
);
conv2d #("weight/max_polling/29_24.txt", 2, 0, 31, 31) conv2d_29_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_29_addbus_[24])
);
conv2d #("weight/max_polling/29_25.txt", 2, 0, 31, 31) conv2d_29_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_29_addbus_[25])
);
conv2d #("weight/max_polling/29_26.txt", 2, 0, 31, 31) conv2d_29_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_29_addbus_[26])
);
conv2d #("weight/max_polling/29_27.txt", 2, 0, 31, 31) conv2d_29_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_29_addbus_[27])
);
conv2d #("weight/max_polling/29_28.txt", 2, 0, 31, 31) conv2d_29_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_29_addbus_[28])
);
conv2d #("weight/max_polling/29_29.txt", 2, 0, 31, 31) conv2d_29_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_29_addbus_[29])
);
conv2d #("weight/max_polling/29_30.txt", 2, 0, 31, 31) conv2d_29_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_29_addbus_[30])
);
conv2d #("weight/max_polling/29_31.txt", 2, 0, 31, 31) conv2d_29_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_29_addbus_[31])
);
conv2d #("weight/max_polling/29_32.txt", 2, 0, 31, 31) conv2d_29_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_29_addbus_[32])
);
conv2d #("weight/max_polling/29_33.txt", 2, 0, 31, 31) conv2d_29_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_29_addbus_[33])
);
conv2d #("weight/max_polling/29_34.txt", 2, 0, 31, 31) conv2d_29_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_29_addbus_[34])
);
conv2d #("weight/max_polling/29_35.txt", 2, 0, 31, 31) conv2d_29_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_29_addbus_[35])
);
conv2d #("weight/max_polling/29_36.txt", 2, 0, 31, 31) conv2d_29_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_29_addbus_[36])
);
conv2d #("weight/max_polling/29_37.txt", 2, 0, 31, 31) conv2d_29_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_29_addbus_[37])
);
conv2d #("weight/max_polling/29_38.txt", 2, 0, 31, 31) conv2d_29_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_29_addbus_[38])
);
conv2d #("weight/max_polling/29_39.txt", 2, 0, 31, 31) conv2d_29_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_29_addbus_[39])
);
conv2d #("weight/max_polling/29_40.txt", 2, 0, 31, 31) conv2d_29_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_29_addbus_[40])
);
conv2d #("weight/max_polling/29_41.txt", 2, 0, 31, 31) conv2d_29_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_29_addbus_[41])
);
conv2d #("weight/max_polling/29_42.txt", 2, 0, 31, 31) conv2d_29_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_29_addbus_[42])
);
conv2d #("weight/max_polling/29_43.txt", 2, 0, 31, 31) conv2d_29_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_29_addbus_[43])
);
conv2d #("weight/max_polling/29_44.txt", 2, 0, 31, 31) conv2d_29_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_29_addbus_[44])
);
conv2d #("weight/max_polling/29_45.txt", 2, 0, 31, 31) conv2d_29_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_29_addbus_[45])
);
conv2d #("weight/max_polling/29_46.txt", 2, 0, 31, 31) conv2d_29_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_29_addbus_[46])
);
conv2d #("weight/max_polling/29_47.txt", 2, 0, 31, 31) conv2d_29_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_29_addbus_[47])
);
conv2d #("weight/max_polling/29_48.txt", 2, 0, 31, 31) conv2d_29_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_29_addbus_[48])
);
conv2d #("weight/max_polling/29_49.txt", 2, 0, 31, 31) conv2d_29_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_29_addbus_[49])
);
conv2d #("weight/max_polling/29_50.txt", 2, 0, 31, 31) conv2d_29_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_29_addbus_[50])
);
conv2d #("weight/max_polling/29_51.txt", 2, 0, 31, 31) conv2d_29_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_29_addbus_[51])
);
conv2d #("weight/max_polling/29_52.txt", 2, 0, 31, 31) conv2d_29_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_29_addbus_[52])
);
conv2d #("weight/max_polling/29_53.txt", 2, 0, 31, 31) conv2d_29_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_29_addbus_[53])
);
conv2d #("weight/max_polling/29_54.txt", 2, 0, 31, 31) conv2d_29_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_29_addbus_[54])
);
conv2d #("weight/max_polling/29_55.txt", 2, 0, 31, 31) conv2d_29_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_29_addbus_[55])
);
conv2d #("weight/max_polling/29_56.txt", 2, 0, 31, 31) conv2d_29_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_29_addbus_[56])
);
conv2d #("weight/max_polling/29_57.txt", 2, 0, 31, 31) conv2d_29_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_29_addbus_[57])
);
conv2d #("weight/max_polling/29_58.txt", 2, 0, 31, 31) conv2d_29_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_29_addbus_[58])
);
conv2d #("weight/max_polling/29_59.txt", 2, 0, 31, 31) conv2d_29_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_29_addbus_[59])
);
conv2d #("weight/max_polling/29_60.txt", 2, 0, 31, 31) conv2d_29_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_29_addbus_[60])
);
conv2d #("weight/max_polling/29_61.txt", 2, 0, 31, 31) conv2d_29_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_29_addbus_[61])
);
conv2d #("weight/max_polling/29_62.txt", 2, 0, 31, 31) conv2d_29_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_29_addbus_[62])
);
conv2d #("weight/max_polling/29_63.txt", 2, 0, 31, 31) conv2d_29_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_29_addbus_[63])
);
sum_64 #(15) sum_29( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[29]), 
        .data_in_0(_29_addbus_[0]), 
        .data_in_1(_29_addbus_[1]), 
        .data_in_2(_29_addbus_[2]), 
        .data_in_3(_29_addbus_[3]), 
        .data_in_4(_29_addbus_[4]), 
        .data_in_5(_29_addbus_[5]), 
        .data_in_6(_29_addbus_[6]), 
        .data_in_7(_29_addbus_[7]), 
        .data_in_8(_29_addbus_[8]), 
        .data_in_9(_29_addbus_[9]), 
        .data_in_10(_29_addbus_[10]), 
        .data_in_11(_29_addbus_[11]), 
        .data_in_12(_29_addbus_[12]), 
        .data_in_13(_29_addbus_[13]), 
        .data_in_14(_29_addbus_[14]), 
        .data_in_15(_29_addbus_[15]), 
        .data_in_16(_29_addbus_[16]), 
        .data_in_17(_29_addbus_[17]), 
        .data_in_18(_29_addbus_[18]), 
        .data_in_19(_29_addbus_[19]), 
        .data_in_20(_29_addbus_[20]), 
        .data_in_21(_29_addbus_[21]), 
        .data_in_22(_29_addbus_[22]), 
        .data_in_23(_29_addbus_[23]), 
        .data_in_24(_29_addbus_[24]), 
        .data_in_25(_29_addbus_[25]), 
        .data_in_26(_29_addbus_[26]), 
        .data_in_27(_29_addbus_[27]), 
        .data_in_28(_29_addbus_[28]), 
        .data_in_29(_29_addbus_[29]), 
        .data_in_30(_29_addbus_[30]), 
        .data_in_31(_29_addbus_[31]), 
        .data_in_32(_29_addbus_[32]), 
        .data_in_33(_29_addbus_[33]), 
        .data_in_34(_29_addbus_[34]), 
        .data_in_35(_29_addbus_[35]), 
        .data_in_36(_29_addbus_[36]), 
        .data_in_37(_29_addbus_[37]), 
        .data_in_38(_29_addbus_[38]), 
        .data_in_39(_29_addbus_[39]), 
        .data_in_40(_29_addbus_[40]), 
        .data_in_41(_29_addbus_[41]), 
        .data_in_42(_29_addbus_[42]), 
        .data_in_43(_29_addbus_[43]), 
        .data_in_44(_29_addbus_[44]), 
        .data_in_45(_29_addbus_[45]), 
        .data_in_46(_29_addbus_[46]), 
        .data_in_47(_29_addbus_[47]), 
        .data_in_48(_29_addbus_[48]), 
        .data_in_49(_29_addbus_[49]), 
        .data_in_50(_29_addbus_[50]), 
        .data_in_51(_29_addbus_[51]), 
        .data_in_52(_29_addbus_[52]), 
        .data_in_53(_29_addbus_[53]), 
        .data_in_54(_29_addbus_[54]), 
        .data_in_55(_29_addbus_[55]), 
        .data_in_56(_29_addbus_[56]), 
        .data_in_57(_29_addbus_[57]), 
        .data_in_58(_29_addbus_[58]), 
        .data_in_59(_29_addbus_[59]), 
        .data_in_60(_29_addbus_[60]), 
        .data_in_61(_29_addbus_[61]), 
        .data_in_62(_29_addbus_[62]), 
        .data_in_63(_29_addbus_[63]) 
); 
wire [31:0] _30_addbus_[63:0];    
conv2d #("weight/max_polling/30_0.txt", 2, 0, 31, 31) conv2d_30_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_30_addbus_[0])
);
conv2d #("weight/max_polling/30_1.txt", 2, 0, 31, 31) conv2d_30_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_30_addbus_[1])
);
conv2d #("weight/max_polling/30_2.txt", 2, 0, 31, 31) conv2d_30_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_30_addbus_[2])
);
conv2d #("weight/max_polling/30_3.txt", 2, 0, 31, 31) conv2d_30_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_30_addbus_[3])
);
conv2d #("weight/max_polling/30_4.txt", 2, 0, 31, 31) conv2d_30_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_30_addbus_[4])
);
conv2d #("weight/max_polling/30_5.txt", 2, 0, 31, 31) conv2d_30_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_30_addbus_[5])
);
conv2d #("weight/max_polling/30_6.txt", 2, 0, 31, 31) conv2d_30_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_30_addbus_[6])
);
conv2d #("weight/max_polling/30_7.txt", 2, 0, 31, 31) conv2d_30_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_30_addbus_[7])
);
conv2d #("weight/max_polling/30_8.txt", 2, 0, 31, 31) conv2d_30_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_30_addbus_[8])
);
conv2d #("weight/max_polling/30_9.txt", 2, 0, 31, 31) conv2d_30_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_30_addbus_[9])
);
conv2d #("weight/max_polling/30_10.txt", 2, 0, 31, 31) conv2d_30_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_30_addbus_[10])
);
conv2d #("weight/max_polling/30_11.txt", 2, 0, 31, 31) conv2d_30_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_30_addbus_[11])
);
conv2d #("weight/max_polling/30_12.txt", 2, 0, 31, 31) conv2d_30_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_30_addbus_[12])
);
conv2d #("weight/max_polling/30_13.txt", 2, 0, 31, 31) conv2d_30_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_30_addbus_[13])
);
conv2d #("weight/max_polling/30_14.txt", 2, 0, 31, 31) conv2d_30_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_30_addbus_[14])
);
conv2d #("weight/max_polling/30_15.txt", 2, 0, 31, 31) conv2d_30_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_30_addbus_[15])
);
conv2d #("weight/max_polling/30_16.txt", 2, 0, 31, 31) conv2d_30_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_30_addbus_[16])
);
conv2d #("weight/max_polling/30_17.txt", 2, 0, 31, 31) conv2d_30_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_30_addbus_[17])
);
conv2d #("weight/max_polling/30_18.txt", 2, 0, 31, 31) conv2d_30_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_30_addbus_[18])
);
conv2d #("weight/max_polling/30_19.txt", 2, 0, 31, 31) conv2d_30_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_30_addbus_[19])
);
conv2d #("weight/max_polling/30_20.txt", 2, 0, 31, 31) conv2d_30_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_30_addbus_[20])
);
conv2d #("weight/max_polling/30_21.txt", 2, 0, 31, 31) conv2d_30_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_30_addbus_[21])
);
conv2d #("weight/max_polling/30_22.txt", 2, 0, 31, 31) conv2d_30_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_30_addbus_[22])
);
conv2d #("weight/max_polling/30_23.txt", 2, 0, 31, 31) conv2d_30_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_30_addbus_[23])
);
conv2d #("weight/max_polling/30_24.txt", 2, 0, 31, 31) conv2d_30_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_30_addbus_[24])
);
conv2d #("weight/max_polling/30_25.txt", 2, 0, 31, 31) conv2d_30_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_30_addbus_[25])
);
conv2d #("weight/max_polling/30_26.txt", 2, 0, 31, 31) conv2d_30_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_30_addbus_[26])
);
conv2d #("weight/max_polling/30_27.txt", 2, 0, 31, 31) conv2d_30_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_30_addbus_[27])
);
conv2d #("weight/max_polling/30_28.txt", 2, 0, 31, 31) conv2d_30_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_30_addbus_[28])
);
conv2d #("weight/max_polling/30_29.txt", 2, 0, 31, 31) conv2d_30_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_30_addbus_[29])
);
conv2d #("weight/max_polling/30_30.txt", 2, 0, 31, 31) conv2d_30_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_30_addbus_[30])
);
conv2d #("weight/max_polling/30_31.txt", 2, 0, 31, 31) conv2d_30_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_30_addbus_[31])
);
conv2d #("weight/max_polling/30_32.txt", 2, 0, 31, 31) conv2d_30_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_30_addbus_[32])
);
conv2d #("weight/max_polling/30_33.txt", 2, 0, 31, 31) conv2d_30_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_30_addbus_[33])
);
conv2d #("weight/max_polling/30_34.txt", 2, 0, 31, 31) conv2d_30_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_30_addbus_[34])
);
conv2d #("weight/max_polling/30_35.txt", 2, 0, 31, 31) conv2d_30_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_30_addbus_[35])
);
conv2d #("weight/max_polling/30_36.txt", 2, 0, 31, 31) conv2d_30_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_30_addbus_[36])
);
conv2d #("weight/max_polling/30_37.txt", 2, 0, 31, 31) conv2d_30_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_30_addbus_[37])
);
conv2d #("weight/max_polling/30_38.txt", 2, 0, 31, 31) conv2d_30_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_30_addbus_[38])
);
conv2d #("weight/max_polling/30_39.txt", 2, 0, 31, 31) conv2d_30_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_30_addbus_[39])
);
conv2d #("weight/max_polling/30_40.txt", 2, 0, 31, 31) conv2d_30_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_30_addbus_[40])
);
conv2d #("weight/max_polling/30_41.txt", 2, 0, 31, 31) conv2d_30_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_30_addbus_[41])
);
conv2d #("weight/max_polling/30_42.txt", 2, 0, 31, 31) conv2d_30_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_30_addbus_[42])
);
conv2d #("weight/max_polling/30_43.txt", 2, 0, 31, 31) conv2d_30_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_30_addbus_[43])
);
conv2d #("weight/max_polling/30_44.txt", 2, 0, 31, 31) conv2d_30_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_30_addbus_[44])
);
conv2d #("weight/max_polling/30_45.txt", 2, 0, 31, 31) conv2d_30_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_30_addbus_[45])
);
conv2d #("weight/max_polling/30_46.txt", 2, 0, 31, 31) conv2d_30_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_30_addbus_[46])
);
conv2d #("weight/max_polling/30_47.txt", 2, 0, 31, 31) conv2d_30_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_30_addbus_[47])
);
conv2d #("weight/max_polling/30_48.txt", 2, 0, 31, 31) conv2d_30_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_30_addbus_[48])
);
conv2d #("weight/max_polling/30_49.txt", 2, 0, 31, 31) conv2d_30_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_30_addbus_[49])
);
conv2d #("weight/max_polling/30_50.txt", 2, 0, 31, 31) conv2d_30_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_30_addbus_[50])
);
conv2d #("weight/max_polling/30_51.txt", 2, 0, 31, 31) conv2d_30_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_30_addbus_[51])
);
conv2d #("weight/max_polling/30_52.txt", 2, 0, 31, 31) conv2d_30_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_30_addbus_[52])
);
conv2d #("weight/max_polling/30_53.txt", 2, 0, 31, 31) conv2d_30_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_30_addbus_[53])
);
conv2d #("weight/max_polling/30_54.txt", 2, 0, 31, 31) conv2d_30_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_30_addbus_[54])
);
conv2d #("weight/max_polling/30_55.txt", 2, 0, 31, 31) conv2d_30_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_30_addbus_[55])
);
conv2d #("weight/max_polling/30_56.txt", 2, 0, 31, 31) conv2d_30_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_30_addbus_[56])
);
conv2d #("weight/max_polling/30_57.txt", 2, 0, 31, 31) conv2d_30_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_30_addbus_[57])
);
conv2d #("weight/max_polling/30_58.txt", 2, 0, 31, 31) conv2d_30_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_30_addbus_[58])
);
conv2d #("weight/max_polling/30_59.txt", 2, 0, 31, 31) conv2d_30_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_30_addbus_[59])
);
conv2d #("weight/max_polling/30_60.txt", 2, 0, 31, 31) conv2d_30_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_30_addbus_[60])
);
conv2d #("weight/max_polling/30_61.txt", 2, 0, 31, 31) conv2d_30_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_30_addbus_[61])
);
conv2d #("weight/max_polling/30_62.txt", 2, 0, 31, 31) conv2d_30_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_30_addbus_[62])
);
conv2d #("weight/max_polling/30_63.txt", 2, 0, 31, 31) conv2d_30_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_30_addbus_[63])
);
sum_64 #(15) sum_30( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[30]), 
        .data_in_0(_30_addbus_[0]), 
        .data_in_1(_30_addbus_[1]), 
        .data_in_2(_30_addbus_[2]), 
        .data_in_3(_30_addbus_[3]), 
        .data_in_4(_30_addbus_[4]), 
        .data_in_5(_30_addbus_[5]), 
        .data_in_6(_30_addbus_[6]), 
        .data_in_7(_30_addbus_[7]), 
        .data_in_8(_30_addbus_[8]), 
        .data_in_9(_30_addbus_[9]), 
        .data_in_10(_30_addbus_[10]), 
        .data_in_11(_30_addbus_[11]), 
        .data_in_12(_30_addbus_[12]), 
        .data_in_13(_30_addbus_[13]), 
        .data_in_14(_30_addbus_[14]), 
        .data_in_15(_30_addbus_[15]), 
        .data_in_16(_30_addbus_[16]), 
        .data_in_17(_30_addbus_[17]), 
        .data_in_18(_30_addbus_[18]), 
        .data_in_19(_30_addbus_[19]), 
        .data_in_20(_30_addbus_[20]), 
        .data_in_21(_30_addbus_[21]), 
        .data_in_22(_30_addbus_[22]), 
        .data_in_23(_30_addbus_[23]), 
        .data_in_24(_30_addbus_[24]), 
        .data_in_25(_30_addbus_[25]), 
        .data_in_26(_30_addbus_[26]), 
        .data_in_27(_30_addbus_[27]), 
        .data_in_28(_30_addbus_[28]), 
        .data_in_29(_30_addbus_[29]), 
        .data_in_30(_30_addbus_[30]), 
        .data_in_31(_30_addbus_[31]), 
        .data_in_32(_30_addbus_[32]), 
        .data_in_33(_30_addbus_[33]), 
        .data_in_34(_30_addbus_[34]), 
        .data_in_35(_30_addbus_[35]), 
        .data_in_36(_30_addbus_[36]), 
        .data_in_37(_30_addbus_[37]), 
        .data_in_38(_30_addbus_[38]), 
        .data_in_39(_30_addbus_[39]), 
        .data_in_40(_30_addbus_[40]), 
        .data_in_41(_30_addbus_[41]), 
        .data_in_42(_30_addbus_[42]), 
        .data_in_43(_30_addbus_[43]), 
        .data_in_44(_30_addbus_[44]), 
        .data_in_45(_30_addbus_[45]), 
        .data_in_46(_30_addbus_[46]), 
        .data_in_47(_30_addbus_[47]), 
        .data_in_48(_30_addbus_[48]), 
        .data_in_49(_30_addbus_[49]), 
        .data_in_50(_30_addbus_[50]), 
        .data_in_51(_30_addbus_[51]), 
        .data_in_52(_30_addbus_[52]), 
        .data_in_53(_30_addbus_[53]), 
        .data_in_54(_30_addbus_[54]), 
        .data_in_55(_30_addbus_[55]), 
        .data_in_56(_30_addbus_[56]), 
        .data_in_57(_30_addbus_[57]), 
        .data_in_58(_30_addbus_[58]), 
        .data_in_59(_30_addbus_[59]), 
        .data_in_60(_30_addbus_[60]), 
        .data_in_61(_30_addbus_[61]), 
        .data_in_62(_30_addbus_[62]), 
        .data_in_63(_30_addbus_[63]) 
); 
wire [31:0] _31_addbus_[63:0];    
conv2d #("weight/max_polling/31_0.txt", 2, 0, 31, 31) conv2d_31_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_31_addbus_[0])
);
conv2d #("weight/max_polling/31_1.txt", 2, 0, 31, 31) conv2d_31_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_31_addbus_[1])
);
conv2d #("weight/max_polling/31_2.txt", 2, 0, 31, 31) conv2d_31_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_31_addbus_[2])
);
conv2d #("weight/max_polling/31_3.txt", 2, 0, 31, 31) conv2d_31_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_31_addbus_[3])
);
conv2d #("weight/max_polling/31_4.txt", 2, 0, 31, 31) conv2d_31_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_31_addbus_[4])
);
conv2d #("weight/max_polling/31_5.txt", 2, 0, 31, 31) conv2d_31_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_31_addbus_[5])
);
conv2d #("weight/max_polling/31_6.txt", 2, 0, 31, 31) conv2d_31_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_31_addbus_[6])
);
conv2d #("weight/max_polling/31_7.txt", 2, 0, 31, 31) conv2d_31_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_31_addbus_[7])
);
conv2d #("weight/max_polling/31_8.txt", 2, 0, 31, 31) conv2d_31_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_31_addbus_[8])
);
conv2d #("weight/max_polling/31_9.txt", 2, 0, 31, 31) conv2d_31_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_31_addbus_[9])
);
conv2d #("weight/max_polling/31_10.txt", 2, 0, 31, 31) conv2d_31_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_31_addbus_[10])
);
conv2d #("weight/max_polling/31_11.txt", 2, 0, 31, 31) conv2d_31_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_31_addbus_[11])
);
conv2d #("weight/max_polling/31_12.txt", 2, 0, 31, 31) conv2d_31_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_31_addbus_[12])
);
conv2d #("weight/max_polling/31_13.txt", 2, 0, 31, 31) conv2d_31_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_31_addbus_[13])
);
conv2d #("weight/max_polling/31_14.txt", 2, 0, 31, 31) conv2d_31_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_31_addbus_[14])
);
conv2d #("weight/max_polling/31_15.txt", 2, 0, 31, 31) conv2d_31_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_31_addbus_[15])
);
conv2d #("weight/max_polling/31_16.txt", 2, 0, 31, 31) conv2d_31_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_31_addbus_[16])
);
conv2d #("weight/max_polling/31_17.txt", 2, 0, 31, 31) conv2d_31_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_31_addbus_[17])
);
conv2d #("weight/max_polling/31_18.txt", 2, 0, 31, 31) conv2d_31_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_31_addbus_[18])
);
conv2d #("weight/max_polling/31_19.txt", 2, 0, 31, 31) conv2d_31_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_31_addbus_[19])
);
conv2d #("weight/max_polling/31_20.txt", 2, 0, 31, 31) conv2d_31_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_31_addbus_[20])
);
conv2d #("weight/max_polling/31_21.txt", 2, 0, 31, 31) conv2d_31_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_31_addbus_[21])
);
conv2d #("weight/max_polling/31_22.txt", 2, 0, 31, 31) conv2d_31_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_31_addbus_[22])
);
conv2d #("weight/max_polling/31_23.txt", 2, 0, 31, 31) conv2d_31_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_31_addbus_[23])
);
conv2d #("weight/max_polling/31_24.txt", 2, 0, 31, 31) conv2d_31_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_31_addbus_[24])
);
conv2d #("weight/max_polling/31_25.txt", 2, 0, 31, 31) conv2d_31_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_31_addbus_[25])
);
conv2d #("weight/max_polling/31_26.txt", 2, 0, 31, 31) conv2d_31_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_31_addbus_[26])
);
conv2d #("weight/max_polling/31_27.txt", 2, 0, 31, 31) conv2d_31_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_31_addbus_[27])
);
conv2d #("weight/max_polling/31_28.txt", 2, 0, 31, 31) conv2d_31_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_31_addbus_[28])
);
conv2d #("weight/max_polling/31_29.txt", 2, 0, 31, 31) conv2d_31_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_31_addbus_[29])
);
conv2d #("weight/max_polling/31_30.txt", 2, 0, 31, 31) conv2d_31_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_31_addbus_[30])
);
conv2d #("weight/max_polling/31_31.txt", 2, 0, 31, 31) conv2d_31_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_31_addbus_[31])
);
conv2d #("weight/max_polling/31_32.txt", 2, 0, 31, 31) conv2d_31_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_31_addbus_[32])
);
conv2d #("weight/max_polling/31_33.txt", 2, 0, 31, 31) conv2d_31_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_31_addbus_[33])
);
conv2d #("weight/max_polling/31_34.txt", 2, 0, 31, 31) conv2d_31_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_31_addbus_[34])
);
conv2d #("weight/max_polling/31_35.txt", 2, 0, 31, 31) conv2d_31_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_31_addbus_[35])
);
conv2d #("weight/max_polling/31_36.txt", 2, 0, 31, 31) conv2d_31_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_31_addbus_[36])
);
conv2d #("weight/max_polling/31_37.txt", 2, 0, 31, 31) conv2d_31_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_31_addbus_[37])
);
conv2d #("weight/max_polling/31_38.txt", 2, 0, 31, 31) conv2d_31_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_31_addbus_[38])
);
conv2d #("weight/max_polling/31_39.txt", 2, 0, 31, 31) conv2d_31_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_31_addbus_[39])
);
conv2d #("weight/max_polling/31_40.txt", 2, 0, 31, 31) conv2d_31_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_31_addbus_[40])
);
conv2d #("weight/max_polling/31_41.txt", 2, 0, 31, 31) conv2d_31_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_31_addbus_[41])
);
conv2d #("weight/max_polling/31_42.txt", 2, 0, 31, 31) conv2d_31_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_31_addbus_[42])
);
conv2d #("weight/max_polling/31_43.txt", 2, 0, 31, 31) conv2d_31_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_31_addbus_[43])
);
conv2d #("weight/max_polling/31_44.txt", 2, 0, 31, 31) conv2d_31_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_31_addbus_[44])
);
conv2d #("weight/max_polling/31_45.txt", 2, 0, 31, 31) conv2d_31_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_31_addbus_[45])
);
conv2d #("weight/max_polling/31_46.txt", 2, 0, 31, 31) conv2d_31_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_31_addbus_[46])
);
conv2d #("weight/max_polling/31_47.txt", 2, 0, 31, 31) conv2d_31_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_31_addbus_[47])
);
conv2d #("weight/max_polling/31_48.txt", 2, 0, 31, 31) conv2d_31_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_31_addbus_[48])
);
conv2d #("weight/max_polling/31_49.txt", 2, 0, 31, 31) conv2d_31_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_31_addbus_[49])
);
conv2d #("weight/max_polling/31_50.txt", 2, 0, 31, 31) conv2d_31_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_31_addbus_[50])
);
conv2d #("weight/max_polling/31_51.txt", 2, 0, 31, 31) conv2d_31_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_31_addbus_[51])
);
conv2d #("weight/max_polling/31_52.txt", 2, 0, 31, 31) conv2d_31_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_31_addbus_[52])
);
conv2d #("weight/max_polling/31_53.txt", 2, 0, 31, 31) conv2d_31_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_31_addbus_[53])
);
conv2d #("weight/max_polling/31_54.txt", 2, 0, 31, 31) conv2d_31_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_31_addbus_[54])
);
conv2d #("weight/max_polling/31_55.txt", 2, 0, 31, 31) conv2d_31_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_31_addbus_[55])
);
conv2d #("weight/max_polling/31_56.txt", 2, 0, 31, 31) conv2d_31_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_31_addbus_[56])
);
conv2d #("weight/max_polling/31_57.txt", 2, 0, 31, 31) conv2d_31_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_31_addbus_[57])
);
conv2d #("weight/max_polling/31_58.txt", 2, 0, 31, 31) conv2d_31_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_31_addbus_[58])
);
conv2d #("weight/max_polling/31_59.txt", 2, 0, 31, 31) conv2d_31_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_31_addbus_[59])
);
conv2d #("weight/max_polling/31_60.txt", 2, 0, 31, 31) conv2d_31_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_31_addbus_[60])
);
conv2d #("weight/max_polling/31_61.txt", 2, 0, 31, 31) conv2d_31_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_31_addbus_[61])
);
conv2d #("weight/max_polling/31_62.txt", 2, 0, 31, 31) conv2d_31_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_31_addbus_[62])
);
conv2d #("weight/max_polling/31_63.txt", 2, 0, 31, 31) conv2d_31_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_31_addbus_[63])
);
sum_64 #(15) sum_31( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[31]), 
        .data_in_0(_31_addbus_[0]), 
        .data_in_1(_31_addbus_[1]), 
        .data_in_2(_31_addbus_[2]), 
        .data_in_3(_31_addbus_[3]), 
        .data_in_4(_31_addbus_[4]), 
        .data_in_5(_31_addbus_[5]), 
        .data_in_6(_31_addbus_[6]), 
        .data_in_7(_31_addbus_[7]), 
        .data_in_8(_31_addbus_[8]), 
        .data_in_9(_31_addbus_[9]), 
        .data_in_10(_31_addbus_[10]), 
        .data_in_11(_31_addbus_[11]), 
        .data_in_12(_31_addbus_[12]), 
        .data_in_13(_31_addbus_[13]), 
        .data_in_14(_31_addbus_[14]), 
        .data_in_15(_31_addbus_[15]), 
        .data_in_16(_31_addbus_[16]), 
        .data_in_17(_31_addbus_[17]), 
        .data_in_18(_31_addbus_[18]), 
        .data_in_19(_31_addbus_[19]), 
        .data_in_20(_31_addbus_[20]), 
        .data_in_21(_31_addbus_[21]), 
        .data_in_22(_31_addbus_[22]), 
        .data_in_23(_31_addbus_[23]), 
        .data_in_24(_31_addbus_[24]), 
        .data_in_25(_31_addbus_[25]), 
        .data_in_26(_31_addbus_[26]), 
        .data_in_27(_31_addbus_[27]), 
        .data_in_28(_31_addbus_[28]), 
        .data_in_29(_31_addbus_[29]), 
        .data_in_30(_31_addbus_[30]), 
        .data_in_31(_31_addbus_[31]), 
        .data_in_32(_31_addbus_[32]), 
        .data_in_33(_31_addbus_[33]), 
        .data_in_34(_31_addbus_[34]), 
        .data_in_35(_31_addbus_[35]), 
        .data_in_36(_31_addbus_[36]), 
        .data_in_37(_31_addbus_[37]), 
        .data_in_38(_31_addbus_[38]), 
        .data_in_39(_31_addbus_[39]), 
        .data_in_40(_31_addbus_[40]), 
        .data_in_41(_31_addbus_[41]), 
        .data_in_42(_31_addbus_[42]), 
        .data_in_43(_31_addbus_[43]), 
        .data_in_44(_31_addbus_[44]), 
        .data_in_45(_31_addbus_[45]), 
        .data_in_46(_31_addbus_[46]), 
        .data_in_47(_31_addbus_[47]), 
        .data_in_48(_31_addbus_[48]), 
        .data_in_49(_31_addbus_[49]), 
        .data_in_50(_31_addbus_[50]), 
        .data_in_51(_31_addbus_[51]), 
        .data_in_52(_31_addbus_[52]), 
        .data_in_53(_31_addbus_[53]), 
        .data_in_54(_31_addbus_[54]), 
        .data_in_55(_31_addbus_[55]), 
        .data_in_56(_31_addbus_[56]), 
        .data_in_57(_31_addbus_[57]), 
        .data_in_58(_31_addbus_[58]), 
        .data_in_59(_31_addbus_[59]), 
        .data_in_60(_31_addbus_[60]), 
        .data_in_61(_31_addbus_[61]), 
        .data_in_62(_31_addbus_[62]), 
        .data_in_63(_31_addbus_[63]) 
); 
wire [31:0] _32_addbus_[63:0];    
conv2d #("weight/max_polling/32_0.txt", 2, 0, 31, 31) conv2d_32_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_32_addbus_[0])
);
conv2d #("weight/max_polling/32_1.txt", 2, 0, 31, 31) conv2d_32_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_32_addbus_[1])
);
conv2d #("weight/max_polling/32_2.txt", 2, 0, 31, 31) conv2d_32_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_32_addbus_[2])
);
conv2d #("weight/max_polling/32_3.txt", 2, 0, 31, 31) conv2d_32_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_32_addbus_[3])
);
conv2d #("weight/max_polling/32_4.txt", 2, 0, 31, 31) conv2d_32_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_32_addbus_[4])
);
conv2d #("weight/max_polling/32_5.txt", 2, 0, 31, 31) conv2d_32_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_32_addbus_[5])
);
conv2d #("weight/max_polling/32_6.txt", 2, 0, 31, 31) conv2d_32_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_32_addbus_[6])
);
conv2d #("weight/max_polling/32_7.txt", 2, 0, 31, 31) conv2d_32_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_32_addbus_[7])
);
conv2d #("weight/max_polling/32_8.txt", 2, 0, 31, 31) conv2d_32_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_32_addbus_[8])
);
conv2d #("weight/max_polling/32_9.txt", 2, 0, 31, 31) conv2d_32_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_32_addbus_[9])
);
conv2d #("weight/max_polling/32_10.txt", 2, 0, 31, 31) conv2d_32_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_32_addbus_[10])
);
conv2d #("weight/max_polling/32_11.txt", 2, 0, 31, 31) conv2d_32_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_32_addbus_[11])
);
conv2d #("weight/max_polling/32_12.txt", 2, 0, 31, 31) conv2d_32_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_32_addbus_[12])
);
conv2d #("weight/max_polling/32_13.txt", 2, 0, 31, 31) conv2d_32_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_32_addbus_[13])
);
conv2d #("weight/max_polling/32_14.txt", 2, 0, 31, 31) conv2d_32_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_32_addbus_[14])
);
conv2d #("weight/max_polling/32_15.txt", 2, 0, 31, 31) conv2d_32_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_32_addbus_[15])
);
conv2d #("weight/max_polling/32_16.txt", 2, 0, 31, 31) conv2d_32_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_32_addbus_[16])
);
conv2d #("weight/max_polling/32_17.txt", 2, 0, 31, 31) conv2d_32_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_32_addbus_[17])
);
conv2d #("weight/max_polling/32_18.txt", 2, 0, 31, 31) conv2d_32_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_32_addbus_[18])
);
conv2d #("weight/max_polling/32_19.txt", 2, 0, 31, 31) conv2d_32_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_32_addbus_[19])
);
conv2d #("weight/max_polling/32_20.txt", 2, 0, 31, 31) conv2d_32_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_32_addbus_[20])
);
conv2d #("weight/max_polling/32_21.txt", 2, 0, 31, 31) conv2d_32_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_32_addbus_[21])
);
conv2d #("weight/max_polling/32_22.txt", 2, 0, 31, 31) conv2d_32_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_32_addbus_[22])
);
conv2d #("weight/max_polling/32_23.txt", 2, 0, 31, 31) conv2d_32_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_32_addbus_[23])
);
conv2d #("weight/max_polling/32_24.txt", 2, 0, 31, 31) conv2d_32_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_32_addbus_[24])
);
conv2d #("weight/max_polling/32_25.txt", 2, 0, 31, 31) conv2d_32_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_32_addbus_[25])
);
conv2d #("weight/max_polling/32_26.txt", 2, 0, 31, 31) conv2d_32_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_32_addbus_[26])
);
conv2d #("weight/max_polling/32_27.txt", 2, 0, 31, 31) conv2d_32_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_32_addbus_[27])
);
conv2d #("weight/max_polling/32_28.txt", 2, 0, 31, 31) conv2d_32_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_32_addbus_[28])
);
conv2d #("weight/max_polling/32_29.txt", 2, 0, 31, 31) conv2d_32_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_32_addbus_[29])
);
conv2d #("weight/max_polling/32_30.txt", 2, 0, 31, 31) conv2d_32_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_32_addbus_[30])
);
conv2d #("weight/max_polling/32_31.txt", 2, 0, 31, 31) conv2d_32_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_32_addbus_[31])
);
conv2d #("weight/max_polling/32_32.txt", 2, 0, 31, 31) conv2d_32_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_32_addbus_[32])
);
conv2d #("weight/max_polling/32_33.txt", 2, 0, 31, 31) conv2d_32_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_32_addbus_[33])
);
conv2d #("weight/max_polling/32_34.txt", 2, 0, 31, 31) conv2d_32_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_32_addbus_[34])
);
conv2d #("weight/max_polling/32_35.txt", 2, 0, 31, 31) conv2d_32_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_32_addbus_[35])
);
conv2d #("weight/max_polling/32_36.txt", 2, 0, 31, 31) conv2d_32_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_32_addbus_[36])
);
conv2d #("weight/max_polling/32_37.txt", 2, 0, 31, 31) conv2d_32_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_32_addbus_[37])
);
conv2d #("weight/max_polling/32_38.txt", 2, 0, 31, 31) conv2d_32_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_32_addbus_[38])
);
conv2d #("weight/max_polling/32_39.txt", 2, 0, 31, 31) conv2d_32_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_32_addbus_[39])
);
conv2d #("weight/max_polling/32_40.txt", 2, 0, 31, 31) conv2d_32_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_32_addbus_[40])
);
conv2d #("weight/max_polling/32_41.txt", 2, 0, 31, 31) conv2d_32_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_32_addbus_[41])
);
conv2d #("weight/max_polling/32_42.txt", 2, 0, 31, 31) conv2d_32_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_32_addbus_[42])
);
conv2d #("weight/max_polling/32_43.txt", 2, 0, 31, 31) conv2d_32_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_32_addbus_[43])
);
conv2d #("weight/max_polling/32_44.txt", 2, 0, 31, 31) conv2d_32_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_32_addbus_[44])
);
conv2d #("weight/max_polling/32_45.txt", 2, 0, 31, 31) conv2d_32_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_32_addbus_[45])
);
conv2d #("weight/max_polling/32_46.txt", 2, 0, 31, 31) conv2d_32_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_32_addbus_[46])
);
conv2d #("weight/max_polling/32_47.txt", 2, 0, 31, 31) conv2d_32_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_32_addbus_[47])
);
conv2d #("weight/max_polling/32_48.txt", 2, 0, 31, 31) conv2d_32_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_32_addbus_[48])
);
conv2d #("weight/max_polling/32_49.txt", 2, 0, 31, 31) conv2d_32_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_32_addbus_[49])
);
conv2d #("weight/max_polling/32_50.txt", 2, 0, 31, 31) conv2d_32_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_32_addbus_[50])
);
conv2d #("weight/max_polling/32_51.txt", 2, 0, 31, 31) conv2d_32_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_32_addbus_[51])
);
conv2d #("weight/max_polling/32_52.txt", 2, 0, 31, 31) conv2d_32_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_32_addbus_[52])
);
conv2d #("weight/max_polling/32_53.txt", 2, 0, 31, 31) conv2d_32_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_32_addbus_[53])
);
conv2d #("weight/max_polling/32_54.txt", 2, 0, 31, 31) conv2d_32_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_32_addbus_[54])
);
conv2d #("weight/max_polling/32_55.txt", 2, 0, 31, 31) conv2d_32_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_32_addbus_[55])
);
conv2d #("weight/max_polling/32_56.txt", 2, 0, 31, 31) conv2d_32_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_32_addbus_[56])
);
conv2d #("weight/max_polling/32_57.txt", 2, 0, 31, 31) conv2d_32_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_32_addbus_[57])
);
conv2d #("weight/max_polling/32_58.txt", 2, 0, 31, 31) conv2d_32_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_32_addbus_[58])
);
conv2d #("weight/max_polling/32_59.txt", 2, 0, 31, 31) conv2d_32_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_32_addbus_[59])
);
conv2d #("weight/max_polling/32_60.txt", 2, 0, 31, 31) conv2d_32_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_32_addbus_[60])
);
conv2d #("weight/max_polling/32_61.txt", 2, 0, 31, 31) conv2d_32_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_32_addbus_[61])
);
conv2d #("weight/max_polling/32_62.txt", 2, 0, 31, 31) conv2d_32_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_32_addbus_[62])
);
conv2d #("weight/max_polling/32_63.txt", 2, 0, 31, 31) conv2d_32_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_32_addbus_[63])
);
sum_64 #(15) sum_32( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[32]), 
        .data_in_0(_32_addbus_[0]), 
        .data_in_1(_32_addbus_[1]), 
        .data_in_2(_32_addbus_[2]), 
        .data_in_3(_32_addbus_[3]), 
        .data_in_4(_32_addbus_[4]), 
        .data_in_5(_32_addbus_[5]), 
        .data_in_6(_32_addbus_[6]), 
        .data_in_7(_32_addbus_[7]), 
        .data_in_8(_32_addbus_[8]), 
        .data_in_9(_32_addbus_[9]), 
        .data_in_10(_32_addbus_[10]), 
        .data_in_11(_32_addbus_[11]), 
        .data_in_12(_32_addbus_[12]), 
        .data_in_13(_32_addbus_[13]), 
        .data_in_14(_32_addbus_[14]), 
        .data_in_15(_32_addbus_[15]), 
        .data_in_16(_32_addbus_[16]), 
        .data_in_17(_32_addbus_[17]), 
        .data_in_18(_32_addbus_[18]), 
        .data_in_19(_32_addbus_[19]), 
        .data_in_20(_32_addbus_[20]), 
        .data_in_21(_32_addbus_[21]), 
        .data_in_22(_32_addbus_[22]), 
        .data_in_23(_32_addbus_[23]), 
        .data_in_24(_32_addbus_[24]), 
        .data_in_25(_32_addbus_[25]), 
        .data_in_26(_32_addbus_[26]), 
        .data_in_27(_32_addbus_[27]), 
        .data_in_28(_32_addbus_[28]), 
        .data_in_29(_32_addbus_[29]), 
        .data_in_30(_32_addbus_[30]), 
        .data_in_31(_32_addbus_[31]), 
        .data_in_32(_32_addbus_[32]), 
        .data_in_33(_32_addbus_[33]), 
        .data_in_34(_32_addbus_[34]), 
        .data_in_35(_32_addbus_[35]), 
        .data_in_36(_32_addbus_[36]), 
        .data_in_37(_32_addbus_[37]), 
        .data_in_38(_32_addbus_[38]), 
        .data_in_39(_32_addbus_[39]), 
        .data_in_40(_32_addbus_[40]), 
        .data_in_41(_32_addbus_[41]), 
        .data_in_42(_32_addbus_[42]), 
        .data_in_43(_32_addbus_[43]), 
        .data_in_44(_32_addbus_[44]), 
        .data_in_45(_32_addbus_[45]), 
        .data_in_46(_32_addbus_[46]), 
        .data_in_47(_32_addbus_[47]), 
        .data_in_48(_32_addbus_[48]), 
        .data_in_49(_32_addbus_[49]), 
        .data_in_50(_32_addbus_[50]), 
        .data_in_51(_32_addbus_[51]), 
        .data_in_52(_32_addbus_[52]), 
        .data_in_53(_32_addbus_[53]), 
        .data_in_54(_32_addbus_[54]), 
        .data_in_55(_32_addbus_[55]), 
        .data_in_56(_32_addbus_[56]), 
        .data_in_57(_32_addbus_[57]), 
        .data_in_58(_32_addbus_[58]), 
        .data_in_59(_32_addbus_[59]), 
        .data_in_60(_32_addbus_[60]), 
        .data_in_61(_32_addbus_[61]), 
        .data_in_62(_32_addbus_[62]), 
        .data_in_63(_32_addbus_[63]) 
); 
wire [31:0] _33_addbus_[63:0];    
conv2d #("weight/max_polling/33_0.txt", 2, 0, 31, 31) conv2d_33_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_33_addbus_[0])
);
conv2d #("weight/max_polling/33_1.txt", 2, 0, 31, 31) conv2d_33_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_33_addbus_[1])
);
conv2d #("weight/max_polling/33_2.txt", 2, 0, 31, 31) conv2d_33_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_33_addbus_[2])
);
conv2d #("weight/max_polling/33_3.txt", 2, 0, 31, 31) conv2d_33_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_33_addbus_[3])
);
conv2d #("weight/max_polling/33_4.txt", 2, 0, 31, 31) conv2d_33_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_33_addbus_[4])
);
conv2d #("weight/max_polling/33_5.txt", 2, 0, 31, 31) conv2d_33_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_33_addbus_[5])
);
conv2d #("weight/max_polling/33_6.txt", 2, 0, 31, 31) conv2d_33_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_33_addbus_[6])
);
conv2d #("weight/max_polling/33_7.txt", 2, 0, 31, 31) conv2d_33_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_33_addbus_[7])
);
conv2d #("weight/max_polling/33_8.txt", 2, 0, 31, 31) conv2d_33_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_33_addbus_[8])
);
conv2d #("weight/max_polling/33_9.txt", 2, 0, 31, 31) conv2d_33_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_33_addbus_[9])
);
conv2d #("weight/max_polling/33_10.txt", 2, 0, 31, 31) conv2d_33_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_33_addbus_[10])
);
conv2d #("weight/max_polling/33_11.txt", 2, 0, 31, 31) conv2d_33_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_33_addbus_[11])
);
conv2d #("weight/max_polling/33_12.txt", 2, 0, 31, 31) conv2d_33_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_33_addbus_[12])
);
conv2d #("weight/max_polling/33_13.txt", 2, 0, 31, 31) conv2d_33_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_33_addbus_[13])
);
conv2d #("weight/max_polling/33_14.txt", 2, 0, 31, 31) conv2d_33_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_33_addbus_[14])
);
conv2d #("weight/max_polling/33_15.txt", 2, 0, 31, 31) conv2d_33_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_33_addbus_[15])
);
conv2d #("weight/max_polling/33_16.txt", 2, 0, 31, 31) conv2d_33_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_33_addbus_[16])
);
conv2d #("weight/max_polling/33_17.txt", 2, 0, 31, 31) conv2d_33_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_33_addbus_[17])
);
conv2d #("weight/max_polling/33_18.txt", 2, 0, 31, 31) conv2d_33_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_33_addbus_[18])
);
conv2d #("weight/max_polling/33_19.txt", 2, 0, 31, 31) conv2d_33_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_33_addbus_[19])
);
conv2d #("weight/max_polling/33_20.txt", 2, 0, 31, 31) conv2d_33_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_33_addbus_[20])
);
conv2d #("weight/max_polling/33_21.txt", 2, 0, 31, 31) conv2d_33_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_33_addbus_[21])
);
conv2d #("weight/max_polling/33_22.txt", 2, 0, 31, 31) conv2d_33_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_33_addbus_[22])
);
conv2d #("weight/max_polling/33_23.txt", 2, 0, 31, 31) conv2d_33_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_33_addbus_[23])
);
conv2d #("weight/max_polling/33_24.txt", 2, 0, 31, 31) conv2d_33_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_33_addbus_[24])
);
conv2d #("weight/max_polling/33_25.txt", 2, 0, 31, 31) conv2d_33_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_33_addbus_[25])
);
conv2d #("weight/max_polling/33_26.txt", 2, 0, 31, 31) conv2d_33_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_33_addbus_[26])
);
conv2d #("weight/max_polling/33_27.txt", 2, 0, 31, 31) conv2d_33_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_33_addbus_[27])
);
conv2d #("weight/max_polling/33_28.txt", 2, 0, 31, 31) conv2d_33_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_33_addbus_[28])
);
conv2d #("weight/max_polling/33_29.txt", 2, 0, 31, 31) conv2d_33_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_33_addbus_[29])
);
conv2d #("weight/max_polling/33_30.txt", 2, 0, 31, 31) conv2d_33_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_33_addbus_[30])
);
conv2d #("weight/max_polling/33_31.txt", 2, 0, 31, 31) conv2d_33_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_33_addbus_[31])
);
conv2d #("weight/max_polling/33_32.txt", 2, 0, 31, 31) conv2d_33_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_33_addbus_[32])
);
conv2d #("weight/max_polling/33_33.txt", 2, 0, 31, 31) conv2d_33_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_33_addbus_[33])
);
conv2d #("weight/max_polling/33_34.txt", 2, 0, 31, 31) conv2d_33_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_33_addbus_[34])
);
conv2d #("weight/max_polling/33_35.txt", 2, 0, 31, 31) conv2d_33_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_33_addbus_[35])
);
conv2d #("weight/max_polling/33_36.txt", 2, 0, 31, 31) conv2d_33_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_33_addbus_[36])
);
conv2d #("weight/max_polling/33_37.txt", 2, 0, 31, 31) conv2d_33_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_33_addbus_[37])
);
conv2d #("weight/max_polling/33_38.txt", 2, 0, 31, 31) conv2d_33_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_33_addbus_[38])
);
conv2d #("weight/max_polling/33_39.txt", 2, 0, 31, 31) conv2d_33_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_33_addbus_[39])
);
conv2d #("weight/max_polling/33_40.txt", 2, 0, 31, 31) conv2d_33_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_33_addbus_[40])
);
conv2d #("weight/max_polling/33_41.txt", 2, 0, 31, 31) conv2d_33_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_33_addbus_[41])
);
conv2d #("weight/max_polling/33_42.txt", 2, 0, 31, 31) conv2d_33_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_33_addbus_[42])
);
conv2d #("weight/max_polling/33_43.txt", 2, 0, 31, 31) conv2d_33_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_33_addbus_[43])
);
conv2d #("weight/max_polling/33_44.txt", 2, 0, 31, 31) conv2d_33_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_33_addbus_[44])
);
conv2d #("weight/max_polling/33_45.txt", 2, 0, 31, 31) conv2d_33_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_33_addbus_[45])
);
conv2d #("weight/max_polling/33_46.txt", 2, 0, 31, 31) conv2d_33_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_33_addbus_[46])
);
conv2d #("weight/max_polling/33_47.txt", 2, 0, 31, 31) conv2d_33_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_33_addbus_[47])
);
conv2d #("weight/max_polling/33_48.txt", 2, 0, 31, 31) conv2d_33_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_33_addbus_[48])
);
conv2d #("weight/max_polling/33_49.txt", 2, 0, 31, 31) conv2d_33_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_33_addbus_[49])
);
conv2d #("weight/max_polling/33_50.txt", 2, 0, 31, 31) conv2d_33_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_33_addbus_[50])
);
conv2d #("weight/max_polling/33_51.txt", 2, 0, 31, 31) conv2d_33_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_33_addbus_[51])
);
conv2d #("weight/max_polling/33_52.txt", 2, 0, 31, 31) conv2d_33_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_33_addbus_[52])
);
conv2d #("weight/max_polling/33_53.txt", 2, 0, 31, 31) conv2d_33_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_33_addbus_[53])
);
conv2d #("weight/max_polling/33_54.txt", 2, 0, 31, 31) conv2d_33_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_33_addbus_[54])
);
conv2d #("weight/max_polling/33_55.txt", 2, 0, 31, 31) conv2d_33_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_33_addbus_[55])
);
conv2d #("weight/max_polling/33_56.txt", 2, 0, 31, 31) conv2d_33_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_33_addbus_[56])
);
conv2d #("weight/max_polling/33_57.txt", 2, 0, 31, 31) conv2d_33_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_33_addbus_[57])
);
conv2d #("weight/max_polling/33_58.txt", 2, 0, 31, 31) conv2d_33_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_33_addbus_[58])
);
conv2d #("weight/max_polling/33_59.txt", 2, 0, 31, 31) conv2d_33_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_33_addbus_[59])
);
conv2d #("weight/max_polling/33_60.txt", 2, 0, 31, 31) conv2d_33_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_33_addbus_[60])
);
conv2d #("weight/max_polling/33_61.txt", 2, 0, 31, 31) conv2d_33_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_33_addbus_[61])
);
conv2d #("weight/max_polling/33_62.txt", 2, 0, 31, 31) conv2d_33_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_33_addbus_[62])
);
conv2d #("weight/max_polling/33_63.txt", 2, 0, 31, 31) conv2d_33_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_33_addbus_[63])
);
sum_64 #(15) sum_33( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[33]), 
        .data_in_0(_33_addbus_[0]), 
        .data_in_1(_33_addbus_[1]), 
        .data_in_2(_33_addbus_[2]), 
        .data_in_3(_33_addbus_[3]), 
        .data_in_4(_33_addbus_[4]), 
        .data_in_5(_33_addbus_[5]), 
        .data_in_6(_33_addbus_[6]), 
        .data_in_7(_33_addbus_[7]), 
        .data_in_8(_33_addbus_[8]), 
        .data_in_9(_33_addbus_[9]), 
        .data_in_10(_33_addbus_[10]), 
        .data_in_11(_33_addbus_[11]), 
        .data_in_12(_33_addbus_[12]), 
        .data_in_13(_33_addbus_[13]), 
        .data_in_14(_33_addbus_[14]), 
        .data_in_15(_33_addbus_[15]), 
        .data_in_16(_33_addbus_[16]), 
        .data_in_17(_33_addbus_[17]), 
        .data_in_18(_33_addbus_[18]), 
        .data_in_19(_33_addbus_[19]), 
        .data_in_20(_33_addbus_[20]), 
        .data_in_21(_33_addbus_[21]), 
        .data_in_22(_33_addbus_[22]), 
        .data_in_23(_33_addbus_[23]), 
        .data_in_24(_33_addbus_[24]), 
        .data_in_25(_33_addbus_[25]), 
        .data_in_26(_33_addbus_[26]), 
        .data_in_27(_33_addbus_[27]), 
        .data_in_28(_33_addbus_[28]), 
        .data_in_29(_33_addbus_[29]), 
        .data_in_30(_33_addbus_[30]), 
        .data_in_31(_33_addbus_[31]), 
        .data_in_32(_33_addbus_[32]), 
        .data_in_33(_33_addbus_[33]), 
        .data_in_34(_33_addbus_[34]), 
        .data_in_35(_33_addbus_[35]), 
        .data_in_36(_33_addbus_[36]), 
        .data_in_37(_33_addbus_[37]), 
        .data_in_38(_33_addbus_[38]), 
        .data_in_39(_33_addbus_[39]), 
        .data_in_40(_33_addbus_[40]), 
        .data_in_41(_33_addbus_[41]), 
        .data_in_42(_33_addbus_[42]), 
        .data_in_43(_33_addbus_[43]), 
        .data_in_44(_33_addbus_[44]), 
        .data_in_45(_33_addbus_[45]), 
        .data_in_46(_33_addbus_[46]), 
        .data_in_47(_33_addbus_[47]), 
        .data_in_48(_33_addbus_[48]), 
        .data_in_49(_33_addbus_[49]), 
        .data_in_50(_33_addbus_[50]), 
        .data_in_51(_33_addbus_[51]), 
        .data_in_52(_33_addbus_[52]), 
        .data_in_53(_33_addbus_[53]), 
        .data_in_54(_33_addbus_[54]), 
        .data_in_55(_33_addbus_[55]), 
        .data_in_56(_33_addbus_[56]), 
        .data_in_57(_33_addbus_[57]), 
        .data_in_58(_33_addbus_[58]), 
        .data_in_59(_33_addbus_[59]), 
        .data_in_60(_33_addbus_[60]), 
        .data_in_61(_33_addbus_[61]), 
        .data_in_62(_33_addbus_[62]), 
        .data_in_63(_33_addbus_[63]) 
); 
wire [31:0] _34_addbus_[63:0];    
conv2d #("weight/max_polling/34_0.txt", 2, 0, 31, 31) conv2d_34_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_34_addbus_[0])
);
conv2d #("weight/max_polling/34_1.txt", 2, 0, 31, 31) conv2d_34_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_34_addbus_[1])
);
conv2d #("weight/max_polling/34_2.txt", 2, 0, 31, 31) conv2d_34_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_34_addbus_[2])
);
conv2d #("weight/max_polling/34_3.txt", 2, 0, 31, 31) conv2d_34_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_34_addbus_[3])
);
conv2d #("weight/max_polling/34_4.txt", 2, 0, 31, 31) conv2d_34_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_34_addbus_[4])
);
conv2d #("weight/max_polling/34_5.txt", 2, 0, 31, 31) conv2d_34_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_34_addbus_[5])
);
conv2d #("weight/max_polling/34_6.txt", 2, 0, 31, 31) conv2d_34_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_34_addbus_[6])
);
conv2d #("weight/max_polling/34_7.txt", 2, 0, 31, 31) conv2d_34_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_34_addbus_[7])
);
conv2d #("weight/max_polling/34_8.txt", 2, 0, 31, 31) conv2d_34_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_34_addbus_[8])
);
conv2d #("weight/max_polling/34_9.txt", 2, 0, 31, 31) conv2d_34_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_34_addbus_[9])
);
conv2d #("weight/max_polling/34_10.txt", 2, 0, 31, 31) conv2d_34_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_34_addbus_[10])
);
conv2d #("weight/max_polling/34_11.txt", 2, 0, 31, 31) conv2d_34_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_34_addbus_[11])
);
conv2d #("weight/max_polling/34_12.txt", 2, 0, 31, 31) conv2d_34_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_34_addbus_[12])
);
conv2d #("weight/max_polling/34_13.txt", 2, 0, 31, 31) conv2d_34_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_34_addbus_[13])
);
conv2d #("weight/max_polling/34_14.txt", 2, 0, 31, 31) conv2d_34_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_34_addbus_[14])
);
conv2d #("weight/max_polling/34_15.txt", 2, 0, 31, 31) conv2d_34_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_34_addbus_[15])
);
conv2d #("weight/max_polling/34_16.txt", 2, 0, 31, 31) conv2d_34_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_34_addbus_[16])
);
conv2d #("weight/max_polling/34_17.txt", 2, 0, 31, 31) conv2d_34_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_34_addbus_[17])
);
conv2d #("weight/max_polling/34_18.txt", 2, 0, 31, 31) conv2d_34_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_34_addbus_[18])
);
conv2d #("weight/max_polling/34_19.txt", 2, 0, 31, 31) conv2d_34_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_34_addbus_[19])
);
conv2d #("weight/max_polling/34_20.txt", 2, 0, 31, 31) conv2d_34_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_34_addbus_[20])
);
conv2d #("weight/max_polling/34_21.txt", 2, 0, 31, 31) conv2d_34_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_34_addbus_[21])
);
conv2d #("weight/max_polling/34_22.txt", 2, 0, 31, 31) conv2d_34_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_34_addbus_[22])
);
conv2d #("weight/max_polling/34_23.txt", 2, 0, 31, 31) conv2d_34_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_34_addbus_[23])
);
conv2d #("weight/max_polling/34_24.txt", 2, 0, 31, 31) conv2d_34_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_34_addbus_[24])
);
conv2d #("weight/max_polling/34_25.txt", 2, 0, 31, 31) conv2d_34_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_34_addbus_[25])
);
conv2d #("weight/max_polling/34_26.txt", 2, 0, 31, 31) conv2d_34_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_34_addbus_[26])
);
conv2d #("weight/max_polling/34_27.txt", 2, 0, 31, 31) conv2d_34_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_34_addbus_[27])
);
conv2d #("weight/max_polling/34_28.txt", 2, 0, 31, 31) conv2d_34_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_34_addbus_[28])
);
conv2d #("weight/max_polling/34_29.txt", 2, 0, 31, 31) conv2d_34_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_34_addbus_[29])
);
conv2d #("weight/max_polling/34_30.txt", 2, 0, 31, 31) conv2d_34_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_34_addbus_[30])
);
conv2d #("weight/max_polling/34_31.txt", 2, 0, 31, 31) conv2d_34_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_34_addbus_[31])
);
conv2d #("weight/max_polling/34_32.txt", 2, 0, 31, 31) conv2d_34_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_34_addbus_[32])
);
conv2d #("weight/max_polling/34_33.txt", 2, 0, 31, 31) conv2d_34_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_34_addbus_[33])
);
conv2d #("weight/max_polling/34_34.txt", 2, 0, 31, 31) conv2d_34_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_34_addbus_[34])
);
conv2d #("weight/max_polling/34_35.txt", 2, 0, 31, 31) conv2d_34_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_34_addbus_[35])
);
conv2d #("weight/max_polling/34_36.txt", 2, 0, 31, 31) conv2d_34_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_34_addbus_[36])
);
conv2d #("weight/max_polling/34_37.txt", 2, 0, 31, 31) conv2d_34_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_34_addbus_[37])
);
conv2d #("weight/max_polling/34_38.txt", 2, 0, 31, 31) conv2d_34_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_34_addbus_[38])
);
conv2d #("weight/max_polling/34_39.txt", 2, 0, 31, 31) conv2d_34_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_34_addbus_[39])
);
conv2d #("weight/max_polling/34_40.txt", 2, 0, 31, 31) conv2d_34_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_34_addbus_[40])
);
conv2d #("weight/max_polling/34_41.txt", 2, 0, 31, 31) conv2d_34_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_34_addbus_[41])
);
conv2d #("weight/max_polling/34_42.txt", 2, 0, 31, 31) conv2d_34_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_34_addbus_[42])
);
conv2d #("weight/max_polling/34_43.txt", 2, 0, 31, 31) conv2d_34_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_34_addbus_[43])
);
conv2d #("weight/max_polling/34_44.txt", 2, 0, 31, 31) conv2d_34_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_34_addbus_[44])
);
conv2d #("weight/max_polling/34_45.txt", 2, 0, 31, 31) conv2d_34_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_34_addbus_[45])
);
conv2d #("weight/max_polling/34_46.txt", 2, 0, 31, 31) conv2d_34_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_34_addbus_[46])
);
conv2d #("weight/max_polling/34_47.txt", 2, 0, 31, 31) conv2d_34_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_34_addbus_[47])
);
conv2d #("weight/max_polling/34_48.txt", 2, 0, 31, 31) conv2d_34_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_34_addbus_[48])
);
conv2d #("weight/max_polling/34_49.txt", 2, 0, 31, 31) conv2d_34_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_34_addbus_[49])
);
conv2d #("weight/max_polling/34_50.txt", 2, 0, 31, 31) conv2d_34_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_34_addbus_[50])
);
conv2d #("weight/max_polling/34_51.txt", 2, 0, 31, 31) conv2d_34_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_34_addbus_[51])
);
conv2d #("weight/max_polling/34_52.txt", 2, 0, 31, 31) conv2d_34_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_34_addbus_[52])
);
conv2d #("weight/max_polling/34_53.txt", 2, 0, 31, 31) conv2d_34_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_34_addbus_[53])
);
conv2d #("weight/max_polling/34_54.txt", 2, 0, 31, 31) conv2d_34_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_34_addbus_[54])
);
conv2d #("weight/max_polling/34_55.txt", 2, 0, 31, 31) conv2d_34_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_34_addbus_[55])
);
conv2d #("weight/max_polling/34_56.txt", 2, 0, 31, 31) conv2d_34_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_34_addbus_[56])
);
conv2d #("weight/max_polling/34_57.txt", 2, 0, 31, 31) conv2d_34_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_34_addbus_[57])
);
conv2d #("weight/max_polling/34_58.txt", 2, 0, 31, 31) conv2d_34_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_34_addbus_[58])
);
conv2d #("weight/max_polling/34_59.txt", 2, 0, 31, 31) conv2d_34_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_34_addbus_[59])
);
conv2d #("weight/max_polling/34_60.txt", 2, 0, 31, 31) conv2d_34_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_34_addbus_[60])
);
conv2d #("weight/max_polling/34_61.txt", 2, 0, 31, 31) conv2d_34_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_34_addbus_[61])
);
conv2d #("weight/max_polling/34_62.txt", 2, 0, 31, 31) conv2d_34_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_34_addbus_[62])
);
conv2d #("weight/max_polling/34_63.txt", 2, 0, 31, 31) conv2d_34_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_34_addbus_[63])
);
sum_64 #(15) sum_34( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[34]), 
        .data_in_0(_34_addbus_[0]), 
        .data_in_1(_34_addbus_[1]), 
        .data_in_2(_34_addbus_[2]), 
        .data_in_3(_34_addbus_[3]), 
        .data_in_4(_34_addbus_[4]), 
        .data_in_5(_34_addbus_[5]), 
        .data_in_6(_34_addbus_[6]), 
        .data_in_7(_34_addbus_[7]), 
        .data_in_8(_34_addbus_[8]), 
        .data_in_9(_34_addbus_[9]), 
        .data_in_10(_34_addbus_[10]), 
        .data_in_11(_34_addbus_[11]), 
        .data_in_12(_34_addbus_[12]), 
        .data_in_13(_34_addbus_[13]), 
        .data_in_14(_34_addbus_[14]), 
        .data_in_15(_34_addbus_[15]), 
        .data_in_16(_34_addbus_[16]), 
        .data_in_17(_34_addbus_[17]), 
        .data_in_18(_34_addbus_[18]), 
        .data_in_19(_34_addbus_[19]), 
        .data_in_20(_34_addbus_[20]), 
        .data_in_21(_34_addbus_[21]), 
        .data_in_22(_34_addbus_[22]), 
        .data_in_23(_34_addbus_[23]), 
        .data_in_24(_34_addbus_[24]), 
        .data_in_25(_34_addbus_[25]), 
        .data_in_26(_34_addbus_[26]), 
        .data_in_27(_34_addbus_[27]), 
        .data_in_28(_34_addbus_[28]), 
        .data_in_29(_34_addbus_[29]), 
        .data_in_30(_34_addbus_[30]), 
        .data_in_31(_34_addbus_[31]), 
        .data_in_32(_34_addbus_[32]), 
        .data_in_33(_34_addbus_[33]), 
        .data_in_34(_34_addbus_[34]), 
        .data_in_35(_34_addbus_[35]), 
        .data_in_36(_34_addbus_[36]), 
        .data_in_37(_34_addbus_[37]), 
        .data_in_38(_34_addbus_[38]), 
        .data_in_39(_34_addbus_[39]), 
        .data_in_40(_34_addbus_[40]), 
        .data_in_41(_34_addbus_[41]), 
        .data_in_42(_34_addbus_[42]), 
        .data_in_43(_34_addbus_[43]), 
        .data_in_44(_34_addbus_[44]), 
        .data_in_45(_34_addbus_[45]), 
        .data_in_46(_34_addbus_[46]), 
        .data_in_47(_34_addbus_[47]), 
        .data_in_48(_34_addbus_[48]), 
        .data_in_49(_34_addbus_[49]), 
        .data_in_50(_34_addbus_[50]), 
        .data_in_51(_34_addbus_[51]), 
        .data_in_52(_34_addbus_[52]), 
        .data_in_53(_34_addbus_[53]), 
        .data_in_54(_34_addbus_[54]), 
        .data_in_55(_34_addbus_[55]), 
        .data_in_56(_34_addbus_[56]), 
        .data_in_57(_34_addbus_[57]), 
        .data_in_58(_34_addbus_[58]), 
        .data_in_59(_34_addbus_[59]), 
        .data_in_60(_34_addbus_[60]), 
        .data_in_61(_34_addbus_[61]), 
        .data_in_62(_34_addbus_[62]), 
        .data_in_63(_34_addbus_[63]) 
); 
wire [31:0] _35_addbus_[63:0];    
conv2d #("weight/max_polling/35_0.txt", 2, 0, 31, 31) conv2d_35_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_35_addbus_[0])
);
conv2d #("weight/max_polling/35_1.txt", 2, 0, 31, 31) conv2d_35_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_35_addbus_[1])
);
conv2d #("weight/max_polling/35_2.txt", 2, 0, 31, 31) conv2d_35_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_35_addbus_[2])
);
conv2d #("weight/max_polling/35_3.txt", 2, 0, 31, 31) conv2d_35_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_35_addbus_[3])
);
conv2d #("weight/max_polling/35_4.txt", 2, 0, 31, 31) conv2d_35_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_35_addbus_[4])
);
conv2d #("weight/max_polling/35_5.txt", 2, 0, 31, 31) conv2d_35_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_35_addbus_[5])
);
conv2d #("weight/max_polling/35_6.txt", 2, 0, 31, 31) conv2d_35_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_35_addbus_[6])
);
conv2d #("weight/max_polling/35_7.txt", 2, 0, 31, 31) conv2d_35_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_35_addbus_[7])
);
conv2d #("weight/max_polling/35_8.txt", 2, 0, 31, 31) conv2d_35_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_35_addbus_[8])
);
conv2d #("weight/max_polling/35_9.txt", 2, 0, 31, 31) conv2d_35_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_35_addbus_[9])
);
conv2d #("weight/max_polling/35_10.txt", 2, 0, 31, 31) conv2d_35_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_35_addbus_[10])
);
conv2d #("weight/max_polling/35_11.txt", 2, 0, 31, 31) conv2d_35_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_35_addbus_[11])
);
conv2d #("weight/max_polling/35_12.txt", 2, 0, 31, 31) conv2d_35_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_35_addbus_[12])
);
conv2d #("weight/max_polling/35_13.txt", 2, 0, 31, 31) conv2d_35_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_35_addbus_[13])
);
conv2d #("weight/max_polling/35_14.txt", 2, 0, 31, 31) conv2d_35_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_35_addbus_[14])
);
conv2d #("weight/max_polling/35_15.txt", 2, 0, 31, 31) conv2d_35_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_35_addbus_[15])
);
conv2d #("weight/max_polling/35_16.txt", 2, 0, 31, 31) conv2d_35_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_35_addbus_[16])
);
conv2d #("weight/max_polling/35_17.txt", 2, 0, 31, 31) conv2d_35_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_35_addbus_[17])
);
conv2d #("weight/max_polling/35_18.txt", 2, 0, 31, 31) conv2d_35_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_35_addbus_[18])
);
conv2d #("weight/max_polling/35_19.txt", 2, 0, 31, 31) conv2d_35_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_35_addbus_[19])
);
conv2d #("weight/max_polling/35_20.txt", 2, 0, 31, 31) conv2d_35_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_35_addbus_[20])
);
conv2d #("weight/max_polling/35_21.txt", 2, 0, 31, 31) conv2d_35_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_35_addbus_[21])
);
conv2d #("weight/max_polling/35_22.txt", 2, 0, 31, 31) conv2d_35_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_35_addbus_[22])
);
conv2d #("weight/max_polling/35_23.txt", 2, 0, 31, 31) conv2d_35_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_35_addbus_[23])
);
conv2d #("weight/max_polling/35_24.txt", 2, 0, 31, 31) conv2d_35_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_35_addbus_[24])
);
conv2d #("weight/max_polling/35_25.txt", 2, 0, 31, 31) conv2d_35_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_35_addbus_[25])
);
conv2d #("weight/max_polling/35_26.txt", 2, 0, 31, 31) conv2d_35_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_35_addbus_[26])
);
conv2d #("weight/max_polling/35_27.txt", 2, 0, 31, 31) conv2d_35_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_35_addbus_[27])
);
conv2d #("weight/max_polling/35_28.txt", 2, 0, 31, 31) conv2d_35_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_35_addbus_[28])
);
conv2d #("weight/max_polling/35_29.txt", 2, 0, 31, 31) conv2d_35_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_35_addbus_[29])
);
conv2d #("weight/max_polling/35_30.txt", 2, 0, 31, 31) conv2d_35_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_35_addbus_[30])
);
conv2d #("weight/max_polling/35_31.txt", 2, 0, 31, 31) conv2d_35_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_35_addbus_[31])
);
conv2d #("weight/max_polling/35_32.txt", 2, 0, 31, 31) conv2d_35_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_35_addbus_[32])
);
conv2d #("weight/max_polling/35_33.txt", 2, 0, 31, 31) conv2d_35_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_35_addbus_[33])
);
conv2d #("weight/max_polling/35_34.txt", 2, 0, 31, 31) conv2d_35_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_35_addbus_[34])
);
conv2d #("weight/max_polling/35_35.txt", 2, 0, 31, 31) conv2d_35_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_35_addbus_[35])
);
conv2d #("weight/max_polling/35_36.txt", 2, 0, 31, 31) conv2d_35_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_35_addbus_[36])
);
conv2d #("weight/max_polling/35_37.txt", 2, 0, 31, 31) conv2d_35_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_35_addbus_[37])
);
conv2d #("weight/max_polling/35_38.txt", 2, 0, 31, 31) conv2d_35_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_35_addbus_[38])
);
conv2d #("weight/max_polling/35_39.txt", 2, 0, 31, 31) conv2d_35_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_35_addbus_[39])
);
conv2d #("weight/max_polling/35_40.txt", 2, 0, 31, 31) conv2d_35_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_35_addbus_[40])
);
conv2d #("weight/max_polling/35_41.txt", 2, 0, 31, 31) conv2d_35_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_35_addbus_[41])
);
conv2d #("weight/max_polling/35_42.txt", 2, 0, 31, 31) conv2d_35_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_35_addbus_[42])
);
conv2d #("weight/max_polling/35_43.txt", 2, 0, 31, 31) conv2d_35_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_35_addbus_[43])
);
conv2d #("weight/max_polling/35_44.txt", 2, 0, 31, 31) conv2d_35_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_35_addbus_[44])
);
conv2d #("weight/max_polling/35_45.txt", 2, 0, 31, 31) conv2d_35_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_35_addbus_[45])
);
conv2d #("weight/max_polling/35_46.txt", 2, 0, 31, 31) conv2d_35_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_35_addbus_[46])
);
conv2d #("weight/max_polling/35_47.txt", 2, 0, 31, 31) conv2d_35_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_35_addbus_[47])
);
conv2d #("weight/max_polling/35_48.txt", 2, 0, 31, 31) conv2d_35_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_35_addbus_[48])
);
conv2d #("weight/max_polling/35_49.txt", 2, 0, 31, 31) conv2d_35_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_35_addbus_[49])
);
conv2d #("weight/max_polling/35_50.txt", 2, 0, 31, 31) conv2d_35_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_35_addbus_[50])
);
conv2d #("weight/max_polling/35_51.txt", 2, 0, 31, 31) conv2d_35_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_35_addbus_[51])
);
conv2d #("weight/max_polling/35_52.txt", 2, 0, 31, 31) conv2d_35_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_35_addbus_[52])
);
conv2d #("weight/max_polling/35_53.txt", 2, 0, 31, 31) conv2d_35_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_35_addbus_[53])
);
conv2d #("weight/max_polling/35_54.txt", 2, 0, 31, 31) conv2d_35_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_35_addbus_[54])
);
conv2d #("weight/max_polling/35_55.txt", 2, 0, 31, 31) conv2d_35_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_35_addbus_[55])
);
conv2d #("weight/max_polling/35_56.txt", 2, 0, 31, 31) conv2d_35_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_35_addbus_[56])
);
conv2d #("weight/max_polling/35_57.txt", 2, 0, 31, 31) conv2d_35_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_35_addbus_[57])
);
conv2d #("weight/max_polling/35_58.txt", 2, 0, 31, 31) conv2d_35_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_35_addbus_[58])
);
conv2d #("weight/max_polling/35_59.txt", 2, 0, 31, 31) conv2d_35_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_35_addbus_[59])
);
conv2d #("weight/max_polling/35_60.txt", 2, 0, 31, 31) conv2d_35_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_35_addbus_[60])
);
conv2d #("weight/max_polling/35_61.txt", 2, 0, 31, 31) conv2d_35_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_35_addbus_[61])
);
conv2d #("weight/max_polling/35_62.txt", 2, 0, 31, 31) conv2d_35_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_35_addbus_[62])
);
conv2d #("weight/max_polling/35_63.txt", 2, 0, 31, 31) conv2d_35_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_35_addbus_[63])
);
sum_64 #(15) sum_35( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[35]), 
        .data_in_0(_35_addbus_[0]), 
        .data_in_1(_35_addbus_[1]), 
        .data_in_2(_35_addbus_[2]), 
        .data_in_3(_35_addbus_[3]), 
        .data_in_4(_35_addbus_[4]), 
        .data_in_5(_35_addbus_[5]), 
        .data_in_6(_35_addbus_[6]), 
        .data_in_7(_35_addbus_[7]), 
        .data_in_8(_35_addbus_[8]), 
        .data_in_9(_35_addbus_[9]), 
        .data_in_10(_35_addbus_[10]), 
        .data_in_11(_35_addbus_[11]), 
        .data_in_12(_35_addbus_[12]), 
        .data_in_13(_35_addbus_[13]), 
        .data_in_14(_35_addbus_[14]), 
        .data_in_15(_35_addbus_[15]), 
        .data_in_16(_35_addbus_[16]), 
        .data_in_17(_35_addbus_[17]), 
        .data_in_18(_35_addbus_[18]), 
        .data_in_19(_35_addbus_[19]), 
        .data_in_20(_35_addbus_[20]), 
        .data_in_21(_35_addbus_[21]), 
        .data_in_22(_35_addbus_[22]), 
        .data_in_23(_35_addbus_[23]), 
        .data_in_24(_35_addbus_[24]), 
        .data_in_25(_35_addbus_[25]), 
        .data_in_26(_35_addbus_[26]), 
        .data_in_27(_35_addbus_[27]), 
        .data_in_28(_35_addbus_[28]), 
        .data_in_29(_35_addbus_[29]), 
        .data_in_30(_35_addbus_[30]), 
        .data_in_31(_35_addbus_[31]), 
        .data_in_32(_35_addbus_[32]), 
        .data_in_33(_35_addbus_[33]), 
        .data_in_34(_35_addbus_[34]), 
        .data_in_35(_35_addbus_[35]), 
        .data_in_36(_35_addbus_[36]), 
        .data_in_37(_35_addbus_[37]), 
        .data_in_38(_35_addbus_[38]), 
        .data_in_39(_35_addbus_[39]), 
        .data_in_40(_35_addbus_[40]), 
        .data_in_41(_35_addbus_[41]), 
        .data_in_42(_35_addbus_[42]), 
        .data_in_43(_35_addbus_[43]), 
        .data_in_44(_35_addbus_[44]), 
        .data_in_45(_35_addbus_[45]), 
        .data_in_46(_35_addbus_[46]), 
        .data_in_47(_35_addbus_[47]), 
        .data_in_48(_35_addbus_[48]), 
        .data_in_49(_35_addbus_[49]), 
        .data_in_50(_35_addbus_[50]), 
        .data_in_51(_35_addbus_[51]), 
        .data_in_52(_35_addbus_[52]), 
        .data_in_53(_35_addbus_[53]), 
        .data_in_54(_35_addbus_[54]), 
        .data_in_55(_35_addbus_[55]), 
        .data_in_56(_35_addbus_[56]), 
        .data_in_57(_35_addbus_[57]), 
        .data_in_58(_35_addbus_[58]), 
        .data_in_59(_35_addbus_[59]), 
        .data_in_60(_35_addbus_[60]), 
        .data_in_61(_35_addbus_[61]), 
        .data_in_62(_35_addbus_[62]), 
        .data_in_63(_35_addbus_[63]) 
); 
wire [31:0] _36_addbus_[63:0];    
conv2d #("weight/max_polling/36_0.txt", 2, 0, 31, 31) conv2d_36_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_36_addbus_[0])
);
conv2d #("weight/max_polling/36_1.txt", 2, 0, 31, 31) conv2d_36_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_36_addbus_[1])
);
conv2d #("weight/max_polling/36_2.txt", 2, 0, 31, 31) conv2d_36_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_36_addbus_[2])
);
conv2d #("weight/max_polling/36_3.txt", 2, 0, 31, 31) conv2d_36_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_36_addbus_[3])
);
conv2d #("weight/max_polling/36_4.txt", 2, 0, 31, 31) conv2d_36_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_36_addbus_[4])
);
conv2d #("weight/max_polling/36_5.txt", 2, 0, 31, 31) conv2d_36_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_36_addbus_[5])
);
conv2d #("weight/max_polling/36_6.txt", 2, 0, 31, 31) conv2d_36_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_36_addbus_[6])
);
conv2d #("weight/max_polling/36_7.txt", 2, 0, 31, 31) conv2d_36_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_36_addbus_[7])
);
conv2d #("weight/max_polling/36_8.txt", 2, 0, 31, 31) conv2d_36_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_36_addbus_[8])
);
conv2d #("weight/max_polling/36_9.txt", 2, 0, 31, 31) conv2d_36_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_36_addbus_[9])
);
conv2d #("weight/max_polling/36_10.txt", 2, 0, 31, 31) conv2d_36_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_36_addbus_[10])
);
conv2d #("weight/max_polling/36_11.txt", 2, 0, 31, 31) conv2d_36_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_36_addbus_[11])
);
conv2d #("weight/max_polling/36_12.txt", 2, 0, 31, 31) conv2d_36_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_36_addbus_[12])
);
conv2d #("weight/max_polling/36_13.txt", 2, 0, 31, 31) conv2d_36_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_36_addbus_[13])
);
conv2d #("weight/max_polling/36_14.txt", 2, 0, 31, 31) conv2d_36_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_36_addbus_[14])
);
conv2d #("weight/max_polling/36_15.txt", 2, 0, 31, 31) conv2d_36_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_36_addbus_[15])
);
conv2d #("weight/max_polling/36_16.txt", 2, 0, 31, 31) conv2d_36_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_36_addbus_[16])
);
conv2d #("weight/max_polling/36_17.txt", 2, 0, 31, 31) conv2d_36_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_36_addbus_[17])
);
conv2d #("weight/max_polling/36_18.txt", 2, 0, 31, 31) conv2d_36_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_36_addbus_[18])
);
conv2d #("weight/max_polling/36_19.txt", 2, 0, 31, 31) conv2d_36_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_36_addbus_[19])
);
conv2d #("weight/max_polling/36_20.txt", 2, 0, 31, 31) conv2d_36_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_36_addbus_[20])
);
conv2d #("weight/max_polling/36_21.txt", 2, 0, 31, 31) conv2d_36_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_36_addbus_[21])
);
conv2d #("weight/max_polling/36_22.txt", 2, 0, 31, 31) conv2d_36_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_36_addbus_[22])
);
conv2d #("weight/max_polling/36_23.txt", 2, 0, 31, 31) conv2d_36_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_36_addbus_[23])
);
conv2d #("weight/max_polling/36_24.txt", 2, 0, 31, 31) conv2d_36_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_36_addbus_[24])
);
conv2d #("weight/max_polling/36_25.txt", 2, 0, 31, 31) conv2d_36_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_36_addbus_[25])
);
conv2d #("weight/max_polling/36_26.txt", 2, 0, 31, 31) conv2d_36_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_36_addbus_[26])
);
conv2d #("weight/max_polling/36_27.txt", 2, 0, 31, 31) conv2d_36_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_36_addbus_[27])
);
conv2d #("weight/max_polling/36_28.txt", 2, 0, 31, 31) conv2d_36_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_36_addbus_[28])
);
conv2d #("weight/max_polling/36_29.txt", 2, 0, 31, 31) conv2d_36_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_36_addbus_[29])
);
conv2d #("weight/max_polling/36_30.txt", 2, 0, 31, 31) conv2d_36_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_36_addbus_[30])
);
conv2d #("weight/max_polling/36_31.txt", 2, 0, 31, 31) conv2d_36_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_36_addbus_[31])
);
conv2d #("weight/max_polling/36_32.txt", 2, 0, 31, 31) conv2d_36_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_36_addbus_[32])
);
conv2d #("weight/max_polling/36_33.txt", 2, 0, 31, 31) conv2d_36_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_36_addbus_[33])
);
conv2d #("weight/max_polling/36_34.txt", 2, 0, 31, 31) conv2d_36_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_36_addbus_[34])
);
conv2d #("weight/max_polling/36_35.txt", 2, 0, 31, 31) conv2d_36_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_36_addbus_[35])
);
conv2d #("weight/max_polling/36_36.txt", 2, 0, 31, 31) conv2d_36_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_36_addbus_[36])
);
conv2d #("weight/max_polling/36_37.txt", 2, 0, 31, 31) conv2d_36_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_36_addbus_[37])
);
conv2d #("weight/max_polling/36_38.txt", 2, 0, 31, 31) conv2d_36_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_36_addbus_[38])
);
conv2d #("weight/max_polling/36_39.txt", 2, 0, 31, 31) conv2d_36_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_36_addbus_[39])
);
conv2d #("weight/max_polling/36_40.txt", 2, 0, 31, 31) conv2d_36_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_36_addbus_[40])
);
conv2d #("weight/max_polling/36_41.txt", 2, 0, 31, 31) conv2d_36_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_36_addbus_[41])
);
conv2d #("weight/max_polling/36_42.txt", 2, 0, 31, 31) conv2d_36_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_36_addbus_[42])
);
conv2d #("weight/max_polling/36_43.txt", 2, 0, 31, 31) conv2d_36_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_36_addbus_[43])
);
conv2d #("weight/max_polling/36_44.txt", 2, 0, 31, 31) conv2d_36_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_36_addbus_[44])
);
conv2d #("weight/max_polling/36_45.txt", 2, 0, 31, 31) conv2d_36_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_36_addbus_[45])
);
conv2d #("weight/max_polling/36_46.txt", 2, 0, 31, 31) conv2d_36_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_36_addbus_[46])
);
conv2d #("weight/max_polling/36_47.txt", 2, 0, 31, 31) conv2d_36_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_36_addbus_[47])
);
conv2d #("weight/max_polling/36_48.txt", 2, 0, 31, 31) conv2d_36_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_36_addbus_[48])
);
conv2d #("weight/max_polling/36_49.txt", 2, 0, 31, 31) conv2d_36_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_36_addbus_[49])
);
conv2d #("weight/max_polling/36_50.txt", 2, 0, 31, 31) conv2d_36_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_36_addbus_[50])
);
conv2d #("weight/max_polling/36_51.txt", 2, 0, 31, 31) conv2d_36_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_36_addbus_[51])
);
conv2d #("weight/max_polling/36_52.txt", 2, 0, 31, 31) conv2d_36_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_36_addbus_[52])
);
conv2d #("weight/max_polling/36_53.txt", 2, 0, 31, 31) conv2d_36_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_36_addbus_[53])
);
conv2d #("weight/max_polling/36_54.txt", 2, 0, 31, 31) conv2d_36_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_36_addbus_[54])
);
conv2d #("weight/max_polling/36_55.txt", 2, 0, 31, 31) conv2d_36_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_36_addbus_[55])
);
conv2d #("weight/max_polling/36_56.txt", 2, 0, 31, 31) conv2d_36_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_36_addbus_[56])
);
conv2d #("weight/max_polling/36_57.txt", 2, 0, 31, 31) conv2d_36_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_36_addbus_[57])
);
conv2d #("weight/max_polling/36_58.txt", 2, 0, 31, 31) conv2d_36_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_36_addbus_[58])
);
conv2d #("weight/max_polling/36_59.txt", 2, 0, 31, 31) conv2d_36_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_36_addbus_[59])
);
conv2d #("weight/max_polling/36_60.txt", 2, 0, 31, 31) conv2d_36_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_36_addbus_[60])
);
conv2d #("weight/max_polling/36_61.txt", 2, 0, 31, 31) conv2d_36_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_36_addbus_[61])
);
conv2d #("weight/max_polling/36_62.txt", 2, 0, 31, 31) conv2d_36_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_36_addbus_[62])
);
conv2d #("weight/max_polling/36_63.txt", 2, 0, 31, 31) conv2d_36_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_36_addbus_[63])
);
sum_64 #(15) sum_36( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[36]), 
        .data_in_0(_36_addbus_[0]), 
        .data_in_1(_36_addbus_[1]), 
        .data_in_2(_36_addbus_[2]), 
        .data_in_3(_36_addbus_[3]), 
        .data_in_4(_36_addbus_[4]), 
        .data_in_5(_36_addbus_[5]), 
        .data_in_6(_36_addbus_[6]), 
        .data_in_7(_36_addbus_[7]), 
        .data_in_8(_36_addbus_[8]), 
        .data_in_9(_36_addbus_[9]), 
        .data_in_10(_36_addbus_[10]), 
        .data_in_11(_36_addbus_[11]), 
        .data_in_12(_36_addbus_[12]), 
        .data_in_13(_36_addbus_[13]), 
        .data_in_14(_36_addbus_[14]), 
        .data_in_15(_36_addbus_[15]), 
        .data_in_16(_36_addbus_[16]), 
        .data_in_17(_36_addbus_[17]), 
        .data_in_18(_36_addbus_[18]), 
        .data_in_19(_36_addbus_[19]), 
        .data_in_20(_36_addbus_[20]), 
        .data_in_21(_36_addbus_[21]), 
        .data_in_22(_36_addbus_[22]), 
        .data_in_23(_36_addbus_[23]), 
        .data_in_24(_36_addbus_[24]), 
        .data_in_25(_36_addbus_[25]), 
        .data_in_26(_36_addbus_[26]), 
        .data_in_27(_36_addbus_[27]), 
        .data_in_28(_36_addbus_[28]), 
        .data_in_29(_36_addbus_[29]), 
        .data_in_30(_36_addbus_[30]), 
        .data_in_31(_36_addbus_[31]), 
        .data_in_32(_36_addbus_[32]), 
        .data_in_33(_36_addbus_[33]), 
        .data_in_34(_36_addbus_[34]), 
        .data_in_35(_36_addbus_[35]), 
        .data_in_36(_36_addbus_[36]), 
        .data_in_37(_36_addbus_[37]), 
        .data_in_38(_36_addbus_[38]), 
        .data_in_39(_36_addbus_[39]), 
        .data_in_40(_36_addbus_[40]), 
        .data_in_41(_36_addbus_[41]), 
        .data_in_42(_36_addbus_[42]), 
        .data_in_43(_36_addbus_[43]), 
        .data_in_44(_36_addbus_[44]), 
        .data_in_45(_36_addbus_[45]), 
        .data_in_46(_36_addbus_[46]), 
        .data_in_47(_36_addbus_[47]), 
        .data_in_48(_36_addbus_[48]), 
        .data_in_49(_36_addbus_[49]), 
        .data_in_50(_36_addbus_[50]), 
        .data_in_51(_36_addbus_[51]), 
        .data_in_52(_36_addbus_[52]), 
        .data_in_53(_36_addbus_[53]), 
        .data_in_54(_36_addbus_[54]), 
        .data_in_55(_36_addbus_[55]), 
        .data_in_56(_36_addbus_[56]), 
        .data_in_57(_36_addbus_[57]), 
        .data_in_58(_36_addbus_[58]), 
        .data_in_59(_36_addbus_[59]), 
        .data_in_60(_36_addbus_[60]), 
        .data_in_61(_36_addbus_[61]), 
        .data_in_62(_36_addbus_[62]), 
        .data_in_63(_36_addbus_[63]) 
); 
wire [31:0] _37_addbus_[63:0];    
conv2d #("weight/max_polling/37_0.txt", 2, 0, 31, 31) conv2d_37_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_37_addbus_[0])
);
conv2d #("weight/max_polling/37_1.txt", 2, 0, 31, 31) conv2d_37_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_37_addbus_[1])
);
conv2d #("weight/max_polling/37_2.txt", 2, 0, 31, 31) conv2d_37_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_37_addbus_[2])
);
conv2d #("weight/max_polling/37_3.txt", 2, 0, 31, 31) conv2d_37_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_37_addbus_[3])
);
conv2d #("weight/max_polling/37_4.txt", 2, 0, 31, 31) conv2d_37_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_37_addbus_[4])
);
conv2d #("weight/max_polling/37_5.txt", 2, 0, 31, 31) conv2d_37_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_37_addbus_[5])
);
conv2d #("weight/max_polling/37_6.txt", 2, 0, 31, 31) conv2d_37_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_37_addbus_[6])
);
conv2d #("weight/max_polling/37_7.txt", 2, 0, 31, 31) conv2d_37_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_37_addbus_[7])
);
conv2d #("weight/max_polling/37_8.txt", 2, 0, 31, 31) conv2d_37_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_37_addbus_[8])
);
conv2d #("weight/max_polling/37_9.txt", 2, 0, 31, 31) conv2d_37_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_37_addbus_[9])
);
conv2d #("weight/max_polling/37_10.txt", 2, 0, 31, 31) conv2d_37_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_37_addbus_[10])
);
conv2d #("weight/max_polling/37_11.txt", 2, 0, 31, 31) conv2d_37_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_37_addbus_[11])
);
conv2d #("weight/max_polling/37_12.txt", 2, 0, 31, 31) conv2d_37_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_37_addbus_[12])
);
conv2d #("weight/max_polling/37_13.txt", 2, 0, 31, 31) conv2d_37_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_37_addbus_[13])
);
conv2d #("weight/max_polling/37_14.txt", 2, 0, 31, 31) conv2d_37_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_37_addbus_[14])
);
conv2d #("weight/max_polling/37_15.txt", 2, 0, 31, 31) conv2d_37_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_37_addbus_[15])
);
conv2d #("weight/max_polling/37_16.txt", 2, 0, 31, 31) conv2d_37_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_37_addbus_[16])
);
conv2d #("weight/max_polling/37_17.txt", 2, 0, 31, 31) conv2d_37_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_37_addbus_[17])
);
conv2d #("weight/max_polling/37_18.txt", 2, 0, 31, 31) conv2d_37_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_37_addbus_[18])
);
conv2d #("weight/max_polling/37_19.txt", 2, 0, 31, 31) conv2d_37_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_37_addbus_[19])
);
conv2d #("weight/max_polling/37_20.txt", 2, 0, 31, 31) conv2d_37_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_37_addbus_[20])
);
conv2d #("weight/max_polling/37_21.txt", 2, 0, 31, 31) conv2d_37_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_37_addbus_[21])
);
conv2d #("weight/max_polling/37_22.txt", 2, 0, 31, 31) conv2d_37_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_37_addbus_[22])
);
conv2d #("weight/max_polling/37_23.txt", 2, 0, 31, 31) conv2d_37_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_37_addbus_[23])
);
conv2d #("weight/max_polling/37_24.txt", 2, 0, 31, 31) conv2d_37_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_37_addbus_[24])
);
conv2d #("weight/max_polling/37_25.txt", 2, 0, 31, 31) conv2d_37_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_37_addbus_[25])
);
conv2d #("weight/max_polling/37_26.txt", 2, 0, 31, 31) conv2d_37_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_37_addbus_[26])
);
conv2d #("weight/max_polling/37_27.txt", 2, 0, 31, 31) conv2d_37_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_37_addbus_[27])
);
conv2d #("weight/max_polling/37_28.txt", 2, 0, 31, 31) conv2d_37_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_37_addbus_[28])
);
conv2d #("weight/max_polling/37_29.txt", 2, 0, 31, 31) conv2d_37_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_37_addbus_[29])
);
conv2d #("weight/max_polling/37_30.txt", 2, 0, 31, 31) conv2d_37_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_37_addbus_[30])
);
conv2d #("weight/max_polling/37_31.txt", 2, 0, 31, 31) conv2d_37_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_37_addbus_[31])
);
conv2d #("weight/max_polling/37_32.txt", 2, 0, 31, 31) conv2d_37_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_37_addbus_[32])
);
conv2d #("weight/max_polling/37_33.txt", 2, 0, 31, 31) conv2d_37_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_37_addbus_[33])
);
conv2d #("weight/max_polling/37_34.txt", 2, 0, 31, 31) conv2d_37_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_37_addbus_[34])
);
conv2d #("weight/max_polling/37_35.txt", 2, 0, 31, 31) conv2d_37_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_37_addbus_[35])
);
conv2d #("weight/max_polling/37_36.txt", 2, 0, 31, 31) conv2d_37_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_37_addbus_[36])
);
conv2d #("weight/max_polling/37_37.txt", 2, 0, 31, 31) conv2d_37_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_37_addbus_[37])
);
conv2d #("weight/max_polling/37_38.txt", 2, 0, 31, 31) conv2d_37_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_37_addbus_[38])
);
conv2d #("weight/max_polling/37_39.txt", 2, 0, 31, 31) conv2d_37_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_37_addbus_[39])
);
conv2d #("weight/max_polling/37_40.txt", 2, 0, 31, 31) conv2d_37_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_37_addbus_[40])
);
conv2d #("weight/max_polling/37_41.txt", 2, 0, 31, 31) conv2d_37_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_37_addbus_[41])
);
conv2d #("weight/max_polling/37_42.txt", 2, 0, 31, 31) conv2d_37_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_37_addbus_[42])
);
conv2d #("weight/max_polling/37_43.txt", 2, 0, 31, 31) conv2d_37_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_37_addbus_[43])
);
conv2d #("weight/max_polling/37_44.txt", 2, 0, 31, 31) conv2d_37_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_37_addbus_[44])
);
conv2d #("weight/max_polling/37_45.txt", 2, 0, 31, 31) conv2d_37_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_37_addbus_[45])
);
conv2d #("weight/max_polling/37_46.txt", 2, 0, 31, 31) conv2d_37_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_37_addbus_[46])
);
conv2d #("weight/max_polling/37_47.txt", 2, 0, 31, 31) conv2d_37_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_37_addbus_[47])
);
conv2d #("weight/max_polling/37_48.txt", 2, 0, 31, 31) conv2d_37_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_37_addbus_[48])
);
conv2d #("weight/max_polling/37_49.txt", 2, 0, 31, 31) conv2d_37_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_37_addbus_[49])
);
conv2d #("weight/max_polling/37_50.txt", 2, 0, 31, 31) conv2d_37_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_37_addbus_[50])
);
conv2d #("weight/max_polling/37_51.txt", 2, 0, 31, 31) conv2d_37_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_37_addbus_[51])
);
conv2d #("weight/max_polling/37_52.txt", 2, 0, 31, 31) conv2d_37_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_37_addbus_[52])
);
conv2d #("weight/max_polling/37_53.txt", 2, 0, 31, 31) conv2d_37_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_37_addbus_[53])
);
conv2d #("weight/max_polling/37_54.txt", 2, 0, 31, 31) conv2d_37_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_37_addbus_[54])
);
conv2d #("weight/max_polling/37_55.txt", 2, 0, 31, 31) conv2d_37_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_37_addbus_[55])
);
conv2d #("weight/max_polling/37_56.txt", 2, 0, 31, 31) conv2d_37_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_37_addbus_[56])
);
conv2d #("weight/max_polling/37_57.txt", 2, 0, 31, 31) conv2d_37_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_37_addbus_[57])
);
conv2d #("weight/max_polling/37_58.txt", 2, 0, 31, 31) conv2d_37_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_37_addbus_[58])
);
conv2d #("weight/max_polling/37_59.txt", 2, 0, 31, 31) conv2d_37_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_37_addbus_[59])
);
conv2d #("weight/max_polling/37_60.txt", 2, 0, 31, 31) conv2d_37_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_37_addbus_[60])
);
conv2d #("weight/max_polling/37_61.txt", 2, 0, 31, 31) conv2d_37_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_37_addbus_[61])
);
conv2d #("weight/max_polling/37_62.txt", 2, 0, 31, 31) conv2d_37_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_37_addbus_[62])
);
conv2d #("weight/max_polling/37_63.txt", 2, 0, 31, 31) conv2d_37_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_37_addbus_[63])
);
sum_64 #(15) sum_37( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[37]), 
        .data_in_0(_37_addbus_[0]), 
        .data_in_1(_37_addbus_[1]), 
        .data_in_2(_37_addbus_[2]), 
        .data_in_3(_37_addbus_[3]), 
        .data_in_4(_37_addbus_[4]), 
        .data_in_5(_37_addbus_[5]), 
        .data_in_6(_37_addbus_[6]), 
        .data_in_7(_37_addbus_[7]), 
        .data_in_8(_37_addbus_[8]), 
        .data_in_9(_37_addbus_[9]), 
        .data_in_10(_37_addbus_[10]), 
        .data_in_11(_37_addbus_[11]), 
        .data_in_12(_37_addbus_[12]), 
        .data_in_13(_37_addbus_[13]), 
        .data_in_14(_37_addbus_[14]), 
        .data_in_15(_37_addbus_[15]), 
        .data_in_16(_37_addbus_[16]), 
        .data_in_17(_37_addbus_[17]), 
        .data_in_18(_37_addbus_[18]), 
        .data_in_19(_37_addbus_[19]), 
        .data_in_20(_37_addbus_[20]), 
        .data_in_21(_37_addbus_[21]), 
        .data_in_22(_37_addbus_[22]), 
        .data_in_23(_37_addbus_[23]), 
        .data_in_24(_37_addbus_[24]), 
        .data_in_25(_37_addbus_[25]), 
        .data_in_26(_37_addbus_[26]), 
        .data_in_27(_37_addbus_[27]), 
        .data_in_28(_37_addbus_[28]), 
        .data_in_29(_37_addbus_[29]), 
        .data_in_30(_37_addbus_[30]), 
        .data_in_31(_37_addbus_[31]), 
        .data_in_32(_37_addbus_[32]), 
        .data_in_33(_37_addbus_[33]), 
        .data_in_34(_37_addbus_[34]), 
        .data_in_35(_37_addbus_[35]), 
        .data_in_36(_37_addbus_[36]), 
        .data_in_37(_37_addbus_[37]), 
        .data_in_38(_37_addbus_[38]), 
        .data_in_39(_37_addbus_[39]), 
        .data_in_40(_37_addbus_[40]), 
        .data_in_41(_37_addbus_[41]), 
        .data_in_42(_37_addbus_[42]), 
        .data_in_43(_37_addbus_[43]), 
        .data_in_44(_37_addbus_[44]), 
        .data_in_45(_37_addbus_[45]), 
        .data_in_46(_37_addbus_[46]), 
        .data_in_47(_37_addbus_[47]), 
        .data_in_48(_37_addbus_[48]), 
        .data_in_49(_37_addbus_[49]), 
        .data_in_50(_37_addbus_[50]), 
        .data_in_51(_37_addbus_[51]), 
        .data_in_52(_37_addbus_[52]), 
        .data_in_53(_37_addbus_[53]), 
        .data_in_54(_37_addbus_[54]), 
        .data_in_55(_37_addbus_[55]), 
        .data_in_56(_37_addbus_[56]), 
        .data_in_57(_37_addbus_[57]), 
        .data_in_58(_37_addbus_[58]), 
        .data_in_59(_37_addbus_[59]), 
        .data_in_60(_37_addbus_[60]), 
        .data_in_61(_37_addbus_[61]), 
        .data_in_62(_37_addbus_[62]), 
        .data_in_63(_37_addbus_[63]) 
); 
wire [31:0] _38_addbus_[63:0];    
conv2d #("weight/max_polling/38_0.txt", 2, 0, 31, 31) conv2d_38_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_38_addbus_[0])
);
conv2d #("weight/max_polling/38_1.txt", 2, 0, 31, 31) conv2d_38_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_38_addbus_[1])
);
conv2d #("weight/max_polling/38_2.txt", 2, 0, 31, 31) conv2d_38_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_38_addbus_[2])
);
conv2d #("weight/max_polling/38_3.txt", 2, 0, 31, 31) conv2d_38_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_38_addbus_[3])
);
conv2d #("weight/max_polling/38_4.txt", 2, 0, 31, 31) conv2d_38_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_38_addbus_[4])
);
conv2d #("weight/max_polling/38_5.txt", 2, 0, 31, 31) conv2d_38_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_38_addbus_[5])
);
conv2d #("weight/max_polling/38_6.txt", 2, 0, 31, 31) conv2d_38_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_38_addbus_[6])
);
conv2d #("weight/max_polling/38_7.txt", 2, 0, 31, 31) conv2d_38_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_38_addbus_[7])
);
conv2d #("weight/max_polling/38_8.txt", 2, 0, 31, 31) conv2d_38_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_38_addbus_[8])
);
conv2d #("weight/max_polling/38_9.txt", 2, 0, 31, 31) conv2d_38_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_38_addbus_[9])
);
conv2d #("weight/max_polling/38_10.txt", 2, 0, 31, 31) conv2d_38_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_38_addbus_[10])
);
conv2d #("weight/max_polling/38_11.txt", 2, 0, 31, 31) conv2d_38_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_38_addbus_[11])
);
conv2d #("weight/max_polling/38_12.txt", 2, 0, 31, 31) conv2d_38_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_38_addbus_[12])
);
conv2d #("weight/max_polling/38_13.txt", 2, 0, 31, 31) conv2d_38_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_38_addbus_[13])
);
conv2d #("weight/max_polling/38_14.txt", 2, 0, 31, 31) conv2d_38_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_38_addbus_[14])
);
conv2d #("weight/max_polling/38_15.txt", 2, 0, 31, 31) conv2d_38_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_38_addbus_[15])
);
conv2d #("weight/max_polling/38_16.txt", 2, 0, 31, 31) conv2d_38_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_38_addbus_[16])
);
conv2d #("weight/max_polling/38_17.txt", 2, 0, 31, 31) conv2d_38_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_38_addbus_[17])
);
conv2d #("weight/max_polling/38_18.txt", 2, 0, 31, 31) conv2d_38_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_38_addbus_[18])
);
conv2d #("weight/max_polling/38_19.txt", 2, 0, 31, 31) conv2d_38_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_38_addbus_[19])
);
conv2d #("weight/max_polling/38_20.txt", 2, 0, 31, 31) conv2d_38_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_38_addbus_[20])
);
conv2d #("weight/max_polling/38_21.txt", 2, 0, 31, 31) conv2d_38_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_38_addbus_[21])
);
conv2d #("weight/max_polling/38_22.txt", 2, 0, 31, 31) conv2d_38_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_38_addbus_[22])
);
conv2d #("weight/max_polling/38_23.txt", 2, 0, 31, 31) conv2d_38_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_38_addbus_[23])
);
conv2d #("weight/max_polling/38_24.txt", 2, 0, 31, 31) conv2d_38_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_38_addbus_[24])
);
conv2d #("weight/max_polling/38_25.txt", 2, 0, 31, 31) conv2d_38_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_38_addbus_[25])
);
conv2d #("weight/max_polling/38_26.txt", 2, 0, 31, 31) conv2d_38_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_38_addbus_[26])
);
conv2d #("weight/max_polling/38_27.txt", 2, 0, 31, 31) conv2d_38_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_38_addbus_[27])
);
conv2d #("weight/max_polling/38_28.txt", 2, 0, 31, 31) conv2d_38_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_38_addbus_[28])
);
conv2d #("weight/max_polling/38_29.txt", 2, 0, 31, 31) conv2d_38_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_38_addbus_[29])
);
conv2d #("weight/max_polling/38_30.txt", 2, 0, 31, 31) conv2d_38_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_38_addbus_[30])
);
conv2d #("weight/max_polling/38_31.txt", 2, 0, 31, 31) conv2d_38_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_38_addbus_[31])
);
conv2d #("weight/max_polling/38_32.txt", 2, 0, 31, 31) conv2d_38_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_38_addbus_[32])
);
conv2d #("weight/max_polling/38_33.txt", 2, 0, 31, 31) conv2d_38_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_38_addbus_[33])
);
conv2d #("weight/max_polling/38_34.txt", 2, 0, 31, 31) conv2d_38_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_38_addbus_[34])
);
conv2d #("weight/max_polling/38_35.txt", 2, 0, 31, 31) conv2d_38_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_38_addbus_[35])
);
conv2d #("weight/max_polling/38_36.txt", 2, 0, 31, 31) conv2d_38_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_38_addbus_[36])
);
conv2d #("weight/max_polling/38_37.txt", 2, 0, 31, 31) conv2d_38_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_38_addbus_[37])
);
conv2d #("weight/max_polling/38_38.txt", 2, 0, 31, 31) conv2d_38_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_38_addbus_[38])
);
conv2d #("weight/max_polling/38_39.txt", 2, 0, 31, 31) conv2d_38_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_38_addbus_[39])
);
conv2d #("weight/max_polling/38_40.txt", 2, 0, 31, 31) conv2d_38_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_38_addbus_[40])
);
conv2d #("weight/max_polling/38_41.txt", 2, 0, 31, 31) conv2d_38_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_38_addbus_[41])
);
conv2d #("weight/max_polling/38_42.txt", 2, 0, 31, 31) conv2d_38_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_38_addbus_[42])
);
conv2d #("weight/max_polling/38_43.txt", 2, 0, 31, 31) conv2d_38_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_38_addbus_[43])
);
conv2d #("weight/max_polling/38_44.txt", 2, 0, 31, 31) conv2d_38_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_38_addbus_[44])
);
conv2d #("weight/max_polling/38_45.txt", 2, 0, 31, 31) conv2d_38_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_38_addbus_[45])
);
conv2d #("weight/max_polling/38_46.txt", 2, 0, 31, 31) conv2d_38_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_38_addbus_[46])
);
conv2d #("weight/max_polling/38_47.txt", 2, 0, 31, 31) conv2d_38_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_38_addbus_[47])
);
conv2d #("weight/max_polling/38_48.txt", 2, 0, 31, 31) conv2d_38_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_38_addbus_[48])
);
conv2d #("weight/max_polling/38_49.txt", 2, 0, 31, 31) conv2d_38_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_38_addbus_[49])
);
conv2d #("weight/max_polling/38_50.txt", 2, 0, 31, 31) conv2d_38_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_38_addbus_[50])
);
conv2d #("weight/max_polling/38_51.txt", 2, 0, 31, 31) conv2d_38_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_38_addbus_[51])
);
conv2d #("weight/max_polling/38_52.txt", 2, 0, 31, 31) conv2d_38_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_38_addbus_[52])
);
conv2d #("weight/max_polling/38_53.txt", 2, 0, 31, 31) conv2d_38_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_38_addbus_[53])
);
conv2d #("weight/max_polling/38_54.txt", 2, 0, 31, 31) conv2d_38_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_38_addbus_[54])
);
conv2d #("weight/max_polling/38_55.txt", 2, 0, 31, 31) conv2d_38_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_38_addbus_[55])
);
conv2d #("weight/max_polling/38_56.txt", 2, 0, 31, 31) conv2d_38_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_38_addbus_[56])
);
conv2d #("weight/max_polling/38_57.txt", 2, 0, 31, 31) conv2d_38_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_38_addbus_[57])
);
conv2d #("weight/max_polling/38_58.txt", 2, 0, 31, 31) conv2d_38_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_38_addbus_[58])
);
conv2d #("weight/max_polling/38_59.txt", 2, 0, 31, 31) conv2d_38_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_38_addbus_[59])
);
conv2d #("weight/max_polling/38_60.txt", 2, 0, 31, 31) conv2d_38_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_38_addbus_[60])
);
conv2d #("weight/max_polling/38_61.txt", 2, 0, 31, 31) conv2d_38_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_38_addbus_[61])
);
conv2d #("weight/max_polling/38_62.txt", 2, 0, 31, 31) conv2d_38_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_38_addbus_[62])
);
conv2d #("weight/max_polling/38_63.txt", 2, 0, 31, 31) conv2d_38_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_38_addbus_[63])
);
sum_64 #(15) sum_38( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[38]), 
        .data_in_0(_38_addbus_[0]), 
        .data_in_1(_38_addbus_[1]), 
        .data_in_2(_38_addbus_[2]), 
        .data_in_3(_38_addbus_[3]), 
        .data_in_4(_38_addbus_[4]), 
        .data_in_5(_38_addbus_[5]), 
        .data_in_6(_38_addbus_[6]), 
        .data_in_7(_38_addbus_[7]), 
        .data_in_8(_38_addbus_[8]), 
        .data_in_9(_38_addbus_[9]), 
        .data_in_10(_38_addbus_[10]), 
        .data_in_11(_38_addbus_[11]), 
        .data_in_12(_38_addbus_[12]), 
        .data_in_13(_38_addbus_[13]), 
        .data_in_14(_38_addbus_[14]), 
        .data_in_15(_38_addbus_[15]), 
        .data_in_16(_38_addbus_[16]), 
        .data_in_17(_38_addbus_[17]), 
        .data_in_18(_38_addbus_[18]), 
        .data_in_19(_38_addbus_[19]), 
        .data_in_20(_38_addbus_[20]), 
        .data_in_21(_38_addbus_[21]), 
        .data_in_22(_38_addbus_[22]), 
        .data_in_23(_38_addbus_[23]), 
        .data_in_24(_38_addbus_[24]), 
        .data_in_25(_38_addbus_[25]), 
        .data_in_26(_38_addbus_[26]), 
        .data_in_27(_38_addbus_[27]), 
        .data_in_28(_38_addbus_[28]), 
        .data_in_29(_38_addbus_[29]), 
        .data_in_30(_38_addbus_[30]), 
        .data_in_31(_38_addbus_[31]), 
        .data_in_32(_38_addbus_[32]), 
        .data_in_33(_38_addbus_[33]), 
        .data_in_34(_38_addbus_[34]), 
        .data_in_35(_38_addbus_[35]), 
        .data_in_36(_38_addbus_[36]), 
        .data_in_37(_38_addbus_[37]), 
        .data_in_38(_38_addbus_[38]), 
        .data_in_39(_38_addbus_[39]), 
        .data_in_40(_38_addbus_[40]), 
        .data_in_41(_38_addbus_[41]), 
        .data_in_42(_38_addbus_[42]), 
        .data_in_43(_38_addbus_[43]), 
        .data_in_44(_38_addbus_[44]), 
        .data_in_45(_38_addbus_[45]), 
        .data_in_46(_38_addbus_[46]), 
        .data_in_47(_38_addbus_[47]), 
        .data_in_48(_38_addbus_[48]), 
        .data_in_49(_38_addbus_[49]), 
        .data_in_50(_38_addbus_[50]), 
        .data_in_51(_38_addbus_[51]), 
        .data_in_52(_38_addbus_[52]), 
        .data_in_53(_38_addbus_[53]), 
        .data_in_54(_38_addbus_[54]), 
        .data_in_55(_38_addbus_[55]), 
        .data_in_56(_38_addbus_[56]), 
        .data_in_57(_38_addbus_[57]), 
        .data_in_58(_38_addbus_[58]), 
        .data_in_59(_38_addbus_[59]), 
        .data_in_60(_38_addbus_[60]), 
        .data_in_61(_38_addbus_[61]), 
        .data_in_62(_38_addbus_[62]), 
        .data_in_63(_38_addbus_[63]) 
); 
wire [31:0] _39_addbus_[63:0];    
conv2d #("weight/max_polling/39_0.txt", 2, 0, 31, 31) conv2d_39_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_39_addbus_[0])
);
conv2d #("weight/max_polling/39_1.txt", 2, 0, 31, 31) conv2d_39_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_39_addbus_[1])
);
conv2d #("weight/max_polling/39_2.txt", 2, 0, 31, 31) conv2d_39_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_39_addbus_[2])
);
conv2d #("weight/max_polling/39_3.txt", 2, 0, 31, 31) conv2d_39_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_39_addbus_[3])
);
conv2d #("weight/max_polling/39_4.txt", 2, 0, 31, 31) conv2d_39_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_39_addbus_[4])
);
conv2d #("weight/max_polling/39_5.txt", 2, 0, 31, 31) conv2d_39_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_39_addbus_[5])
);
conv2d #("weight/max_polling/39_6.txt", 2, 0, 31, 31) conv2d_39_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_39_addbus_[6])
);
conv2d #("weight/max_polling/39_7.txt", 2, 0, 31, 31) conv2d_39_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_39_addbus_[7])
);
conv2d #("weight/max_polling/39_8.txt", 2, 0, 31, 31) conv2d_39_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_39_addbus_[8])
);
conv2d #("weight/max_polling/39_9.txt", 2, 0, 31, 31) conv2d_39_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_39_addbus_[9])
);
conv2d #("weight/max_polling/39_10.txt", 2, 0, 31, 31) conv2d_39_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_39_addbus_[10])
);
conv2d #("weight/max_polling/39_11.txt", 2, 0, 31, 31) conv2d_39_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_39_addbus_[11])
);
conv2d #("weight/max_polling/39_12.txt", 2, 0, 31, 31) conv2d_39_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_39_addbus_[12])
);
conv2d #("weight/max_polling/39_13.txt", 2, 0, 31, 31) conv2d_39_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_39_addbus_[13])
);
conv2d #("weight/max_polling/39_14.txt", 2, 0, 31, 31) conv2d_39_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_39_addbus_[14])
);
conv2d #("weight/max_polling/39_15.txt", 2, 0, 31, 31) conv2d_39_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_39_addbus_[15])
);
conv2d #("weight/max_polling/39_16.txt", 2, 0, 31, 31) conv2d_39_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_39_addbus_[16])
);
conv2d #("weight/max_polling/39_17.txt", 2, 0, 31, 31) conv2d_39_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_39_addbus_[17])
);
conv2d #("weight/max_polling/39_18.txt", 2, 0, 31, 31) conv2d_39_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_39_addbus_[18])
);
conv2d #("weight/max_polling/39_19.txt", 2, 0, 31, 31) conv2d_39_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_39_addbus_[19])
);
conv2d #("weight/max_polling/39_20.txt", 2, 0, 31, 31) conv2d_39_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_39_addbus_[20])
);
conv2d #("weight/max_polling/39_21.txt", 2, 0, 31, 31) conv2d_39_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_39_addbus_[21])
);
conv2d #("weight/max_polling/39_22.txt", 2, 0, 31, 31) conv2d_39_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_39_addbus_[22])
);
conv2d #("weight/max_polling/39_23.txt", 2, 0, 31, 31) conv2d_39_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_39_addbus_[23])
);
conv2d #("weight/max_polling/39_24.txt", 2, 0, 31, 31) conv2d_39_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_39_addbus_[24])
);
conv2d #("weight/max_polling/39_25.txt", 2, 0, 31, 31) conv2d_39_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_39_addbus_[25])
);
conv2d #("weight/max_polling/39_26.txt", 2, 0, 31, 31) conv2d_39_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_39_addbus_[26])
);
conv2d #("weight/max_polling/39_27.txt", 2, 0, 31, 31) conv2d_39_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_39_addbus_[27])
);
conv2d #("weight/max_polling/39_28.txt", 2, 0, 31, 31) conv2d_39_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_39_addbus_[28])
);
conv2d #("weight/max_polling/39_29.txt", 2, 0, 31, 31) conv2d_39_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_39_addbus_[29])
);
conv2d #("weight/max_polling/39_30.txt", 2, 0, 31, 31) conv2d_39_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_39_addbus_[30])
);
conv2d #("weight/max_polling/39_31.txt", 2, 0, 31, 31) conv2d_39_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_39_addbus_[31])
);
conv2d #("weight/max_polling/39_32.txt", 2, 0, 31, 31) conv2d_39_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_39_addbus_[32])
);
conv2d #("weight/max_polling/39_33.txt", 2, 0, 31, 31) conv2d_39_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_39_addbus_[33])
);
conv2d #("weight/max_polling/39_34.txt", 2, 0, 31, 31) conv2d_39_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_39_addbus_[34])
);
conv2d #("weight/max_polling/39_35.txt", 2, 0, 31, 31) conv2d_39_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_39_addbus_[35])
);
conv2d #("weight/max_polling/39_36.txt", 2, 0, 31, 31) conv2d_39_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_39_addbus_[36])
);
conv2d #("weight/max_polling/39_37.txt", 2, 0, 31, 31) conv2d_39_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_39_addbus_[37])
);
conv2d #("weight/max_polling/39_38.txt", 2, 0, 31, 31) conv2d_39_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_39_addbus_[38])
);
conv2d #("weight/max_polling/39_39.txt", 2, 0, 31, 31) conv2d_39_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_39_addbus_[39])
);
conv2d #("weight/max_polling/39_40.txt", 2, 0, 31, 31) conv2d_39_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_39_addbus_[40])
);
conv2d #("weight/max_polling/39_41.txt", 2, 0, 31, 31) conv2d_39_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_39_addbus_[41])
);
conv2d #("weight/max_polling/39_42.txt", 2, 0, 31, 31) conv2d_39_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_39_addbus_[42])
);
conv2d #("weight/max_polling/39_43.txt", 2, 0, 31, 31) conv2d_39_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_39_addbus_[43])
);
conv2d #("weight/max_polling/39_44.txt", 2, 0, 31, 31) conv2d_39_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_39_addbus_[44])
);
conv2d #("weight/max_polling/39_45.txt", 2, 0, 31, 31) conv2d_39_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_39_addbus_[45])
);
conv2d #("weight/max_polling/39_46.txt", 2, 0, 31, 31) conv2d_39_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_39_addbus_[46])
);
conv2d #("weight/max_polling/39_47.txt", 2, 0, 31, 31) conv2d_39_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_39_addbus_[47])
);
conv2d #("weight/max_polling/39_48.txt", 2, 0, 31, 31) conv2d_39_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_39_addbus_[48])
);
conv2d #("weight/max_polling/39_49.txt", 2, 0, 31, 31) conv2d_39_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_39_addbus_[49])
);
conv2d #("weight/max_polling/39_50.txt", 2, 0, 31, 31) conv2d_39_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_39_addbus_[50])
);
conv2d #("weight/max_polling/39_51.txt", 2, 0, 31, 31) conv2d_39_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_39_addbus_[51])
);
conv2d #("weight/max_polling/39_52.txt", 2, 0, 31, 31) conv2d_39_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_39_addbus_[52])
);
conv2d #("weight/max_polling/39_53.txt", 2, 0, 31, 31) conv2d_39_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_39_addbus_[53])
);
conv2d #("weight/max_polling/39_54.txt", 2, 0, 31, 31) conv2d_39_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_39_addbus_[54])
);
conv2d #("weight/max_polling/39_55.txt", 2, 0, 31, 31) conv2d_39_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_39_addbus_[55])
);
conv2d #("weight/max_polling/39_56.txt", 2, 0, 31, 31) conv2d_39_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_39_addbus_[56])
);
conv2d #("weight/max_polling/39_57.txt", 2, 0, 31, 31) conv2d_39_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_39_addbus_[57])
);
conv2d #("weight/max_polling/39_58.txt", 2, 0, 31, 31) conv2d_39_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_39_addbus_[58])
);
conv2d #("weight/max_polling/39_59.txt", 2, 0, 31, 31) conv2d_39_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_39_addbus_[59])
);
conv2d #("weight/max_polling/39_60.txt", 2, 0, 31, 31) conv2d_39_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_39_addbus_[60])
);
conv2d #("weight/max_polling/39_61.txt", 2, 0, 31, 31) conv2d_39_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_39_addbus_[61])
);
conv2d #("weight/max_polling/39_62.txt", 2, 0, 31, 31) conv2d_39_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_39_addbus_[62])
);
conv2d #("weight/max_polling/39_63.txt", 2, 0, 31, 31) conv2d_39_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_39_addbus_[63])
);
sum_64 #(15) sum_39( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[39]), 
        .data_in_0(_39_addbus_[0]), 
        .data_in_1(_39_addbus_[1]), 
        .data_in_2(_39_addbus_[2]), 
        .data_in_3(_39_addbus_[3]), 
        .data_in_4(_39_addbus_[4]), 
        .data_in_5(_39_addbus_[5]), 
        .data_in_6(_39_addbus_[6]), 
        .data_in_7(_39_addbus_[7]), 
        .data_in_8(_39_addbus_[8]), 
        .data_in_9(_39_addbus_[9]), 
        .data_in_10(_39_addbus_[10]), 
        .data_in_11(_39_addbus_[11]), 
        .data_in_12(_39_addbus_[12]), 
        .data_in_13(_39_addbus_[13]), 
        .data_in_14(_39_addbus_[14]), 
        .data_in_15(_39_addbus_[15]), 
        .data_in_16(_39_addbus_[16]), 
        .data_in_17(_39_addbus_[17]), 
        .data_in_18(_39_addbus_[18]), 
        .data_in_19(_39_addbus_[19]), 
        .data_in_20(_39_addbus_[20]), 
        .data_in_21(_39_addbus_[21]), 
        .data_in_22(_39_addbus_[22]), 
        .data_in_23(_39_addbus_[23]), 
        .data_in_24(_39_addbus_[24]), 
        .data_in_25(_39_addbus_[25]), 
        .data_in_26(_39_addbus_[26]), 
        .data_in_27(_39_addbus_[27]), 
        .data_in_28(_39_addbus_[28]), 
        .data_in_29(_39_addbus_[29]), 
        .data_in_30(_39_addbus_[30]), 
        .data_in_31(_39_addbus_[31]), 
        .data_in_32(_39_addbus_[32]), 
        .data_in_33(_39_addbus_[33]), 
        .data_in_34(_39_addbus_[34]), 
        .data_in_35(_39_addbus_[35]), 
        .data_in_36(_39_addbus_[36]), 
        .data_in_37(_39_addbus_[37]), 
        .data_in_38(_39_addbus_[38]), 
        .data_in_39(_39_addbus_[39]), 
        .data_in_40(_39_addbus_[40]), 
        .data_in_41(_39_addbus_[41]), 
        .data_in_42(_39_addbus_[42]), 
        .data_in_43(_39_addbus_[43]), 
        .data_in_44(_39_addbus_[44]), 
        .data_in_45(_39_addbus_[45]), 
        .data_in_46(_39_addbus_[46]), 
        .data_in_47(_39_addbus_[47]), 
        .data_in_48(_39_addbus_[48]), 
        .data_in_49(_39_addbus_[49]), 
        .data_in_50(_39_addbus_[50]), 
        .data_in_51(_39_addbus_[51]), 
        .data_in_52(_39_addbus_[52]), 
        .data_in_53(_39_addbus_[53]), 
        .data_in_54(_39_addbus_[54]), 
        .data_in_55(_39_addbus_[55]), 
        .data_in_56(_39_addbus_[56]), 
        .data_in_57(_39_addbus_[57]), 
        .data_in_58(_39_addbus_[58]), 
        .data_in_59(_39_addbus_[59]), 
        .data_in_60(_39_addbus_[60]), 
        .data_in_61(_39_addbus_[61]), 
        .data_in_62(_39_addbus_[62]), 
        .data_in_63(_39_addbus_[63]) 
); 
wire [31:0] _40_addbus_[63:0];    
conv2d #("weight/max_polling/40_0.txt", 2, 0, 31, 31) conv2d_40_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_40_addbus_[0])
);
conv2d #("weight/max_polling/40_1.txt", 2, 0, 31, 31) conv2d_40_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_40_addbus_[1])
);
conv2d #("weight/max_polling/40_2.txt", 2, 0, 31, 31) conv2d_40_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_40_addbus_[2])
);
conv2d #("weight/max_polling/40_3.txt", 2, 0, 31, 31) conv2d_40_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_40_addbus_[3])
);
conv2d #("weight/max_polling/40_4.txt", 2, 0, 31, 31) conv2d_40_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_40_addbus_[4])
);
conv2d #("weight/max_polling/40_5.txt", 2, 0, 31, 31) conv2d_40_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_40_addbus_[5])
);
conv2d #("weight/max_polling/40_6.txt", 2, 0, 31, 31) conv2d_40_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_40_addbus_[6])
);
conv2d #("weight/max_polling/40_7.txt", 2, 0, 31, 31) conv2d_40_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_40_addbus_[7])
);
conv2d #("weight/max_polling/40_8.txt", 2, 0, 31, 31) conv2d_40_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_40_addbus_[8])
);
conv2d #("weight/max_polling/40_9.txt", 2, 0, 31, 31) conv2d_40_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_40_addbus_[9])
);
conv2d #("weight/max_polling/40_10.txt", 2, 0, 31, 31) conv2d_40_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_40_addbus_[10])
);
conv2d #("weight/max_polling/40_11.txt", 2, 0, 31, 31) conv2d_40_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_40_addbus_[11])
);
conv2d #("weight/max_polling/40_12.txt", 2, 0, 31, 31) conv2d_40_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_40_addbus_[12])
);
conv2d #("weight/max_polling/40_13.txt", 2, 0, 31, 31) conv2d_40_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_40_addbus_[13])
);
conv2d #("weight/max_polling/40_14.txt", 2, 0, 31, 31) conv2d_40_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_40_addbus_[14])
);
conv2d #("weight/max_polling/40_15.txt", 2, 0, 31, 31) conv2d_40_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_40_addbus_[15])
);
conv2d #("weight/max_polling/40_16.txt", 2, 0, 31, 31) conv2d_40_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_40_addbus_[16])
);
conv2d #("weight/max_polling/40_17.txt", 2, 0, 31, 31) conv2d_40_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_40_addbus_[17])
);
conv2d #("weight/max_polling/40_18.txt", 2, 0, 31, 31) conv2d_40_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_40_addbus_[18])
);
conv2d #("weight/max_polling/40_19.txt", 2, 0, 31, 31) conv2d_40_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_40_addbus_[19])
);
conv2d #("weight/max_polling/40_20.txt", 2, 0, 31, 31) conv2d_40_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_40_addbus_[20])
);
conv2d #("weight/max_polling/40_21.txt", 2, 0, 31, 31) conv2d_40_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_40_addbus_[21])
);
conv2d #("weight/max_polling/40_22.txt", 2, 0, 31, 31) conv2d_40_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_40_addbus_[22])
);
conv2d #("weight/max_polling/40_23.txt", 2, 0, 31, 31) conv2d_40_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_40_addbus_[23])
);
conv2d #("weight/max_polling/40_24.txt", 2, 0, 31, 31) conv2d_40_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_40_addbus_[24])
);
conv2d #("weight/max_polling/40_25.txt", 2, 0, 31, 31) conv2d_40_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_40_addbus_[25])
);
conv2d #("weight/max_polling/40_26.txt", 2, 0, 31, 31) conv2d_40_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_40_addbus_[26])
);
conv2d #("weight/max_polling/40_27.txt", 2, 0, 31, 31) conv2d_40_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_40_addbus_[27])
);
conv2d #("weight/max_polling/40_28.txt", 2, 0, 31, 31) conv2d_40_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_40_addbus_[28])
);
conv2d #("weight/max_polling/40_29.txt", 2, 0, 31, 31) conv2d_40_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_40_addbus_[29])
);
conv2d #("weight/max_polling/40_30.txt", 2, 0, 31, 31) conv2d_40_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_40_addbus_[30])
);
conv2d #("weight/max_polling/40_31.txt", 2, 0, 31, 31) conv2d_40_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_40_addbus_[31])
);
conv2d #("weight/max_polling/40_32.txt", 2, 0, 31, 31) conv2d_40_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_40_addbus_[32])
);
conv2d #("weight/max_polling/40_33.txt", 2, 0, 31, 31) conv2d_40_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_40_addbus_[33])
);
conv2d #("weight/max_polling/40_34.txt", 2, 0, 31, 31) conv2d_40_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_40_addbus_[34])
);
conv2d #("weight/max_polling/40_35.txt", 2, 0, 31, 31) conv2d_40_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_40_addbus_[35])
);
conv2d #("weight/max_polling/40_36.txt", 2, 0, 31, 31) conv2d_40_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_40_addbus_[36])
);
conv2d #("weight/max_polling/40_37.txt", 2, 0, 31, 31) conv2d_40_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_40_addbus_[37])
);
conv2d #("weight/max_polling/40_38.txt", 2, 0, 31, 31) conv2d_40_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_40_addbus_[38])
);
conv2d #("weight/max_polling/40_39.txt", 2, 0, 31, 31) conv2d_40_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_40_addbus_[39])
);
conv2d #("weight/max_polling/40_40.txt", 2, 0, 31, 31) conv2d_40_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_40_addbus_[40])
);
conv2d #("weight/max_polling/40_41.txt", 2, 0, 31, 31) conv2d_40_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_40_addbus_[41])
);
conv2d #("weight/max_polling/40_42.txt", 2, 0, 31, 31) conv2d_40_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_40_addbus_[42])
);
conv2d #("weight/max_polling/40_43.txt", 2, 0, 31, 31) conv2d_40_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_40_addbus_[43])
);
conv2d #("weight/max_polling/40_44.txt", 2, 0, 31, 31) conv2d_40_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_40_addbus_[44])
);
conv2d #("weight/max_polling/40_45.txt", 2, 0, 31, 31) conv2d_40_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_40_addbus_[45])
);
conv2d #("weight/max_polling/40_46.txt", 2, 0, 31, 31) conv2d_40_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_40_addbus_[46])
);
conv2d #("weight/max_polling/40_47.txt", 2, 0, 31, 31) conv2d_40_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_40_addbus_[47])
);
conv2d #("weight/max_polling/40_48.txt", 2, 0, 31, 31) conv2d_40_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_40_addbus_[48])
);
conv2d #("weight/max_polling/40_49.txt", 2, 0, 31, 31) conv2d_40_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_40_addbus_[49])
);
conv2d #("weight/max_polling/40_50.txt", 2, 0, 31, 31) conv2d_40_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_40_addbus_[50])
);
conv2d #("weight/max_polling/40_51.txt", 2, 0, 31, 31) conv2d_40_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_40_addbus_[51])
);
conv2d #("weight/max_polling/40_52.txt", 2, 0, 31, 31) conv2d_40_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_40_addbus_[52])
);
conv2d #("weight/max_polling/40_53.txt", 2, 0, 31, 31) conv2d_40_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_40_addbus_[53])
);
conv2d #("weight/max_polling/40_54.txt", 2, 0, 31, 31) conv2d_40_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_40_addbus_[54])
);
conv2d #("weight/max_polling/40_55.txt", 2, 0, 31, 31) conv2d_40_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_40_addbus_[55])
);
conv2d #("weight/max_polling/40_56.txt", 2, 0, 31, 31) conv2d_40_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_40_addbus_[56])
);
conv2d #("weight/max_polling/40_57.txt", 2, 0, 31, 31) conv2d_40_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_40_addbus_[57])
);
conv2d #("weight/max_polling/40_58.txt", 2, 0, 31, 31) conv2d_40_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_40_addbus_[58])
);
conv2d #("weight/max_polling/40_59.txt", 2, 0, 31, 31) conv2d_40_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_40_addbus_[59])
);
conv2d #("weight/max_polling/40_60.txt", 2, 0, 31, 31) conv2d_40_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_40_addbus_[60])
);
conv2d #("weight/max_polling/40_61.txt", 2, 0, 31, 31) conv2d_40_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_40_addbus_[61])
);
conv2d #("weight/max_polling/40_62.txt", 2, 0, 31, 31) conv2d_40_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_40_addbus_[62])
);
conv2d #("weight/max_polling/40_63.txt", 2, 0, 31, 31) conv2d_40_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_40_addbus_[63])
);
sum_64 #(15) sum_40( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[40]), 
        .data_in_0(_40_addbus_[0]), 
        .data_in_1(_40_addbus_[1]), 
        .data_in_2(_40_addbus_[2]), 
        .data_in_3(_40_addbus_[3]), 
        .data_in_4(_40_addbus_[4]), 
        .data_in_5(_40_addbus_[5]), 
        .data_in_6(_40_addbus_[6]), 
        .data_in_7(_40_addbus_[7]), 
        .data_in_8(_40_addbus_[8]), 
        .data_in_9(_40_addbus_[9]), 
        .data_in_10(_40_addbus_[10]), 
        .data_in_11(_40_addbus_[11]), 
        .data_in_12(_40_addbus_[12]), 
        .data_in_13(_40_addbus_[13]), 
        .data_in_14(_40_addbus_[14]), 
        .data_in_15(_40_addbus_[15]), 
        .data_in_16(_40_addbus_[16]), 
        .data_in_17(_40_addbus_[17]), 
        .data_in_18(_40_addbus_[18]), 
        .data_in_19(_40_addbus_[19]), 
        .data_in_20(_40_addbus_[20]), 
        .data_in_21(_40_addbus_[21]), 
        .data_in_22(_40_addbus_[22]), 
        .data_in_23(_40_addbus_[23]), 
        .data_in_24(_40_addbus_[24]), 
        .data_in_25(_40_addbus_[25]), 
        .data_in_26(_40_addbus_[26]), 
        .data_in_27(_40_addbus_[27]), 
        .data_in_28(_40_addbus_[28]), 
        .data_in_29(_40_addbus_[29]), 
        .data_in_30(_40_addbus_[30]), 
        .data_in_31(_40_addbus_[31]), 
        .data_in_32(_40_addbus_[32]), 
        .data_in_33(_40_addbus_[33]), 
        .data_in_34(_40_addbus_[34]), 
        .data_in_35(_40_addbus_[35]), 
        .data_in_36(_40_addbus_[36]), 
        .data_in_37(_40_addbus_[37]), 
        .data_in_38(_40_addbus_[38]), 
        .data_in_39(_40_addbus_[39]), 
        .data_in_40(_40_addbus_[40]), 
        .data_in_41(_40_addbus_[41]), 
        .data_in_42(_40_addbus_[42]), 
        .data_in_43(_40_addbus_[43]), 
        .data_in_44(_40_addbus_[44]), 
        .data_in_45(_40_addbus_[45]), 
        .data_in_46(_40_addbus_[46]), 
        .data_in_47(_40_addbus_[47]), 
        .data_in_48(_40_addbus_[48]), 
        .data_in_49(_40_addbus_[49]), 
        .data_in_50(_40_addbus_[50]), 
        .data_in_51(_40_addbus_[51]), 
        .data_in_52(_40_addbus_[52]), 
        .data_in_53(_40_addbus_[53]), 
        .data_in_54(_40_addbus_[54]), 
        .data_in_55(_40_addbus_[55]), 
        .data_in_56(_40_addbus_[56]), 
        .data_in_57(_40_addbus_[57]), 
        .data_in_58(_40_addbus_[58]), 
        .data_in_59(_40_addbus_[59]), 
        .data_in_60(_40_addbus_[60]), 
        .data_in_61(_40_addbus_[61]), 
        .data_in_62(_40_addbus_[62]), 
        .data_in_63(_40_addbus_[63]) 
); 
wire [31:0] _41_addbus_[63:0];    
conv2d #("weight/max_polling/41_0.txt", 2, 0, 31, 31) conv2d_41_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_41_addbus_[0])
);
conv2d #("weight/max_polling/41_1.txt", 2, 0, 31, 31) conv2d_41_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_41_addbus_[1])
);
conv2d #("weight/max_polling/41_2.txt", 2, 0, 31, 31) conv2d_41_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_41_addbus_[2])
);
conv2d #("weight/max_polling/41_3.txt", 2, 0, 31, 31) conv2d_41_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_41_addbus_[3])
);
conv2d #("weight/max_polling/41_4.txt", 2, 0, 31, 31) conv2d_41_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_41_addbus_[4])
);
conv2d #("weight/max_polling/41_5.txt", 2, 0, 31, 31) conv2d_41_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_41_addbus_[5])
);
conv2d #("weight/max_polling/41_6.txt", 2, 0, 31, 31) conv2d_41_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_41_addbus_[6])
);
conv2d #("weight/max_polling/41_7.txt", 2, 0, 31, 31) conv2d_41_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_41_addbus_[7])
);
conv2d #("weight/max_polling/41_8.txt", 2, 0, 31, 31) conv2d_41_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_41_addbus_[8])
);
conv2d #("weight/max_polling/41_9.txt", 2, 0, 31, 31) conv2d_41_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_41_addbus_[9])
);
conv2d #("weight/max_polling/41_10.txt", 2, 0, 31, 31) conv2d_41_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_41_addbus_[10])
);
conv2d #("weight/max_polling/41_11.txt", 2, 0, 31, 31) conv2d_41_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_41_addbus_[11])
);
conv2d #("weight/max_polling/41_12.txt", 2, 0, 31, 31) conv2d_41_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_41_addbus_[12])
);
conv2d #("weight/max_polling/41_13.txt", 2, 0, 31, 31) conv2d_41_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_41_addbus_[13])
);
conv2d #("weight/max_polling/41_14.txt", 2, 0, 31, 31) conv2d_41_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_41_addbus_[14])
);
conv2d #("weight/max_polling/41_15.txt", 2, 0, 31, 31) conv2d_41_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_41_addbus_[15])
);
conv2d #("weight/max_polling/41_16.txt", 2, 0, 31, 31) conv2d_41_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_41_addbus_[16])
);
conv2d #("weight/max_polling/41_17.txt", 2, 0, 31, 31) conv2d_41_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_41_addbus_[17])
);
conv2d #("weight/max_polling/41_18.txt", 2, 0, 31, 31) conv2d_41_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_41_addbus_[18])
);
conv2d #("weight/max_polling/41_19.txt", 2, 0, 31, 31) conv2d_41_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_41_addbus_[19])
);
conv2d #("weight/max_polling/41_20.txt", 2, 0, 31, 31) conv2d_41_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_41_addbus_[20])
);
conv2d #("weight/max_polling/41_21.txt", 2, 0, 31, 31) conv2d_41_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_41_addbus_[21])
);
conv2d #("weight/max_polling/41_22.txt", 2, 0, 31, 31) conv2d_41_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_41_addbus_[22])
);
conv2d #("weight/max_polling/41_23.txt", 2, 0, 31, 31) conv2d_41_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_41_addbus_[23])
);
conv2d #("weight/max_polling/41_24.txt", 2, 0, 31, 31) conv2d_41_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_41_addbus_[24])
);
conv2d #("weight/max_polling/41_25.txt", 2, 0, 31, 31) conv2d_41_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_41_addbus_[25])
);
conv2d #("weight/max_polling/41_26.txt", 2, 0, 31, 31) conv2d_41_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_41_addbus_[26])
);
conv2d #("weight/max_polling/41_27.txt", 2, 0, 31, 31) conv2d_41_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_41_addbus_[27])
);
conv2d #("weight/max_polling/41_28.txt", 2, 0, 31, 31) conv2d_41_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_41_addbus_[28])
);
conv2d #("weight/max_polling/41_29.txt", 2, 0, 31, 31) conv2d_41_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_41_addbus_[29])
);
conv2d #("weight/max_polling/41_30.txt", 2, 0, 31, 31) conv2d_41_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_41_addbus_[30])
);
conv2d #("weight/max_polling/41_31.txt", 2, 0, 31, 31) conv2d_41_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_41_addbus_[31])
);
conv2d #("weight/max_polling/41_32.txt", 2, 0, 31, 31) conv2d_41_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_41_addbus_[32])
);
conv2d #("weight/max_polling/41_33.txt", 2, 0, 31, 31) conv2d_41_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_41_addbus_[33])
);
conv2d #("weight/max_polling/41_34.txt", 2, 0, 31, 31) conv2d_41_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_41_addbus_[34])
);
conv2d #("weight/max_polling/41_35.txt", 2, 0, 31, 31) conv2d_41_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_41_addbus_[35])
);
conv2d #("weight/max_polling/41_36.txt", 2, 0, 31, 31) conv2d_41_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_41_addbus_[36])
);
conv2d #("weight/max_polling/41_37.txt", 2, 0, 31, 31) conv2d_41_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_41_addbus_[37])
);
conv2d #("weight/max_polling/41_38.txt", 2, 0, 31, 31) conv2d_41_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_41_addbus_[38])
);
conv2d #("weight/max_polling/41_39.txt", 2, 0, 31, 31) conv2d_41_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_41_addbus_[39])
);
conv2d #("weight/max_polling/41_40.txt", 2, 0, 31, 31) conv2d_41_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_41_addbus_[40])
);
conv2d #("weight/max_polling/41_41.txt", 2, 0, 31, 31) conv2d_41_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_41_addbus_[41])
);
conv2d #("weight/max_polling/41_42.txt", 2, 0, 31, 31) conv2d_41_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_41_addbus_[42])
);
conv2d #("weight/max_polling/41_43.txt", 2, 0, 31, 31) conv2d_41_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_41_addbus_[43])
);
conv2d #("weight/max_polling/41_44.txt", 2, 0, 31, 31) conv2d_41_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_41_addbus_[44])
);
conv2d #("weight/max_polling/41_45.txt", 2, 0, 31, 31) conv2d_41_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_41_addbus_[45])
);
conv2d #("weight/max_polling/41_46.txt", 2, 0, 31, 31) conv2d_41_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_41_addbus_[46])
);
conv2d #("weight/max_polling/41_47.txt", 2, 0, 31, 31) conv2d_41_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_41_addbus_[47])
);
conv2d #("weight/max_polling/41_48.txt", 2, 0, 31, 31) conv2d_41_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_41_addbus_[48])
);
conv2d #("weight/max_polling/41_49.txt", 2, 0, 31, 31) conv2d_41_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_41_addbus_[49])
);
conv2d #("weight/max_polling/41_50.txt", 2, 0, 31, 31) conv2d_41_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_41_addbus_[50])
);
conv2d #("weight/max_polling/41_51.txt", 2, 0, 31, 31) conv2d_41_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_41_addbus_[51])
);
conv2d #("weight/max_polling/41_52.txt", 2, 0, 31, 31) conv2d_41_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_41_addbus_[52])
);
conv2d #("weight/max_polling/41_53.txt", 2, 0, 31, 31) conv2d_41_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_41_addbus_[53])
);
conv2d #("weight/max_polling/41_54.txt", 2, 0, 31, 31) conv2d_41_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_41_addbus_[54])
);
conv2d #("weight/max_polling/41_55.txt", 2, 0, 31, 31) conv2d_41_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_41_addbus_[55])
);
conv2d #("weight/max_polling/41_56.txt", 2, 0, 31, 31) conv2d_41_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_41_addbus_[56])
);
conv2d #("weight/max_polling/41_57.txt", 2, 0, 31, 31) conv2d_41_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_41_addbus_[57])
);
conv2d #("weight/max_polling/41_58.txt", 2, 0, 31, 31) conv2d_41_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_41_addbus_[58])
);
conv2d #("weight/max_polling/41_59.txt", 2, 0, 31, 31) conv2d_41_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_41_addbus_[59])
);
conv2d #("weight/max_polling/41_60.txt", 2, 0, 31, 31) conv2d_41_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_41_addbus_[60])
);
conv2d #("weight/max_polling/41_61.txt", 2, 0, 31, 31) conv2d_41_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_41_addbus_[61])
);
conv2d #("weight/max_polling/41_62.txt", 2, 0, 31, 31) conv2d_41_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_41_addbus_[62])
);
conv2d #("weight/max_polling/41_63.txt", 2, 0, 31, 31) conv2d_41_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_41_addbus_[63])
);
sum_64 #(15) sum_41( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[41]), 
        .data_in_0(_41_addbus_[0]), 
        .data_in_1(_41_addbus_[1]), 
        .data_in_2(_41_addbus_[2]), 
        .data_in_3(_41_addbus_[3]), 
        .data_in_4(_41_addbus_[4]), 
        .data_in_5(_41_addbus_[5]), 
        .data_in_6(_41_addbus_[6]), 
        .data_in_7(_41_addbus_[7]), 
        .data_in_8(_41_addbus_[8]), 
        .data_in_9(_41_addbus_[9]), 
        .data_in_10(_41_addbus_[10]), 
        .data_in_11(_41_addbus_[11]), 
        .data_in_12(_41_addbus_[12]), 
        .data_in_13(_41_addbus_[13]), 
        .data_in_14(_41_addbus_[14]), 
        .data_in_15(_41_addbus_[15]), 
        .data_in_16(_41_addbus_[16]), 
        .data_in_17(_41_addbus_[17]), 
        .data_in_18(_41_addbus_[18]), 
        .data_in_19(_41_addbus_[19]), 
        .data_in_20(_41_addbus_[20]), 
        .data_in_21(_41_addbus_[21]), 
        .data_in_22(_41_addbus_[22]), 
        .data_in_23(_41_addbus_[23]), 
        .data_in_24(_41_addbus_[24]), 
        .data_in_25(_41_addbus_[25]), 
        .data_in_26(_41_addbus_[26]), 
        .data_in_27(_41_addbus_[27]), 
        .data_in_28(_41_addbus_[28]), 
        .data_in_29(_41_addbus_[29]), 
        .data_in_30(_41_addbus_[30]), 
        .data_in_31(_41_addbus_[31]), 
        .data_in_32(_41_addbus_[32]), 
        .data_in_33(_41_addbus_[33]), 
        .data_in_34(_41_addbus_[34]), 
        .data_in_35(_41_addbus_[35]), 
        .data_in_36(_41_addbus_[36]), 
        .data_in_37(_41_addbus_[37]), 
        .data_in_38(_41_addbus_[38]), 
        .data_in_39(_41_addbus_[39]), 
        .data_in_40(_41_addbus_[40]), 
        .data_in_41(_41_addbus_[41]), 
        .data_in_42(_41_addbus_[42]), 
        .data_in_43(_41_addbus_[43]), 
        .data_in_44(_41_addbus_[44]), 
        .data_in_45(_41_addbus_[45]), 
        .data_in_46(_41_addbus_[46]), 
        .data_in_47(_41_addbus_[47]), 
        .data_in_48(_41_addbus_[48]), 
        .data_in_49(_41_addbus_[49]), 
        .data_in_50(_41_addbus_[50]), 
        .data_in_51(_41_addbus_[51]), 
        .data_in_52(_41_addbus_[52]), 
        .data_in_53(_41_addbus_[53]), 
        .data_in_54(_41_addbus_[54]), 
        .data_in_55(_41_addbus_[55]), 
        .data_in_56(_41_addbus_[56]), 
        .data_in_57(_41_addbus_[57]), 
        .data_in_58(_41_addbus_[58]), 
        .data_in_59(_41_addbus_[59]), 
        .data_in_60(_41_addbus_[60]), 
        .data_in_61(_41_addbus_[61]), 
        .data_in_62(_41_addbus_[62]), 
        .data_in_63(_41_addbus_[63]) 
); 
wire [31:0] _42_addbus_[63:0];    
conv2d #("weight/max_polling/42_0.txt", 2, 0, 31, 31) conv2d_42_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_42_addbus_[0])
);
conv2d #("weight/max_polling/42_1.txt", 2, 0, 31, 31) conv2d_42_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_42_addbus_[1])
);
conv2d #("weight/max_polling/42_2.txt", 2, 0, 31, 31) conv2d_42_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_42_addbus_[2])
);
conv2d #("weight/max_polling/42_3.txt", 2, 0, 31, 31) conv2d_42_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_42_addbus_[3])
);
conv2d #("weight/max_polling/42_4.txt", 2, 0, 31, 31) conv2d_42_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_42_addbus_[4])
);
conv2d #("weight/max_polling/42_5.txt", 2, 0, 31, 31) conv2d_42_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_42_addbus_[5])
);
conv2d #("weight/max_polling/42_6.txt", 2, 0, 31, 31) conv2d_42_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_42_addbus_[6])
);
conv2d #("weight/max_polling/42_7.txt", 2, 0, 31, 31) conv2d_42_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_42_addbus_[7])
);
conv2d #("weight/max_polling/42_8.txt", 2, 0, 31, 31) conv2d_42_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_42_addbus_[8])
);
conv2d #("weight/max_polling/42_9.txt", 2, 0, 31, 31) conv2d_42_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_42_addbus_[9])
);
conv2d #("weight/max_polling/42_10.txt", 2, 0, 31, 31) conv2d_42_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_42_addbus_[10])
);
conv2d #("weight/max_polling/42_11.txt", 2, 0, 31, 31) conv2d_42_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_42_addbus_[11])
);
conv2d #("weight/max_polling/42_12.txt", 2, 0, 31, 31) conv2d_42_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_42_addbus_[12])
);
conv2d #("weight/max_polling/42_13.txt", 2, 0, 31, 31) conv2d_42_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_42_addbus_[13])
);
conv2d #("weight/max_polling/42_14.txt", 2, 0, 31, 31) conv2d_42_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_42_addbus_[14])
);
conv2d #("weight/max_polling/42_15.txt", 2, 0, 31, 31) conv2d_42_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_42_addbus_[15])
);
conv2d #("weight/max_polling/42_16.txt", 2, 0, 31, 31) conv2d_42_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_42_addbus_[16])
);
conv2d #("weight/max_polling/42_17.txt", 2, 0, 31, 31) conv2d_42_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_42_addbus_[17])
);
conv2d #("weight/max_polling/42_18.txt", 2, 0, 31, 31) conv2d_42_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_42_addbus_[18])
);
conv2d #("weight/max_polling/42_19.txt", 2, 0, 31, 31) conv2d_42_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_42_addbus_[19])
);
conv2d #("weight/max_polling/42_20.txt", 2, 0, 31, 31) conv2d_42_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_42_addbus_[20])
);
conv2d #("weight/max_polling/42_21.txt", 2, 0, 31, 31) conv2d_42_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_42_addbus_[21])
);
conv2d #("weight/max_polling/42_22.txt", 2, 0, 31, 31) conv2d_42_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_42_addbus_[22])
);
conv2d #("weight/max_polling/42_23.txt", 2, 0, 31, 31) conv2d_42_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_42_addbus_[23])
);
conv2d #("weight/max_polling/42_24.txt", 2, 0, 31, 31) conv2d_42_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_42_addbus_[24])
);
conv2d #("weight/max_polling/42_25.txt", 2, 0, 31, 31) conv2d_42_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_42_addbus_[25])
);
conv2d #("weight/max_polling/42_26.txt", 2, 0, 31, 31) conv2d_42_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_42_addbus_[26])
);
conv2d #("weight/max_polling/42_27.txt", 2, 0, 31, 31) conv2d_42_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_42_addbus_[27])
);
conv2d #("weight/max_polling/42_28.txt", 2, 0, 31, 31) conv2d_42_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_42_addbus_[28])
);
conv2d #("weight/max_polling/42_29.txt", 2, 0, 31, 31) conv2d_42_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_42_addbus_[29])
);
conv2d #("weight/max_polling/42_30.txt", 2, 0, 31, 31) conv2d_42_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_42_addbus_[30])
);
conv2d #("weight/max_polling/42_31.txt", 2, 0, 31, 31) conv2d_42_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_42_addbus_[31])
);
conv2d #("weight/max_polling/42_32.txt", 2, 0, 31, 31) conv2d_42_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_42_addbus_[32])
);
conv2d #("weight/max_polling/42_33.txt", 2, 0, 31, 31) conv2d_42_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_42_addbus_[33])
);
conv2d #("weight/max_polling/42_34.txt", 2, 0, 31, 31) conv2d_42_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_42_addbus_[34])
);
conv2d #("weight/max_polling/42_35.txt", 2, 0, 31, 31) conv2d_42_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_42_addbus_[35])
);
conv2d #("weight/max_polling/42_36.txt", 2, 0, 31, 31) conv2d_42_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_42_addbus_[36])
);
conv2d #("weight/max_polling/42_37.txt", 2, 0, 31, 31) conv2d_42_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_42_addbus_[37])
);
conv2d #("weight/max_polling/42_38.txt", 2, 0, 31, 31) conv2d_42_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_42_addbus_[38])
);
conv2d #("weight/max_polling/42_39.txt", 2, 0, 31, 31) conv2d_42_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_42_addbus_[39])
);
conv2d #("weight/max_polling/42_40.txt", 2, 0, 31, 31) conv2d_42_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_42_addbus_[40])
);
conv2d #("weight/max_polling/42_41.txt", 2, 0, 31, 31) conv2d_42_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_42_addbus_[41])
);
conv2d #("weight/max_polling/42_42.txt", 2, 0, 31, 31) conv2d_42_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_42_addbus_[42])
);
conv2d #("weight/max_polling/42_43.txt", 2, 0, 31, 31) conv2d_42_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_42_addbus_[43])
);
conv2d #("weight/max_polling/42_44.txt", 2, 0, 31, 31) conv2d_42_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_42_addbus_[44])
);
conv2d #("weight/max_polling/42_45.txt", 2, 0, 31, 31) conv2d_42_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_42_addbus_[45])
);
conv2d #("weight/max_polling/42_46.txt", 2, 0, 31, 31) conv2d_42_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_42_addbus_[46])
);
conv2d #("weight/max_polling/42_47.txt", 2, 0, 31, 31) conv2d_42_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_42_addbus_[47])
);
conv2d #("weight/max_polling/42_48.txt", 2, 0, 31, 31) conv2d_42_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_42_addbus_[48])
);
conv2d #("weight/max_polling/42_49.txt", 2, 0, 31, 31) conv2d_42_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_42_addbus_[49])
);
conv2d #("weight/max_polling/42_50.txt", 2, 0, 31, 31) conv2d_42_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_42_addbus_[50])
);
conv2d #("weight/max_polling/42_51.txt", 2, 0, 31, 31) conv2d_42_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_42_addbus_[51])
);
conv2d #("weight/max_polling/42_52.txt", 2, 0, 31, 31) conv2d_42_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_42_addbus_[52])
);
conv2d #("weight/max_polling/42_53.txt", 2, 0, 31, 31) conv2d_42_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_42_addbus_[53])
);
conv2d #("weight/max_polling/42_54.txt", 2, 0, 31, 31) conv2d_42_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_42_addbus_[54])
);
conv2d #("weight/max_polling/42_55.txt", 2, 0, 31, 31) conv2d_42_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_42_addbus_[55])
);
conv2d #("weight/max_polling/42_56.txt", 2, 0, 31, 31) conv2d_42_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_42_addbus_[56])
);
conv2d #("weight/max_polling/42_57.txt", 2, 0, 31, 31) conv2d_42_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_42_addbus_[57])
);
conv2d #("weight/max_polling/42_58.txt", 2, 0, 31, 31) conv2d_42_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_42_addbus_[58])
);
conv2d #("weight/max_polling/42_59.txt", 2, 0, 31, 31) conv2d_42_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_42_addbus_[59])
);
conv2d #("weight/max_polling/42_60.txt", 2, 0, 31, 31) conv2d_42_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_42_addbus_[60])
);
conv2d #("weight/max_polling/42_61.txt", 2, 0, 31, 31) conv2d_42_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_42_addbus_[61])
);
conv2d #("weight/max_polling/42_62.txt", 2, 0, 31, 31) conv2d_42_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_42_addbus_[62])
);
conv2d #("weight/max_polling/42_63.txt", 2, 0, 31, 31) conv2d_42_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_42_addbus_[63])
);
sum_64 #(15) sum_42( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[42]), 
        .data_in_0(_42_addbus_[0]), 
        .data_in_1(_42_addbus_[1]), 
        .data_in_2(_42_addbus_[2]), 
        .data_in_3(_42_addbus_[3]), 
        .data_in_4(_42_addbus_[4]), 
        .data_in_5(_42_addbus_[5]), 
        .data_in_6(_42_addbus_[6]), 
        .data_in_7(_42_addbus_[7]), 
        .data_in_8(_42_addbus_[8]), 
        .data_in_9(_42_addbus_[9]), 
        .data_in_10(_42_addbus_[10]), 
        .data_in_11(_42_addbus_[11]), 
        .data_in_12(_42_addbus_[12]), 
        .data_in_13(_42_addbus_[13]), 
        .data_in_14(_42_addbus_[14]), 
        .data_in_15(_42_addbus_[15]), 
        .data_in_16(_42_addbus_[16]), 
        .data_in_17(_42_addbus_[17]), 
        .data_in_18(_42_addbus_[18]), 
        .data_in_19(_42_addbus_[19]), 
        .data_in_20(_42_addbus_[20]), 
        .data_in_21(_42_addbus_[21]), 
        .data_in_22(_42_addbus_[22]), 
        .data_in_23(_42_addbus_[23]), 
        .data_in_24(_42_addbus_[24]), 
        .data_in_25(_42_addbus_[25]), 
        .data_in_26(_42_addbus_[26]), 
        .data_in_27(_42_addbus_[27]), 
        .data_in_28(_42_addbus_[28]), 
        .data_in_29(_42_addbus_[29]), 
        .data_in_30(_42_addbus_[30]), 
        .data_in_31(_42_addbus_[31]), 
        .data_in_32(_42_addbus_[32]), 
        .data_in_33(_42_addbus_[33]), 
        .data_in_34(_42_addbus_[34]), 
        .data_in_35(_42_addbus_[35]), 
        .data_in_36(_42_addbus_[36]), 
        .data_in_37(_42_addbus_[37]), 
        .data_in_38(_42_addbus_[38]), 
        .data_in_39(_42_addbus_[39]), 
        .data_in_40(_42_addbus_[40]), 
        .data_in_41(_42_addbus_[41]), 
        .data_in_42(_42_addbus_[42]), 
        .data_in_43(_42_addbus_[43]), 
        .data_in_44(_42_addbus_[44]), 
        .data_in_45(_42_addbus_[45]), 
        .data_in_46(_42_addbus_[46]), 
        .data_in_47(_42_addbus_[47]), 
        .data_in_48(_42_addbus_[48]), 
        .data_in_49(_42_addbus_[49]), 
        .data_in_50(_42_addbus_[50]), 
        .data_in_51(_42_addbus_[51]), 
        .data_in_52(_42_addbus_[52]), 
        .data_in_53(_42_addbus_[53]), 
        .data_in_54(_42_addbus_[54]), 
        .data_in_55(_42_addbus_[55]), 
        .data_in_56(_42_addbus_[56]), 
        .data_in_57(_42_addbus_[57]), 
        .data_in_58(_42_addbus_[58]), 
        .data_in_59(_42_addbus_[59]), 
        .data_in_60(_42_addbus_[60]), 
        .data_in_61(_42_addbus_[61]), 
        .data_in_62(_42_addbus_[62]), 
        .data_in_63(_42_addbus_[63]) 
); 
wire [31:0] _43_addbus_[63:0];    
conv2d #("weight/max_polling/43_0.txt", 2, 0, 31, 31) conv2d_43_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_43_addbus_[0])
);
conv2d #("weight/max_polling/43_1.txt", 2, 0, 31, 31) conv2d_43_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_43_addbus_[1])
);
conv2d #("weight/max_polling/43_2.txt", 2, 0, 31, 31) conv2d_43_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_43_addbus_[2])
);
conv2d #("weight/max_polling/43_3.txt", 2, 0, 31, 31) conv2d_43_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_43_addbus_[3])
);
conv2d #("weight/max_polling/43_4.txt", 2, 0, 31, 31) conv2d_43_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_43_addbus_[4])
);
conv2d #("weight/max_polling/43_5.txt", 2, 0, 31, 31) conv2d_43_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_43_addbus_[5])
);
conv2d #("weight/max_polling/43_6.txt", 2, 0, 31, 31) conv2d_43_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_43_addbus_[6])
);
conv2d #("weight/max_polling/43_7.txt", 2, 0, 31, 31) conv2d_43_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_43_addbus_[7])
);
conv2d #("weight/max_polling/43_8.txt", 2, 0, 31, 31) conv2d_43_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_43_addbus_[8])
);
conv2d #("weight/max_polling/43_9.txt", 2, 0, 31, 31) conv2d_43_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_43_addbus_[9])
);
conv2d #("weight/max_polling/43_10.txt", 2, 0, 31, 31) conv2d_43_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_43_addbus_[10])
);
conv2d #("weight/max_polling/43_11.txt", 2, 0, 31, 31) conv2d_43_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_43_addbus_[11])
);
conv2d #("weight/max_polling/43_12.txt", 2, 0, 31, 31) conv2d_43_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_43_addbus_[12])
);
conv2d #("weight/max_polling/43_13.txt", 2, 0, 31, 31) conv2d_43_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_43_addbus_[13])
);
conv2d #("weight/max_polling/43_14.txt", 2, 0, 31, 31) conv2d_43_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_43_addbus_[14])
);
conv2d #("weight/max_polling/43_15.txt", 2, 0, 31, 31) conv2d_43_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_43_addbus_[15])
);
conv2d #("weight/max_polling/43_16.txt", 2, 0, 31, 31) conv2d_43_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_43_addbus_[16])
);
conv2d #("weight/max_polling/43_17.txt", 2, 0, 31, 31) conv2d_43_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_43_addbus_[17])
);
conv2d #("weight/max_polling/43_18.txt", 2, 0, 31, 31) conv2d_43_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_43_addbus_[18])
);
conv2d #("weight/max_polling/43_19.txt", 2, 0, 31, 31) conv2d_43_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_43_addbus_[19])
);
conv2d #("weight/max_polling/43_20.txt", 2, 0, 31, 31) conv2d_43_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_43_addbus_[20])
);
conv2d #("weight/max_polling/43_21.txt", 2, 0, 31, 31) conv2d_43_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_43_addbus_[21])
);
conv2d #("weight/max_polling/43_22.txt", 2, 0, 31, 31) conv2d_43_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_43_addbus_[22])
);
conv2d #("weight/max_polling/43_23.txt", 2, 0, 31, 31) conv2d_43_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_43_addbus_[23])
);
conv2d #("weight/max_polling/43_24.txt", 2, 0, 31, 31) conv2d_43_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_43_addbus_[24])
);
conv2d #("weight/max_polling/43_25.txt", 2, 0, 31, 31) conv2d_43_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_43_addbus_[25])
);
conv2d #("weight/max_polling/43_26.txt", 2, 0, 31, 31) conv2d_43_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_43_addbus_[26])
);
conv2d #("weight/max_polling/43_27.txt", 2, 0, 31, 31) conv2d_43_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_43_addbus_[27])
);
conv2d #("weight/max_polling/43_28.txt", 2, 0, 31, 31) conv2d_43_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_43_addbus_[28])
);
conv2d #("weight/max_polling/43_29.txt", 2, 0, 31, 31) conv2d_43_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_43_addbus_[29])
);
conv2d #("weight/max_polling/43_30.txt", 2, 0, 31, 31) conv2d_43_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_43_addbus_[30])
);
conv2d #("weight/max_polling/43_31.txt", 2, 0, 31, 31) conv2d_43_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_43_addbus_[31])
);
conv2d #("weight/max_polling/43_32.txt", 2, 0, 31, 31) conv2d_43_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_43_addbus_[32])
);
conv2d #("weight/max_polling/43_33.txt", 2, 0, 31, 31) conv2d_43_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_43_addbus_[33])
);
conv2d #("weight/max_polling/43_34.txt", 2, 0, 31, 31) conv2d_43_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_43_addbus_[34])
);
conv2d #("weight/max_polling/43_35.txt", 2, 0, 31, 31) conv2d_43_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_43_addbus_[35])
);
conv2d #("weight/max_polling/43_36.txt", 2, 0, 31, 31) conv2d_43_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_43_addbus_[36])
);
conv2d #("weight/max_polling/43_37.txt", 2, 0, 31, 31) conv2d_43_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_43_addbus_[37])
);
conv2d #("weight/max_polling/43_38.txt", 2, 0, 31, 31) conv2d_43_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_43_addbus_[38])
);
conv2d #("weight/max_polling/43_39.txt", 2, 0, 31, 31) conv2d_43_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_43_addbus_[39])
);
conv2d #("weight/max_polling/43_40.txt", 2, 0, 31, 31) conv2d_43_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_43_addbus_[40])
);
conv2d #("weight/max_polling/43_41.txt", 2, 0, 31, 31) conv2d_43_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_43_addbus_[41])
);
conv2d #("weight/max_polling/43_42.txt", 2, 0, 31, 31) conv2d_43_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_43_addbus_[42])
);
conv2d #("weight/max_polling/43_43.txt", 2, 0, 31, 31) conv2d_43_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_43_addbus_[43])
);
conv2d #("weight/max_polling/43_44.txt", 2, 0, 31, 31) conv2d_43_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_43_addbus_[44])
);
conv2d #("weight/max_polling/43_45.txt", 2, 0, 31, 31) conv2d_43_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_43_addbus_[45])
);
conv2d #("weight/max_polling/43_46.txt", 2, 0, 31, 31) conv2d_43_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_43_addbus_[46])
);
conv2d #("weight/max_polling/43_47.txt", 2, 0, 31, 31) conv2d_43_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_43_addbus_[47])
);
conv2d #("weight/max_polling/43_48.txt", 2, 0, 31, 31) conv2d_43_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_43_addbus_[48])
);
conv2d #("weight/max_polling/43_49.txt", 2, 0, 31, 31) conv2d_43_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_43_addbus_[49])
);
conv2d #("weight/max_polling/43_50.txt", 2, 0, 31, 31) conv2d_43_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_43_addbus_[50])
);
conv2d #("weight/max_polling/43_51.txt", 2, 0, 31, 31) conv2d_43_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_43_addbus_[51])
);
conv2d #("weight/max_polling/43_52.txt", 2, 0, 31, 31) conv2d_43_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_43_addbus_[52])
);
conv2d #("weight/max_polling/43_53.txt", 2, 0, 31, 31) conv2d_43_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_43_addbus_[53])
);
conv2d #("weight/max_polling/43_54.txt", 2, 0, 31, 31) conv2d_43_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_43_addbus_[54])
);
conv2d #("weight/max_polling/43_55.txt", 2, 0, 31, 31) conv2d_43_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_43_addbus_[55])
);
conv2d #("weight/max_polling/43_56.txt", 2, 0, 31, 31) conv2d_43_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_43_addbus_[56])
);
conv2d #("weight/max_polling/43_57.txt", 2, 0, 31, 31) conv2d_43_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_43_addbus_[57])
);
conv2d #("weight/max_polling/43_58.txt", 2, 0, 31, 31) conv2d_43_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_43_addbus_[58])
);
conv2d #("weight/max_polling/43_59.txt", 2, 0, 31, 31) conv2d_43_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_43_addbus_[59])
);
conv2d #("weight/max_polling/43_60.txt", 2, 0, 31, 31) conv2d_43_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_43_addbus_[60])
);
conv2d #("weight/max_polling/43_61.txt", 2, 0, 31, 31) conv2d_43_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_43_addbus_[61])
);
conv2d #("weight/max_polling/43_62.txt", 2, 0, 31, 31) conv2d_43_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_43_addbus_[62])
);
conv2d #("weight/max_polling/43_63.txt", 2, 0, 31, 31) conv2d_43_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_43_addbus_[63])
);
sum_64 #(15) sum_43( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[43]), 
        .data_in_0(_43_addbus_[0]), 
        .data_in_1(_43_addbus_[1]), 
        .data_in_2(_43_addbus_[2]), 
        .data_in_3(_43_addbus_[3]), 
        .data_in_4(_43_addbus_[4]), 
        .data_in_5(_43_addbus_[5]), 
        .data_in_6(_43_addbus_[6]), 
        .data_in_7(_43_addbus_[7]), 
        .data_in_8(_43_addbus_[8]), 
        .data_in_9(_43_addbus_[9]), 
        .data_in_10(_43_addbus_[10]), 
        .data_in_11(_43_addbus_[11]), 
        .data_in_12(_43_addbus_[12]), 
        .data_in_13(_43_addbus_[13]), 
        .data_in_14(_43_addbus_[14]), 
        .data_in_15(_43_addbus_[15]), 
        .data_in_16(_43_addbus_[16]), 
        .data_in_17(_43_addbus_[17]), 
        .data_in_18(_43_addbus_[18]), 
        .data_in_19(_43_addbus_[19]), 
        .data_in_20(_43_addbus_[20]), 
        .data_in_21(_43_addbus_[21]), 
        .data_in_22(_43_addbus_[22]), 
        .data_in_23(_43_addbus_[23]), 
        .data_in_24(_43_addbus_[24]), 
        .data_in_25(_43_addbus_[25]), 
        .data_in_26(_43_addbus_[26]), 
        .data_in_27(_43_addbus_[27]), 
        .data_in_28(_43_addbus_[28]), 
        .data_in_29(_43_addbus_[29]), 
        .data_in_30(_43_addbus_[30]), 
        .data_in_31(_43_addbus_[31]), 
        .data_in_32(_43_addbus_[32]), 
        .data_in_33(_43_addbus_[33]), 
        .data_in_34(_43_addbus_[34]), 
        .data_in_35(_43_addbus_[35]), 
        .data_in_36(_43_addbus_[36]), 
        .data_in_37(_43_addbus_[37]), 
        .data_in_38(_43_addbus_[38]), 
        .data_in_39(_43_addbus_[39]), 
        .data_in_40(_43_addbus_[40]), 
        .data_in_41(_43_addbus_[41]), 
        .data_in_42(_43_addbus_[42]), 
        .data_in_43(_43_addbus_[43]), 
        .data_in_44(_43_addbus_[44]), 
        .data_in_45(_43_addbus_[45]), 
        .data_in_46(_43_addbus_[46]), 
        .data_in_47(_43_addbus_[47]), 
        .data_in_48(_43_addbus_[48]), 
        .data_in_49(_43_addbus_[49]), 
        .data_in_50(_43_addbus_[50]), 
        .data_in_51(_43_addbus_[51]), 
        .data_in_52(_43_addbus_[52]), 
        .data_in_53(_43_addbus_[53]), 
        .data_in_54(_43_addbus_[54]), 
        .data_in_55(_43_addbus_[55]), 
        .data_in_56(_43_addbus_[56]), 
        .data_in_57(_43_addbus_[57]), 
        .data_in_58(_43_addbus_[58]), 
        .data_in_59(_43_addbus_[59]), 
        .data_in_60(_43_addbus_[60]), 
        .data_in_61(_43_addbus_[61]), 
        .data_in_62(_43_addbus_[62]), 
        .data_in_63(_43_addbus_[63]) 
); 
wire [31:0] _44_addbus_[63:0];    
conv2d #("weight/max_polling/44_0.txt", 2, 0, 31, 31) conv2d_44_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_44_addbus_[0])
);
conv2d #("weight/max_polling/44_1.txt", 2, 0, 31, 31) conv2d_44_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_44_addbus_[1])
);
conv2d #("weight/max_polling/44_2.txt", 2, 0, 31, 31) conv2d_44_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_44_addbus_[2])
);
conv2d #("weight/max_polling/44_3.txt", 2, 0, 31, 31) conv2d_44_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_44_addbus_[3])
);
conv2d #("weight/max_polling/44_4.txt", 2, 0, 31, 31) conv2d_44_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_44_addbus_[4])
);
conv2d #("weight/max_polling/44_5.txt", 2, 0, 31, 31) conv2d_44_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_44_addbus_[5])
);
conv2d #("weight/max_polling/44_6.txt", 2, 0, 31, 31) conv2d_44_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_44_addbus_[6])
);
conv2d #("weight/max_polling/44_7.txt", 2, 0, 31, 31) conv2d_44_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_44_addbus_[7])
);
conv2d #("weight/max_polling/44_8.txt", 2, 0, 31, 31) conv2d_44_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_44_addbus_[8])
);
conv2d #("weight/max_polling/44_9.txt", 2, 0, 31, 31) conv2d_44_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_44_addbus_[9])
);
conv2d #("weight/max_polling/44_10.txt", 2, 0, 31, 31) conv2d_44_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_44_addbus_[10])
);
conv2d #("weight/max_polling/44_11.txt", 2, 0, 31, 31) conv2d_44_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_44_addbus_[11])
);
conv2d #("weight/max_polling/44_12.txt", 2, 0, 31, 31) conv2d_44_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_44_addbus_[12])
);
conv2d #("weight/max_polling/44_13.txt", 2, 0, 31, 31) conv2d_44_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_44_addbus_[13])
);
conv2d #("weight/max_polling/44_14.txt", 2, 0, 31, 31) conv2d_44_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_44_addbus_[14])
);
conv2d #("weight/max_polling/44_15.txt", 2, 0, 31, 31) conv2d_44_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_44_addbus_[15])
);
conv2d #("weight/max_polling/44_16.txt", 2, 0, 31, 31) conv2d_44_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_44_addbus_[16])
);
conv2d #("weight/max_polling/44_17.txt", 2, 0, 31, 31) conv2d_44_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_44_addbus_[17])
);
conv2d #("weight/max_polling/44_18.txt", 2, 0, 31, 31) conv2d_44_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_44_addbus_[18])
);
conv2d #("weight/max_polling/44_19.txt", 2, 0, 31, 31) conv2d_44_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_44_addbus_[19])
);
conv2d #("weight/max_polling/44_20.txt", 2, 0, 31, 31) conv2d_44_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_44_addbus_[20])
);
conv2d #("weight/max_polling/44_21.txt", 2, 0, 31, 31) conv2d_44_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_44_addbus_[21])
);
conv2d #("weight/max_polling/44_22.txt", 2, 0, 31, 31) conv2d_44_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_44_addbus_[22])
);
conv2d #("weight/max_polling/44_23.txt", 2, 0, 31, 31) conv2d_44_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_44_addbus_[23])
);
conv2d #("weight/max_polling/44_24.txt", 2, 0, 31, 31) conv2d_44_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_44_addbus_[24])
);
conv2d #("weight/max_polling/44_25.txt", 2, 0, 31, 31) conv2d_44_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_44_addbus_[25])
);
conv2d #("weight/max_polling/44_26.txt", 2, 0, 31, 31) conv2d_44_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_44_addbus_[26])
);
conv2d #("weight/max_polling/44_27.txt", 2, 0, 31, 31) conv2d_44_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_44_addbus_[27])
);
conv2d #("weight/max_polling/44_28.txt", 2, 0, 31, 31) conv2d_44_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_44_addbus_[28])
);
conv2d #("weight/max_polling/44_29.txt", 2, 0, 31, 31) conv2d_44_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_44_addbus_[29])
);
conv2d #("weight/max_polling/44_30.txt", 2, 0, 31, 31) conv2d_44_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_44_addbus_[30])
);
conv2d #("weight/max_polling/44_31.txt", 2, 0, 31, 31) conv2d_44_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_44_addbus_[31])
);
conv2d #("weight/max_polling/44_32.txt", 2, 0, 31, 31) conv2d_44_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_44_addbus_[32])
);
conv2d #("weight/max_polling/44_33.txt", 2, 0, 31, 31) conv2d_44_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_44_addbus_[33])
);
conv2d #("weight/max_polling/44_34.txt", 2, 0, 31, 31) conv2d_44_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_44_addbus_[34])
);
conv2d #("weight/max_polling/44_35.txt", 2, 0, 31, 31) conv2d_44_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_44_addbus_[35])
);
conv2d #("weight/max_polling/44_36.txt", 2, 0, 31, 31) conv2d_44_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_44_addbus_[36])
);
conv2d #("weight/max_polling/44_37.txt", 2, 0, 31, 31) conv2d_44_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_44_addbus_[37])
);
conv2d #("weight/max_polling/44_38.txt", 2, 0, 31, 31) conv2d_44_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_44_addbus_[38])
);
conv2d #("weight/max_polling/44_39.txt", 2, 0, 31, 31) conv2d_44_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_44_addbus_[39])
);
conv2d #("weight/max_polling/44_40.txt", 2, 0, 31, 31) conv2d_44_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_44_addbus_[40])
);
conv2d #("weight/max_polling/44_41.txt", 2, 0, 31, 31) conv2d_44_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_44_addbus_[41])
);
conv2d #("weight/max_polling/44_42.txt", 2, 0, 31, 31) conv2d_44_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_44_addbus_[42])
);
conv2d #("weight/max_polling/44_43.txt", 2, 0, 31, 31) conv2d_44_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_44_addbus_[43])
);
conv2d #("weight/max_polling/44_44.txt", 2, 0, 31, 31) conv2d_44_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_44_addbus_[44])
);
conv2d #("weight/max_polling/44_45.txt", 2, 0, 31, 31) conv2d_44_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_44_addbus_[45])
);
conv2d #("weight/max_polling/44_46.txt", 2, 0, 31, 31) conv2d_44_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_44_addbus_[46])
);
conv2d #("weight/max_polling/44_47.txt", 2, 0, 31, 31) conv2d_44_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_44_addbus_[47])
);
conv2d #("weight/max_polling/44_48.txt", 2, 0, 31, 31) conv2d_44_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_44_addbus_[48])
);
conv2d #("weight/max_polling/44_49.txt", 2, 0, 31, 31) conv2d_44_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_44_addbus_[49])
);
conv2d #("weight/max_polling/44_50.txt", 2, 0, 31, 31) conv2d_44_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_44_addbus_[50])
);
conv2d #("weight/max_polling/44_51.txt", 2, 0, 31, 31) conv2d_44_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_44_addbus_[51])
);
conv2d #("weight/max_polling/44_52.txt", 2, 0, 31, 31) conv2d_44_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_44_addbus_[52])
);
conv2d #("weight/max_polling/44_53.txt", 2, 0, 31, 31) conv2d_44_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_44_addbus_[53])
);
conv2d #("weight/max_polling/44_54.txt", 2, 0, 31, 31) conv2d_44_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_44_addbus_[54])
);
conv2d #("weight/max_polling/44_55.txt", 2, 0, 31, 31) conv2d_44_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_44_addbus_[55])
);
conv2d #("weight/max_polling/44_56.txt", 2, 0, 31, 31) conv2d_44_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_44_addbus_[56])
);
conv2d #("weight/max_polling/44_57.txt", 2, 0, 31, 31) conv2d_44_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_44_addbus_[57])
);
conv2d #("weight/max_polling/44_58.txt", 2, 0, 31, 31) conv2d_44_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_44_addbus_[58])
);
conv2d #("weight/max_polling/44_59.txt", 2, 0, 31, 31) conv2d_44_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_44_addbus_[59])
);
conv2d #("weight/max_polling/44_60.txt", 2, 0, 31, 31) conv2d_44_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_44_addbus_[60])
);
conv2d #("weight/max_polling/44_61.txt", 2, 0, 31, 31) conv2d_44_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_44_addbus_[61])
);
conv2d #("weight/max_polling/44_62.txt", 2, 0, 31, 31) conv2d_44_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_44_addbus_[62])
);
conv2d #("weight/max_polling/44_63.txt", 2, 0, 31, 31) conv2d_44_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_44_addbus_[63])
);
sum_64 #(15) sum_44( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[44]), 
        .data_in_0(_44_addbus_[0]), 
        .data_in_1(_44_addbus_[1]), 
        .data_in_2(_44_addbus_[2]), 
        .data_in_3(_44_addbus_[3]), 
        .data_in_4(_44_addbus_[4]), 
        .data_in_5(_44_addbus_[5]), 
        .data_in_6(_44_addbus_[6]), 
        .data_in_7(_44_addbus_[7]), 
        .data_in_8(_44_addbus_[8]), 
        .data_in_9(_44_addbus_[9]), 
        .data_in_10(_44_addbus_[10]), 
        .data_in_11(_44_addbus_[11]), 
        .data_in_12(_44_addbus_[12]), 
        .data_in_13(_44_addbus_[13]), 
        .data_in_14(_44_addbus_[14]), 
        .data_in_15(_44_addbus_[15]), 
        .data_in_16(_44_addbus_[16]), 
        .data_in_17(_44_addbus_[17]), 
        .data_in_18(_44_addbus_[18]), 
        .data_in_19(_44_addbus_[19]), 
        .data_in_20(_44_addbus_[20]), 
        .data_in_21(_44_addbus_[21]), 
        .data_in_22(_44_addbus_[22]), 
        .data_in_23(_44_addbus_[23]), 
        .data_in_24(_44_addbus_[24]), 
        .data_in_25(_44_addbus_[25]), 
        .data_in_26(_44_addbus_[26]), 
        .data_in_27(_44_addbus_[27]), 
        .data_in_28(_44_addbus_[28]), 
        .data_in_29(_44_addbus_[29]), 
        .data_in_30(_44_addbus_[30]), 
        .data_in_31(_44_addbus_[31]), 
        .data_in_32(_44_addbus_[32]), 
        .data_in_33(_44_addbus_[33]), 
        .data_in_34(_44_addbus_[34]), 
        .data_in_35(_44_addbus_[35]), 
        .data_in_36(_44_addbus_[36]), 
        .data_in_37(_44_addbus_[37]), 
        .data_in_38(_44_addbus_[38]), 
        .data_in_39(_44_addbus_[39]), 
        .data_in_40(_44_addbus_[40]), 
        .data_in_41(_44_addbus_[41]), 
        .data_in_42(_44_addbus_[42]), 
        .data_in_43(_44_addbus_[43]), 
        .data_in_44(_44_addbus_[44]), 
        .data_in_45(_44_addbus_[45]), 
        .data_in_46(_44_addbus_[46]), 
        .data_in_47(_44_addbus_[47]), 
        .data_in_48(_44_addbus_[48]), 
        .data_in_49(_44_addbus_[49]), 
        .data_in_50(_44_addbus_[50]), 
        .data_in_51(_44_addbus_[51]), 
        .data_in_52(_44_addbus_[52]), 
        .data_in_53(_44_addbus_[53]), 
        .data_in_54(_44_addbus_[54]), 
        .data_in_55(_44_addbus_[55]), 
        .data_in_56(_44_addbus_[56]), 
        .data_in_57(_44_addbus_[57]), 
        .data_in_58(_44_addbus_[58]), 
        .data_in_59(_44_addbus_[59]), 
        .data_in_60(_44_addbus_[60]), 
        .data_in_61(_44_addbus_[61]), 
        .data_in_62(_44_addbus_[62]), 
        .data_in_63(_44_addbus_[63]) 
); 
wire [31:0] _45_addbus_[63:0];    
conv2d #("weight/max_polling/45_0.txt", 2, 0, 31, 31) conv2d_45_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_45_addbus_[0])
);
conv2d #("weight/max_polling/45_1.txt", 2, 0, 31, 31) conv2d_45_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_45_addbus_[1])
);
conv2d #("weight/max_polling/45_2.txt", 2, 0, 31, 31) conv2d_45_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_45_addbus_[2])
);
conv2d #("weight/max_polling/45_3.txt", 2, 0, 31, 31) conv2d_45_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_45_addbus_[3])
);
conv2d #("weight/max_polling/45_4.txt", 2, 0, 31, 31) conv2d_45_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_45_addbus_[4])
);
conv2d #("weight/max_polling/45_5.txt", 2, 0, 31, 31) conv2d_45_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_45_addbus_[5])
);
conv2d #("weight/max_polling/45_6.txt", 2, 0, 31, 31) conv2d_45_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_45_addbus_[6])
);
conv2d #("weight/max_polling/45_7.txt", 2, 0, 31, 31) conv2d_45_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_45_addbus_[7])
);
conv2d #("weight/max_polling/45_8.txt", 2, 0, 31, 31) conv2d_45_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_45_addbus_[8])
);
conv2d #("weight/max_polling/45_9.txt", 2, 0, 31, 31) conv2d_45_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_45_addbus_[9])
);
conv2d #("weight/max_polling/45_10.txt", 2, 0, 31, 31) conv2d_45_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_45_addbus_[10])
);
conv2d #("weight/max_polling/45_11.txt", 2, 0, 31, 31) conv2d_45_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_45_addbus_[11])
);
conv2d #("weight/max_polling/45_12.txt", 2, 0, 31, 31) conv2d_45_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_45_addbus_[12])
);
conv2d #("weight/max_polling/45_13.txt", 2, 0, 31, 31) conv2d_45_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_45_addbus_[13])
);
conv2d #("weight/max_polling/45_14.txt", 2, 0, 31, 31) conv2d_45_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_45_addbus_[14])
);
conv2d #("weight/max_polling/45_15.txt", 2, 0, 31, 31) conv2d_45_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_45_addbus_[15])
);
conv2d #("weight/max_polling/45_16.txt", 2, 0, 31, 31) conv2d_45_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_45_addbus_[16])
);
conv2d #("weight/max_polling/45_17.txt", 2, 0, 31, 31) conv2d_45_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_45_addbus_[17])
);
conv2d #("weight/max_polling/45_18.txt", 2, 0, 31, 31) conv2d_45_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_45_addbus_[18])
);
conv2d #("weight/max_polling/45_19.txt", 2, 0, 31, 31) conv2d_45_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_45_addbus_[19])
);
conv2d #("weight/max_polling/45_20.txt", 2, 0, 31, 31) conv2d_45_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_45_addbus_[20])
);
conv2d #("weight/max_polling/45_21.txt", 2, 0, 31, 31) conv2d_45_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_45_addbus_[21])
);
conv2d #("weight/max_polling/45_22.txt", 2, 0, 31, 31) conv2d_45_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_45_addbus_[22])
);
conv2d #("weight/max_polling/45_23.txt", 2, 0, 31, 31) conv2d_45_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_45_addbus_[23])
);
conv2d #("weight/max_polling/45_24.txt", 2, 0, 31, 31) conv2d_45_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_45_addbus_[24])
);
conv2d #("weight/max_polling/45_25.txt", 2, 0, 31, 31) conv2d_45_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_45_addbus_[25])
);
conv2d #("weight/max_polling/45_26.txt", 2, 0, 31, 31) conv2d_45_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_45_addbus_[26])
);
conv2d #("weight/max_polling/45_27.txt", 2, 0, 31, 31) conv2d_45_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_45_addbus_[27])
);
conv2d #("weight/max_polling/45_28.txt", 2, 0, 31, 31) conv2d_45_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_45_addbus_[28])
);
conv2d #("weight/max_polling/45_29.txt", 2, 0, 31, 31) conv2d_45_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_45_addbus_[29])
);
conv2d #("weight/max_polling/45_30.txt", 2, 0, 31, 31) conv2d_45_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_45_addbus_[30])
);
conv2d #("weight/max_polling/45_31.txt", 2, 0, 31, 31) conv2d_45_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_45_addbus_[31])
);
conv2d #("weight/max_polling/45_32.txt", 2, 0, 31, 31) conv2d_45_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_45_addbus_[32])
);
conv2d #("weight/max_polling/45_33.txt", 2, 0, 31, 31) conv2d_45_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_45_addbus_[33])
);
conv2d #("weight/max_polling/45_34.txt", 2, 0, 31, 31) conv2d_45_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_45_addbus_[34])
);
conv2d #("weight/max_polling/45_35.txt", 2, 0, 31, 31) conv2d_45_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_45_addbus_[35])
);
conv2d #("weight/max_polling/45_36.txt", 2, 0, 31, 31) conv2d_45_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_45_addbus_[36])
);
conv2d #("weight/max_polling/45_37.txt", 2, 0, 31, 31) conv2d_45_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_45_addbus_[37])
);
conv2d #("weight/max_polling/45_38.txt", 2, 0, 31, 31) conv2d_45_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_45_addbus_[38])
);
conv2d #("weight/max_polling/45_39.txt", 2, 0, 31, 31) conv2d_45_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_45_addbus_[39])
);
conv2d #("weight/max_polling/45_40.txt", 2, 0, 31, 31) conv2d_45_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_45_addbus_[40])
);
conv2d #("weight/max_polling/45_41.txt", 2, 0, 31, 31) conv2d_45_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_45_addbus_[41])
);
conv2d #("weight/max_polling/45_42.txt", 2, 0, 31, 31) conv2d_45_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_45_addbus_[42])
);
conv2d #("weight/max_polling/45_43.txt", 2, 0, 31, 31) conv2d_45_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_45_addbus_[43])
);
conv2d #("weight/max_polling/45_44.txt", 2, 0, 31, 31) conv2d_45_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_45_addbus_[44])
);
conv2d #("weight/max_polling/45_45.txt", 2, 0, 31, 31) conv2d_45_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_45_addbus_[45])
);
conv2d #("weight/max_polling/45_46.txt", 2, 0, 31, 31) conv2d_45_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_45_addbus_[46])
);
conv2d #("weight/max_polling/45_47.txt", 2, 0, 31, 31) conv2d_45_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_45_addbus_[47])
);
conv2d #("weight/max_polling/45_48.txt", 2, 0, 31, 31) conv2d_45_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_45_addbus_[48])
);
conv2d #("weight/max_polling/45_49.txt", 2, 0, 31, 31) conv2d_45_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_45_addbus_[49])
);
conv2d #("weight/max_polling/45_50.txt", 2, 0, 31, 31) conv2d_45_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_45_addbus_[50])
);
conv2d #("weight/max_polling/45_51.txt", 2, 0, 31, 31) conv2d_45_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_45_addbus_[51])
);
conv2d #("weight/max_polling/45_52.txt", 2, 0, 31, 31) conv2d_45_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_45_addbus_[52])
);
conv2d #("weight/max_polling/45_53.txt", 2, 0, 31, 31) conv2d_45_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_45_addbus_[53])
);
conv2d #("weight/max_polling/45_54.txt", 2, 0, 31, 31) conv2d_45_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_45_addbus_[54])
);
conv2d #("weight/max_polling/45_55.txt", 2, 0, 31, 31) conv2d_45_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_45_addbus_[55])
);
conv2d #("weight/max_polling/45_56.txt", 2, 0, 31, 31) conv2d_45_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_45_addbus_[56])
);
conv2d #("weight/max_polling/45_57.txt", 2, 0, 31, 31) conv2d_45_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_45_addbus_[57])
);
conv2d #("weight/max_polling/45_58.txt", 2, 0, 31, 31) conv2d_45_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_45_addbus_[58])
);
conv2d #("weight/max_polling/45_59.txt", 2, 0, 31, 31) conv2d_45_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_45_addbus_[59])
);
conv2d #("weight/max_polling/45_60.txt", 2, 0, 31, 31) conv2d_45_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_45_addbus_[60])
);
conv2d #("weight/max_polling/45_61.txt", 2, 0, 31, 31) conv2d_45_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_45_addbus_[61])
);
conv2d #("weight/max_polling/45_62.txt", 2, 0, 31, 31) conv2d_45_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_45_addbus_[62])
);
conv2d #("weight/max_polling/45_63.txt", 2, 0, 31, 31) conv2d_45_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_45_addbus_[63])
);
sum_64 #(15) sum_45( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[45]), 
        .data_in_0(_45_addbus_[0]), 
        .data_in_1(_45_addbus_[1]), 
        .data_in_2(_45_addbus_[2]), 
        .data_in_3(_45_addbus_[3]), 
        .data_in_4(_45_addbus_[4]), 
        .data_in_5(_45_addbus_[5]), 
        .data_in_6(_45_addbus_[6]), 
        .data_in_7(_45_addbus_[7]), 
        .data_in_8(_45_addbus_[8]), 
        .data_in_9(_45_addbus_[9]), 
        .data_in_10(_45_addbus_[10]), 
        .data_in_11(_45_addbus_[11]), 
        .data_in_12(_45_addbus_[12]), 
        .data_in_13(_45_addbus_[13]), 
        .data_in_14(_45_addbus_[14]), 
        .data_in_15(_45_addbus_[15]), 
        .data_in_16(_45_addbus_[16]), 
        .data_in_17(_45_addbus_[17]), 
        .data_in_18(_45_addbus_[18]), 
        .data_in_19(_45_addbus_[19]), 
        .data_in_20(_45_addbus_[20]), 
        .data_in_21(_45_addbus_[21]), 
        .data_in_22(_45_addbus_[22]), 
        .data_in_23(_45_addbus_[23]), 
        .data_in_24(_45_addbus_[24]), 
        .data_in_25(_45_addbus_[25]), 
        .data_in_26(_45_addbus_[26]), 
        .data_in_27(_45_addbus_[27]), 
        .data_in_28(_45_addbus_[28]), 
        .data_in_29(_45_addbus_[29]), 
        .data_in_30(_45_addbus_[30]), 
        .data_in_31(_45_addbus_[31]), 
        .data_in_32(_45_addbus_[32]), 
        .data_in_33(_45_addbus_[33]), 
        .data_in_34(_45_addbus_[34]), 
        .data_in_35(_45_addbus_[35]), 
        .data_in_36(_45_addbus_[36]), 
        .data_in_37(_45_addbus_[37]), 
        .data_in_38(_45_addbus_[38]), 
        .data_in_39(_45_addbus_[39]), 
        .data_in_40(_45_addbus_[40]), 
        .data_in_41(_45_addbus_[41]), 
        .data_in_42(_45_addbus_[42]), 
        .data_in_43(_45_addbus_[43]), 
        .data_in_44(_45_addbus_[44]), 
        .data_in_45(_45_addbus_[45]), 
        .data_in_46(_45_addbus_[46]), 
        .data_in_47(_45_addbus_[47]), 
        .data_in_48(_45_addbus_[48]), 
        .data_in_49(_45_addbus_[49]), 
        .data_in_50(_45_addbus_[50]), 
        .data_in_51(_45_addbus_[51]), 
        .data_in_52(_45_addbus_[52]), 
        .data_in_53(_45_addbus_[53]), 
        .data_in_54(_45_addbus_[54]), 
        .data_in_55(_45_addbus_[55]), 
        .data_in_56(_45_addbus_[56]), 
        .data_in_57(_45_addbus_[57]), 
        .data_in_58(_45_addbus_[58]), 
        .data_in_59(_45_addbus_[59]), 
        .data_in_60(_45_addbus_[60]), 
        .data_in_61(_45_addbus_[61]), 
        .data_in_62(_45_addbus_[62]), 
        .data_in_63(_45_addbus_[63]) 
); 
wire [31:0] _46_addbus_[63:0];    
conv2d #("weight/max_polling/46_0.txt", 2, 0, 31, 31) conv2d_46_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_46_addbus_[0])
);
conv2d #("weight/max_polling/46_1.txt", 2, 0, 31, 31) conv2d_46_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_46_addbus_[1])
);
conv2d #("weight/max_polling/46_2.txt", 2, 0, 31, 31) conv2d_46_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_46_addbus_[2])
);
conv2d #("weight/max_polling/46_3.txt", 2, 0, 31, 31) conv2d_46_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_46_addbus_[3])
);
conv2d #("weight/max_polling/46_4.txt", 2, 0, 31, 31) conv2d_46_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_46_addbus_[4])
);
conv2d #("weight/max_polling/46_5.txt", 2, 0, 31, 31) conv2d_46_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_46_addbus_[5])
);
conv2d #("weight/max_polling/46_6.txt", 2, 0, 31, 31) conv2d_46_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_46_addbus_[6])
);
conv2d #("weight/max_polling/46_7.txt", 2, 0, 31, 31) conv2d_46_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_46_addbus_[7])
);
conv2d #("weight/max_polling/46_8.txt", 2, 0, 31, 31) conv2d_46_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_46_addbus_[8])
);
conv2d #("weight/max_polling/46_9.txt", 2, 0, 31, 31) conv2d_46_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_46_addbus_[9])
);
conv2d #("weight/max_polling/46_10.txt", 2, 0, 31, 31) conv2d_46_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_46_addbus_[10])
);
conv2d #("weight/max_polling/46_11.txt", 2, 0, 31, 31) conv2d_46_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_46_addbus_[11])
);
conv2d #("weight/max_polling/46_12.txt", 2, 0, 31, 31) conv2d_46_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_46_addbus_[12])
);
conv2d #("weight/max_polling/46_13.txt", 2, 0, 31, 31) conv2d_46_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_46_addbus_[13])
);
conv2d #("weight/max_polling/46_14.txt", 2, 0, 31, 31) conv2d_46_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_46_addbus_[14])
);
conv2d #("weight/max_polling/46_15.txt", 2, 0, 31, 31) conv2d_46_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_46_addbus_[15])
);
conv2d #("weight/max_polling/46_16.txt", 2, 0, 31, 31) conv2d_46_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_46_addbus_[16])
);
conv2d #("weight/max_polling/46_17.txt", 2, 0, 31, 31) conv2d_46_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_46_addbus_[17])
);
conv2d #("weight/max_polling/46_18.txt", 2, 0, 31, 31) conv2d_46_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_46_addbus_[18])
);
conv2d #("weight/max_polling/46_19.txt", 2, 0, 31, 31) conv2d_46_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_46_addbus_[19])
);
conv2d #("weight/max_polling/46_20.txt", 2, 0, 31, 31) conv2d_46_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_46_addbus_[20])
);
conv2d #("weight/max_polling/46_21.txt", 2, 0, 31, 31) conv2d_46_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_46_addbus_[21])
);
conv2d #("weight/max_polling/46_22.txt", 2, 0, 31, 31) conv2d_46_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_46_addbus_[22])
);
conv2d #("weight/max_polling/46_23.txt", 2, 0, 31, 31) conv2d_46_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_46_addbus_[23])
);
conv2d #("weight/max_polling/46_24.txt", 2, 0, 31, 31) conv2d_46_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_46_addbus_[24])
);
conv2d #("weight/max_polling/46_25.txt", 2, 0, 31, 31) conv2d_46_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_46_addbus_[25])
);
conv2d #("weight/max_polling/46_26.txt", 2, 0, 31, 31) conv2d_46_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_46_addbus_[26])
);
conv2d #("weight/max_polling/46_27.txt", 2, 0, 31, 31) conv2d_46_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_46_addbus_[27])
);
conv2d #("weight/max_polling/46_28.txt", 2, 0, 31, 31) conv2d_46_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_46_addbus_[28])
);
conv2d #("weight/max_polling/46_29.txt", 2, 0, 31, 31) conv2d_46_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_46_addbus_[29])
);
conv2d #("weight/max_polling/46_30.txt", 2, 0, 31, 31) conv2d_46_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_46_addbus_[30])
);
conv2d #("weight/max_polling/46_31.txt", 2, 0, 31, 31) conv2d_46_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_46_addbus_[31])
);
conv2d #("weight/max_polling/46_32.txt", 2, 0, 31, 31) conv2d_46_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_46_addbus_[32])
);
conv2d #("weight/max_polling/46_33.txt", 2, 0, 31, 31) conv2d_46_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_46_addbus_[33])
);
conv2d #("weight/max_polling/46_34.txt", 2, 0, 31, 31) conv2d_46_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_46_addbus_[34])
);
conv2d #("weight/max_polling/46_35.txt", 2, 0, 31, 31) conv2d_46_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_46_addbus_[35])
);
conv2d #("weight/max_polling/46_36.txt", 2, 0, 31, 31) conv2d_46_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_46_addbus_[36])
);
conv2d #("weight/max_polling/46_37.txt", 2, 0, 31, 31) conv2d_46_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_46_addbus_[37])
);
conv2d #("weight/max_polling/46_38.txt", 2, 0, 31, 31) conv2d_46_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_46_addbus_[38])
);
conv2d #("weight/max_polling/46_39.txt", 2, 0, 31, 31) conv2d_46_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_46_addbus_[39])
);
conv2d #("weight/max_polling/46_40.txt", 2, 0, 31, 31) conv2d_46_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_46_addbus_[40])
);
conv2d #("weight/max_polling/46_41.txt", 2, 0, 31, 31) conv2d_46_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_46_addbus_[41])
);
conv2d #("weight/max_polling/46_42.txt", 2, 0, 31, 31) conv2d_46_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_46_addbus_[42])
);
conv2d #("weight/max_polling/46_43.txt", 2, 0, 31, 31) conv2d_46_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_46_addbus_[43])
);
conv2d #("weight/max_polling/46_44.txt", 2, 0, 31, 31) conv2d_46_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_46_addbus_[44])
);
conv2d #("weight/max_polling/46_45.txt", 2, 0, 31, 31) conv2d_46_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_46_addbus_[45])
);
conv2d #("weight/max_polling/46_46.txt", 2, 0, 31, 31) conv2d_46_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_46_addbus_[46])
);
conv2d #("weight/max_polling/46_47.txt", 2, 0, 31, 31) conv2d_46_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_46_addbus_[47])
);
conv2d #("weight/max_polling/46_48.txt", 2, 0, 31, 31) conv2d_46_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_46_addbus_[48])
);
conv2d #("weight/max_polling/46_49.txt", 2, 0, 31, 31) conv2d_46_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_46_addbus_[49])
);
conv2d #("weight/max_polling/46_50.txt", 2, 0, 31, 31) conv2d_46_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_46_addbus_[50])
);
conv2d #("weight/max_polling/46_51.txt", 2, 0, 31, 31) conv2d_46_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_46_addbus_[51])
);
conv2d #("weight/max_polling/46_52.txt", 2, 0, 31, 31) conv2d_46_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_46_addbus_[52])
);
conv2d #("weight/max_polling/46_53.txt", 2, 0, 31, 31) conv2d_46_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_46_addbus_[53])
);
conv2d #("weight/max_polling/46_54.txt", 2, 0, 31, 31) conv2d_46_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_46_addbus_[54])
);
conv2d #("weight/max_polling/46_55.txt", 2, 0, 31, 31) conv2d_46_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_46_addbus_[55])
);
conv2d #("weight/max_polling/46_56.txt", 2, 0, 31, 31) conv2d_46_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_46_addbus_[56])
);
conv2d #("weight/max_polling/46_57.txt", 2, 0, 31, 31) conv2d_46_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_46_addbus_[57])
);
conv2d #("weight/max_polling/46_58.txt", 2, 0, 31, 31) conv2d_46_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_46_addbus_[58])
);
conv2d #("weight/max_polling/46_59.txt", 2, 0, 31, 31) conv2d_46_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_46_addbus_[59])
);
conv2d #("weight/max_polling/46_60.txt", 2, 0, 31, 31) conv2d_46_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_46_addbus_[60])
);
conv2d #("weight/max_polling/46_61.txt", 2, 0, 31, 31) conv2d_46_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_46_addbus_[61])
);
conv2d #("weight/max_polling/46_62.txt", 2, 0, 31, 31) conv2d_46_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_46_addbus_[62])
);
conv2d #("weight/max_polling/46_63.txt", 2, 0, 31, 31) conv2d_46_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_46_addbus_[63])
);
sum_64 #(15) sum_46( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[46]), 
        .data_in_0(_46_addbus_[0]), 
        .data_in_1(_46_addbus_[1]), 
        .data_in_2(_46_addbus_[2]), 
        .data_in_3(_46_addbus_[3]), 
        .data_in_4(_46_addbus_[4]), 
        .data_in_5(_46_addbus_[5]), 
        .data_in_6(_46_addbus_[6]), 
        .data_in_7(_46_addbus_[7]), 
        .data_in_8(_46_addbus_[8]), 
        .data_in_9(_46_addbus_[9]), 
        .data_in_10(_46_addbus_[10]), 
        .data_in_11(_46_addbus_[11]), 
        .data_in_12(_46_addbus_[12]), 
        .data_in_13(_46_addbus_[13]), 
        .data_in_14(_46_addbus_[14]), 
        .data_in_15(_46_addbus_[15]), 
        .data_in_16(_46_addbus_[16]), 
        .data_in_17(_46_addbus_[17]), 
        .data_in_18(_46_addbus_[18]), 
        .data_in_19(_46_addbus_[19]), 
        .data_in_20(_46_addbus_[20]), 
        .data_in_21(_46_addbus_[21]), 
        .data_in_22(_46_addbus_[22]), 
        .data_in_23(_46_addbus_[23]), 
        .data_in_24(_46_addbus_[24]), 
        .data_in_25(_46_addbus_[25]), 
        .data_in_26(_46_addbus_[26]), 
        .data_in_27(_46_addbus_[27]), 
        .data_in_28(_46_addbus_[28]), 
        .data_in_29(_46_addbus_[29]), 
        .data_in_30(_46_addbus_[30]), 
        .data_in_31(_46_addbus_[31]), 
        .data_in_32(_46_addbus_[32]), 
        .data_in_33(_46_addbus_[33]), 
        .data_in_34(_46_addbus_[34]), 
        .data_in_35(_46_addbus_[35]), 
        .data_in_36(_46_addbus_[36]), 
        .data_in_37(_46_addbus_[37]), 
        .data_in_38(_46_addbus_[38]), 
        .data_in_39(_46_addbus_[39]), 
        .data_in_40(_46_addbus_[40]), 
        .data_in_41(_46_addbus_[41]), 
        .data_in_42(_46_addbus_[42]), 
        .data_in_43(_46_addbus_[43]), 
        .data_in_44(_46_addbus_[44]), 
        .data_in_45(_46_addbus_[45]), 
        .data_in_46(_46_addbus_[46]), 
        .data_in_47(_46_addbus_[47]), 
        .data_in_48(_46_addbus_[48]), 
        .data_in_49(_46_addbus_[49]), 
        .data_in_50(_46_addbus_[50]), 
        .data_in_51(_46_addbus_[51]), 
        .data_in_52(_46_addbus_[52]), 
        .data_in_53(_46_addbus_[53]), 
        .data_in_54(_46_addbus_[54]), 
        .data_in_55(_46_addbus_[55]), 
        .data_in_56(_46_addbus_[56]), 
        .data_in_57(_46_addbus_[57]), 
        .data_in_58(_46_addbus_[58]), 
        .data_in_59(_46_addbus_[59]), 
        .data_in_60(_46_addbus_[60]), 
        .data_in_61(_46_addbus_[61]), 
        .data_in_62(_46_addbus_[62]), 
        .data_in_63(_46_addbus_[63]) 
); 
wire [31:0] _47_addbus_[63:0];    
conv2d #("weight/max_polling/47_0.txt", 2, 0, 31, 31) conv2d_47_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_47_addbus_[0])
);
conv2d #("weight/max_polling/47_1.txt", 2, 0, 31, 31) conv2d_47_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_47_addbus_[1])
);
conv2d #("weight/max_polling/47_2.txt", 2, 0, 31, 31) conv2d_47_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_47_addbus_[2])
);
conv2d #("weight/max_polling/47_3.txt", 2, 0, 31, 31) conv2d_47_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_47_addbus_[3])
);
conv2d #("weight/max_polling/47_4.txt", 2, 0, 31, 31) conv2d_47_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_47_addbus_[4])
);
conv2d #("weight/max_polling/47_5.txt", 2, 0, 31, 31) conv2d_47_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_47_addbus_[5])
);
conv2d #("weight/max_polling/47_6.txt", 2, 0, 31, 31) conv2d_47_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_47_addbus_[6])
);
conv2d #("weight/max_polling/47_7.txt", 2, 0, 31, 31) conv2d_47_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_47_addbus_[7])
);
conv2d #("weight/max_polling/47_8.txt", 2, 0, 31, 31) conv2d_47_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_47_addbus_[8])
);
conv2d #("weight/max_polling/47_9.txt", 2, 0, 31, 31) conv2d_47_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_47_addbus_[9])
);
conv2d #("weight/max_polling/47_10.txt", 2, 0, 31, 31) conv2d_47_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_47_addbus_[10])
);
conv2d #("weight/max_polling/47_11.txt", 2, 0, 31, 31) conv2d_47_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_47_addbus_[11])
);
conv2d #("weight/max_polling/47_12.txt", 2, 0, 31, 31) conv2d_47_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_47_addbus_[12])
);
conv2d #("weight/max_polling/47_13.txt", 2, 0, 31, 31) conv2d_47_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_47_addbus_[13])
);
conv2d #("weight/max_polling/47_14.txt", 2, 0, 31, 31) conv2d_47_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_47_addbus_[14])
);
conv2d #("weight/max_polling/47_15.txt", 2, 0, 31, 31) conv2d_47_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_47_addbus_[15])
);
conv2d #("weight/max_polling/47_16.txt", 2, 0, 31, 31) conv2d_47_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_47_addbus_[16])
);
conv2d #("weight/max_polling/47_17.txt", 2, 0, 31, 31) conv2d_47_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_47_addbus_[17])
);
conv2d #("weight/max_polling/47_18.txt", 2, 0, 31, 31) conv2d_47_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_47_addbus_[18])
);
conv2d #("weight/max_polling/47_19.txt", 2, 0, 31, 31) conv2d_47_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_47_addbus_[19])
);
conv2d #("weight/max_polling/47_20.txt", 2, 0, 31, 31) conv2d_47_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_47_addbus_[20])
);
conv2d #("weight/max_polling/47_21.txt", 2, 0, 31, 31) conv2d_47_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_47_addbus_[21])
);
conv2d #("weight/max_polling/47_22.txt", 2, 0, 31, 31) conv2d_47_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_47_addbus_[22])
);
conv2d #("weight/max_polling/47_23.txt", 2, 0, 31, 31) conv2d_47_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_47_addbus_[23])
);
conv2d #("weight/max_polling/47_24.txt", 2, 0, 31, 31) conv2d_47_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_47_addbus_[24])
);
conv2d #("weight/max_polling/47_25.txt", 2, 0, 31, 31) conv2d_47_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_47_addbus_[25])
);
conv2d #("weight/max_polling/47_26.txt", 2, 0, 31, 31) conv2d_47_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_47_addbus_[26])
);
conv2d #("weight/max_polling/47_27.txt", 2, 0, 31, 31) conv2d_47_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_47_addbus_[27])
);
conv2d #("weight/max_polling/47_28.txt", 2, 0, 31, 31) conv2d_47_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_47_addbus_[28])
);
conv2d #("weight/max_polling/47_29.txt", 2, 0, 31, 31) conv2d_47_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_47_addbus_[29])
);
conv2d #("weight/max_polling/47_30.txt", 2, 0, 31, 31) conv2d_47_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_47_addbus_[30])
);
conv2d #("weight/max_polling/47_31.txt", 2, 0, 31, 31) conv2d_47_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_47_addbus_[31])
);
conv2d #("weight/max_polling/47_32.txt", 2, 0, 31, 31) conv2d_47_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_47_addbus_[32])
);
conv2d #("weight/max_polling/47_33.txt", 2, 0, 31, 31) conv2d_47_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_47_addbus_[33])
);
conv2d #("weight/max_polling/47_34.txt", 2, 0, 31, 31) conv2d_47_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_47_addbus_[34])
);
conv2d #("weight/max_polling/47_35.txt", 2, 0, 31, 31) conv2d_47_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_47_addbus_[35])
);
conv2d #("weight/max_polling/47_36.txt", 2, 0, 31, 31) conv2d_47_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_47_addbus_[36])
);
conv2d #("weight/max_polling/47_37.txt", 2, 0, 31, 31) conv2d_47_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_47_addbus_[37])
);
conv2d #("weight/max_polling/47_38.txt", 2, 0, 31, 31) conv2d_47_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_47_addbus_[38])
);
conv2d #("weight/max_polling/47_39.txt", 2, 0, 31, 31) conv2d_47_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_47_addbus_[39])
);
conv2d #("weight/max_polling/47_40.txt", 2, 0, 31, 31) conv2d_47_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_47_addbus_[40])
);
conv2d #("weight/max_polling/47_41.txt", 2, 0, 31, 31) conv2d_47_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_47_addbus_[41])
);
conv2d #("weight/max_polling/47_42.txt", 2, 0, 31, 31) conv2d_47_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_47_addbus_[42])
);
conv2d #("weight/max_polling/47_43.txt", 2, 0, 31, 31) conv2d_47_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_47_addbus_[43])
);
conv2d #("weight/max_polling/47_44.txt", 2, 0, 31, 31) conv2d_47_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_47_addbus_[44])
);
conv2d #("weight/max_polling/47_45.txt", 2, 0, 31, 31) conv2d_47_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_47_addbus_[45])
);
conv2d #("weight/max_polling/47_46.txt", 2, 0, 31, 31) conv2d_47_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_47_addbus_[46])
);
conv2d #("weight/max_polling/47_47.txt", 2, 0, 31, 31) conv2d_47_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_47_addbus_[47])
);
conv2d #("weight/max_polling/47_48.txt", 2, 0, 31, 31) conv2d_47_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_47_addbus_[48])
);
conv2d #("weight/max_polling/47_49.txt", 2, 0, 31, 31) conv2d_47_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_47_addbus_[49])
);
conv2d #("weight/max_polling/47_50.txt", 2, 0, 31, 31) conv2d_47_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_47_addbus_[50])
);
conv2d #("weight/max_polling/47_51.txt", 2, 0, 31, 31) conv2d_47_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_47_addbus_[51])
);
conv2d #("weight/max_polling/47_52.txt", 2, 0, 31, 31) conv2d_47_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_47_addbus_[52])
);
conv2d #("weight/max_polling/47_53.txt", 2, 0, 31, 31) conv2d_47_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_47_addbus_[53])
);
conv2d #("weight/max_polling/47_54.txt", 2, 0, 31, 31) conv2d_47_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_47_addbus_[54])
);
conv2d #("weight/max_polling/47_55.txt", 2, 0, 31, 31) conv2d_47_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_47_addbus_[55])
);
conv2d #("weight/max_polling/47_56.txt", 2, 0, 31, 31) conv2d_47_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_47_addbus_[56])
);
conv2d #("weight/max_polling/47_57.txt", 2, 0, 31, 31) conv2d_47_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_47_addbus_[57])
);
conv2d #("weight/max_polling/47_58.txt", 2, 0, 31, 31) conv2d_47_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_47_addbus_[58])
);
conv2d #("weight/max_polling/47_59.txt", 2, 0, 31, 31) conv2d_47_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_47_addbus_[59])
);
conv2d #("weight/max_polling/47_60.txt", 2, 0, 31, 31) conv2d_47_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_47_addbus_[60])
);
conv2d #("weight/max_polling/47_61.txt", 2, 0, 31, 31) conv2d_47_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_47_addbus_[61])
);
conv2d #("weight/max_polling/47_62.txt", 2, 0, 31, 31) conv2d_47_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_47_addbus_[62])
);
conv2d #("weight/max_polling/47_63.txt", 2, 0, 31, 31) conv2d_47_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_47_addbus_[63])
);
sum_64 #(15) sum_47( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[47]), 
        .data_in_0(_47_addbus_[0]), 
        .data_in_1(_47_addbus_[1]), 
        .data_in_2(_47_addbus_[2]), 
        .data_in_3(_47_addbus_[3]), 
        .data_in_4(_47_addbus_[4]), 
        .data_in_5(_47_addbus_[5]), 
        .data_in_6(_47_addbus_[6]), 
        .data_in_7(_47_addbus_[7]), 
        .data_in_8(_47_addbus_[8]), 
        .data_in_9(_47_addbus_[9]), 
        .data_in_10(_47_addbus_[10]), 
        .data_in_11(_47_addbus_[11]), 
        .data_in_12(_47_addbus_[12]), 
        .data_in_13(_47_addbus_[13]), 
        .data_in_14(_47_addbus_[14]), 
        .data_in_15(_47_addbus_[15]), 
        .data_in_16(_47_addbus_[16]), 
        .data_in_17(_47_addbus_[17]), 
        .data_in_18(_47_addbus_[18]), 
        .data_in_19(_47_addbus_[19]), 
        .data_in_20(_47_addbus_[20]), 
        .data_in_21(_47_addbus_[21]), 
        .data_in_22(_47_addbus_[22]), 
        .data_in_23(_47_addbus_[23]), 
        .data_in_24(_47_addbus_[24]), 
        .data_in_25(_47_addbus_[25]), 
        .data_in_26(_47_addbus_[26]), 
        .data_in_27(_47_addbus_[27]), 
        .data_in_28(_47_addbus_[28]), 
        .data_in_29(_47_addbus_[29]), 
        .data_in_30(_47_addbus_[30]), 
        .data_in_31(_47_addbus_[31]), 
        .data_in_32(_47_addbus_[32]), 
        .data_in_33(_47_addbus_[33]), 
        .data_in_34(_47_addbus_[34]), 
        .data_in_35(_47_addbus_[35]), 
        .data_in_36(_47_addbus_[36]), 
        .data_in_37(_47_addbus_[37]), 
        .data_in_38(_47_addbus_[38]), 
        .data_in_39(_47_addbus_[39]), 
        .data_in_40(_47_addbus_[40]), 
        .data_in_41(_47_addbus_[41]), 
        .data_in_42(_47_addbus_[42]), 
        .data_in_43(_47_addbus_[43]), 
        .data_in_44(_47_addbus_[44]), 
        .data_in_45(_47_addbus_[45]), 
        .data_in_46(_47_addbus_[46]), 
        .data_in_47(_47_addbus_[47]), 
        .data_in_48(_47_addbus_[48]), 
        .data_in_49(_47_addbus_[49]), 
        .data_in_50(_47_addbus_[50]), 
        .data_in_51(_47_addbus_[51]), 
        .data_in_52(_47_addbus_[52]), 
        .data_in_53(_47_addbus_[53]), 
        .data_in_54(_47_addbus_[54]), 
        .data_in_55(_47_addbus_[55]), 
        .data_in_56(_47_addbus_[56]), 
        .data_in_57(_47_addbus_[57]), 
        .data_in_58(_47_addbus_[58]), 
        .data_in_59(_47_addbus_[59]), 
        .data_in_60(_47_addbus_[60]), 
        .data_in_61(_47_addbus_[61]), 
        .data_in_62(_47_addbus_[62]), 
        .data_in_63(_47_addbus_[63]) 
); 
wire [31:0] _48_addbus_[63:0];    
conv2d #("weight/max_polling/48_0.txt", 2, 0, 31, 31) conv2d_48_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_48_addbus_[0])
);
conv2d #("weight/max_polling/48_1.txt", 2, 0, 31, 31) conv2d_48_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_48_addbus_[1])
);
conv2d #("weight/max_polling/48_2.txt", 2, 0, 31, 31) conv2d_48_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_48_addbus_[2])
);
conv2d #("weight/max_polling/48_3.txt", 2, 0, 31, 31) conv2d_48_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_48_addbus_[3])
);
conv2d #("weight/max_polling/48_4.txt", 2, 0, 31, 31) conv2d_48_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_48_addbus_[4])
);
conv2d #("weight/max_polling/48_5.txt", 2, 0, 31, 31) conv2d_48_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_48_addbus_[5])
);
conv2d #("weight/max_polling/48_6.txt", 2, 0, 31, 31) conv2d_48_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_48_addbus_[6])
);
conv2d #("weight/max_polling/48_7.txt", 2, 0, 31, 31) conv2d_48_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_48_addbus_[7])
);
conv2d #("weight/max_polling/48_8.txt", 2, 0, 31, 31) conv2d_48_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_48_addbus_[8])
);
conv2d #("weight/max_polling/48_9.txt", 2, 0, 31, 31) conv2d_48_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_48_addbus_[9])
);
conv2d #("weight/max_polling/48_10.txt", 2, 0, 31, 31) conv2d_48_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_48_addbus_[10])
);
conv2d #("weight/max_polling/48_11.txt", 2, 0, 31, 31) conv2d_48_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_48_addbus_[11])
);
conv2d #("weight/max_polling/48_12.txt", 2, 0, 31, 31) conv2d_48_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_48_addbus_[12])
);
conv2d #("weight/max_polling/48_13.txt", 2, 0, 31, 31) conv2d_48_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_48_addbus_[13])
);
conv2d #("weight/max_polling/48_14.txt", 2, 0, 31, 31) conv2d_48_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_48_addbus_[14])
);
conv2d #("weight/max_polling/48_15.txt", 2, 0, 31, 31) conv2d_48_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_48_addbus_[15])
);
conv2d #("weight/max_polling/48_16.txt", 2, 0, 31, 31) conv2d_48_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_48_addbus_[16])
);
conv2d #("weight/max_polling/48_17.txt", 2, 0, 31, 31) conv2d_48_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_48_addbus_[17])
);
conv2d #("weight/max_polling/48_18.txt", 2, 0, 31, 31) conv2d_48_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_48_addbus_[18])
);
conv2d #("weight/max_polling/48_19.txt", 2, 0, 31, 31) conv2d_48_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_48_addbus_[19])
);
conv2d #("weight/max_polling/48_20.txt", 2, 0, 31, 31) conv2d_48_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_48_addbus_[20])
);
conv2d #("weight/max_polling/48_21.txt", 2, 0, 31, 31) conv2d_48_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_48_addbus_[21])
);
conv2d #("weight/max_polling/48_22.txt", 2, 0, 31, 31) conv2d_48_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_48_addbus_[22])
);
conv2d #("weight/max_polling/48_23.txt", 2, 0, 31, 31) conv2d_48_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_48_addbus_[23])
);
conv2d #("weight/max_polling/48_24.txt", 2, 0, 31, 31) conv2d_48_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_48_addbus_[24])
);
conv2d #("weight/max_polling/48_25.txt", 2, 0, 31, 31) conv2d_48_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_48_addbus_[25])
);
conv2d #("weight/max_polling/48_26.txt", 2, 0, 31, 31) conv2d_48_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_48_addbus_[26])
);
conv2d #("weight/max_polling/48_27.txt", 2, 0, 31, 31) conv2d_48_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_48_addbus_[27])
);
conv2d #("weight/max_polling/48_28.txt", 2, 0, 31, 31) conv2d_48_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_48_addbus_[28])
);
conv2d #("weight/max_polling/48_29.txt", 2, 0, 31, 31) conv2d_48_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_48_addbus_[29])
);
conv2d #("weight/max_polling/48_30.txt", 2, 0, 31, 31) conv2d_48_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_48_addbus_[30])
);
conv2d #("weight/max_polling/48_31.txt", 2, 0, 31, 31) conv2d_48_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_48_addbus_[31])
);
conv2d #("weight/max_polling/48_32.txt", 2, 0, 31, 31) conv2d_48_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_48_addbus_[32])
);
conv2d #("weight/max_polling/48_33.txt", 2, 0, 31, 31) conv2d_48_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_48_addbus_[33])
);
conv2d #("weight/max_polling/48_34.txt", 2, 0, 31, 31) conv2d_48_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_48_addbus_[34])
);
conv2d #("weight/max_polling/48_35.txt", 2, 0, 31, 31) conv2d_48_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_48_addbus_[35])
);
conv2d #("weight/max_polling/48_36.txt", 2, 0, 31, 31) conv2d_48_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_48_addbus_[36])
);
conv2d #("weight/max_polling/48_37.txt", 2, 0, 31, 31) conv2d_48_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_48_addbus_[37])
);
conv2d #("weight/max_polling/48_38.txt", 2, 0, 31, 31) conv2d_48_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_48_addbus_[38])
);
conv2d #("weight/max_polling/48_39.txt", 2, 0, 31, 31) conv2d_48_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_48_addbus_[39])
);
conv2d #("weight/max_polling/48_40.txt", 2, 0, 31, 31) conv2d_48_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_48_addbus_[40])
);
conv2d #("weight/max_polling/48_41.txt", 2, 0, 31, 31) conv2d_48_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_48_addbus_[41])
);
conv2d #("weight/max_polling/48_42.txt", 2, 0, 31, 31) conv2d_48_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_48_addbus_[42])
);
conv2d #("weight/max_polling/48_43.txt", 2, 0, 31, 31) conv2d_48_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_48_addbus_[43])
);
conv2d #("weight/max_polling/48_44.txt", 2, 0, 31, 31) conv2d_48_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_48_addbus_[44])
);
conv2d #("weight/max_polling/48_45.txt", 2, 0, 31, 31) conv2d_48_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_48_addbus_[45])
);
conv2d #("weight/max_polling/48_46.txt", 2, 0, 31, 31) conv2d_48_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_48_addbus_[46])
);
conv2d #("weight/max_polling/48_47.txt", 2, 0, 31, 31) conv2d_48_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_48_addbus_[47])
);
conv2d #("weight/max_polling/48_48.txt", 2, 0, 31, 31) conv2d_48_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_48_addbus_[48])
);
conv2d #("weight/max_polling/48_49.txt", 2, 0, 31, 31) conv2d_48_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_48_addbus_[49])
);
conv2d #("weight/max_polling/48_50.txt", 2, 0, 31, 31) conv2d_48_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_48_addbus_[50])
);
conv2d #("weight/max_polling/48_51.txt", 2, 0, 31, 31) conv2d_48_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_48_addbus_[51])
);
conv2d #("weight/max_polling/48_52.txt", 2, 0, 31, 31) conv2d_48_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_48_addbus_[52])
);
conv2d #("weight/max_polling/48_53.txt", 2, 0, 31, 31) conv2d_48_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_48_addbus_[53])
);
conv2d #("weight/max_polling/48_54.txt", 2, 0, 31, 31) conv2d_48_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_48_addbus_[54])
);
conv2d #("weight/max_polling/48_55.txt", 2, 0, 31, 31) conv2d_48_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_48_addbus_[55])
);
conv2d #("weight/max_polling/48_56.txt", 2, 0, 31, 31) conv2d_48_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_48_addbus_[56])
);
conv2d #("weight/max_polling/48_57.txt", 2, 0, 31, 31) conv2d_48_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_48_addbus_[57])
);
conv2d #("weight/max_polling/48_58.txt", 2, 0, 31, 31) conv2d_48_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_48_addbus_[58])
);
conv2d #("weight/max_polling/48_59.txt", 2, 0, 31, 31) conv2d_48_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_48_addbus_[59])
);
conv2d #("weight/max_polling/48_60.txt", 2, 0, 31, 31) conv2d_48_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_48_addbus_[60])
);
conv2d #("weight/max_polling/48_61.txt", 2, 0, 31, 31) conv2d_48_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_48_addbus_[61])
);
conv2d #("weight/max_polling/48_62.txt", 2, 0, 31, 31) conv2d_48_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_48_addbus_[62])
);
conv2d #("weight/max_polling/48_63.txt", 2, 0, 31, 31) conv2d_48_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_48_addbus_[63])
);
sum_64 #(15) sum_48( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[48]), 
        .data_in_0(_48_addbus_[0]), 
        .data_in_1(_48_addbus_[1]), 
        .data_in_2(_48_addbus_[2]), 
        .data_in_3(_48_addbus_[3]), 
        .data_in_4(_48_addbus_[4]), 
        .data_in_5(_48_addbus_[5]), 
        .data_in_6(_48_addbus_[6]), 
        .data_in_7(_48_addbus_[7]), 
        .data_in_8(_48_addbus_[8]), 
        .data_in_9(_48_addbus_[9]), 
        .data_in_10(_48_addbus_[10]), 
        .data_in_11(_48_addbus_[11]), 
        .data_in_12(_48_addbus_[12]), 
        .data_in_13(_48_addbus_[13]), 
        .data_in_14(_48_addbus_[14]), 
        .data_in_15(_48_addbus_[15]), 
        .data_in_16(_48_addbus_[16]), 
        .data_in_17(_48_addbus_[17]), 
        .data_in_18(_48_addbus_[18]), 
        .data_in_19(_48_addbus_[19]), 
        .data_in_20(_48_addbus_[20]), 
        .data_in_21(_48_addbus_[21]), 
        .data_in_22(_48_addbus_[22]), 
        .data_in_23(_48_addbus_[23]), 
        .data_in_24(_48_addbus_[24]), 
        .data_in_25(_48_addbus_[25]), 
        .data_in_26(_48_addbus_[26]), 
        .data_in_27(_48_addbus_[27]), 
        .data_in_28(_48_addbus_[28]), 
        .data_in_29(_48_addbus_[29]), 
        .data_in_30(_48_addbus_[30]), 
        .data_in_31(_48_addbus_[31]), 
        .data_in_32(_48_addbus_[32]), 
        .data_in_33(_48_addbus_[33]), 
        .data_in_34(_48_addbus_[34]), 
        .data_in_35(_48_addbus_[35]), 
        .data_in_36(_48_addbus_[36]), 
        .data_in_37(_48_addbus_[37]), 
        .data_in_38(_48_addbus_[38]), 
        .data_in_39(_48_addbus_[39]), 
        .data_in_40(_48_addbus_[40]), 
        .data_in_41(_48_addbus_[41]), 
        .data_in_42(_48_addbus_[42]), 
        .data_in_43(_48_addbus_[43]), 
        .data_in_44(_48_addbus_[44]), 
        .data_in_45(_48_addbus_[45]), 
        .data_in_46(_48_addbus_[46]), 
        .data_in_47(_48_addbus_[47]), 
        .data_in_48(_48_addbus_[48]), 
        .data_in_49(_48_addbus_[49]), 
        .data_in_50(_48_addbus_[50]), 
        .data_in_51(_48_addbus_[51]), 
        .data_in_52(_48_addbus_[52]), 
        .data_in_53(_48_addbus_[53]), 
        .data_in_54(_48_addbus_[54]), 
        .data_in_55(_48_addbus_[55]), 
        .data_in_56(_48_addbus_[56]), 
        .data_in_57(_48_addbus_[57]), 
        .data_in_58(_48_addbus_[58]), 
        .data_in_59(_48_addbus_[59]), 
        .data_in_60(_48_addbus_[60]), 
        .data_in_61(_48_addbus_[61]), 
        .data_in_62(_48_addbus_[62]), 
        .data_in_63(_48_addbus_[63]) 
); 
wire [31:0] _49_addbus_[63:0];    
conv2d #("weight/max_polling/49_0.txt", 2, 0, 31, 31) conv2d_49_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_49_addbus_[0])
);
conv2d #("weight/max_polling/49_1.txt", 2, 0, 31, 31) conv2d_49_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_49_addbus_[1])
);
conv2d #("weight/max_polling/49_2.txt", 2, 0, 31, 31) conv2d_49_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_49_addbus_[2])
);
conv2d #("weight/max_polling/49_3.txt", 2, 0, 31, 31) conv2d_49_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_49_addbus_[3])
);
conv2d #("weight/max_polling/49_4.txt", 2, 0, 31, 31) conv2d_49_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_49_addbus_[4])
);
conv2d #("weight/max_polling/49_5.txt", 2, 0, 31, 31) conv2d_49_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_49_addbus_[5])
);
conv2d #("weight/max_polling/49_6.txt", 2, 0, 31, 31) conv2d_49_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_49_addbus_[6])
);
conv2d #("weight/max_polling/49_7.txt", 2, 0, 31, 31) conv2d_49_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_49_addbus_[7])
);
conv2d #("weight/max_polling/49_8.txt", 2, 0, 31, 31) conv2d_49_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_49_addbus_[8])
);
conv2d #("weight/max_polling/49_9.txt", 2, 0, 31, 31) conv2d_49_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_49_addbus_[9])
);
conv2d #("weight/max_polling/49_10.txt", 2, 0, 31, 31) conv2d_49_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_49_addbus_[10])
);
conv2d #("weight/max_polling/49_11.txt", 2, 0, 31, 31) conv2d_49_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_49_addbus_[11])
);
conv2d #("weight/max_polling/49_12.txt", 2, 0, 31, 31) conv2d_49_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_49_addbus_[12])
);
conv2d #("weight/max_polling/49_13.txt", 2, 0, 31, 31) conv2d_49_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_49_addbus_[13])
);
conv2d #("weight/max_polling/49_14.txt", 2, 0, 31, 31) conv2d_49_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_49_addbus_[14])
);
conv2d #("weight/max_polling/49_15.txt", 2, 0, 31, 31) conv2d_49_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_49_addbus_[15])
);
conv2d #("weight/max_polling/49_16.txt", 2, 0, 31, 31) conv2d_49_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_49_addbus_[16])
);
conv2d #("weight/max_polling/49_17.txt", 2, 0, 31, 31) conv2d_49_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_49_addbus_[17])
);
conv2d #("weight/max_polling/49_18.txt", 2, 0, 31, 31) conv2d_49_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_49_addbus_[18])
);
conv2d #("weight/max_polling/49_19.txt", 2, 0, 31, 31) conv2d_49_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_49_addbus_[19])
);
conv2d #("weight/max_polling/49_20.txt", 2, 0, 31, 31) conv2d_49_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_49_addbus_[20])
);
conv2d #("weight/max_polling/49_21.txt", 2, 0, 31, 31) conv2d_49_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_49_addbus_[21])
);
conv2d #("weight/max_polling/49_22.txt", 2, 0, 31, 31) conv2d_49_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_49_addbus_[22])
);
conv2d #("weight/max_polling/49_23.txt", 2, 0, 31, 31) conv2d_49_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_49_addbus_[23])
);
conv2d #("weight/max_polling/49_24.txt", 2, 0, 31, 31) conv2d_49_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_49_addbus_[24])
);
conv2d #("weight/max_polling/49_25.txt", 2, 0, 31, 31) conv2d_49_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_49_addbus_[25])
);
conv2d #("weight/max_polling/49_26.txt", 2, 0, 31, 31) conv2d_49_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_49_addbus_[26])
);
conv2d #("weight/max_polling/49_27.txt", 2, 0, 31, 31) conv2d_49_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_49_addbus_[27])
);
conv2d #("weight/max_polling/49_28.txt", 2, 0, 31, 31) conv2d_49_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_49_addbus_[28])
);
conv2d #("weight/max_polling/49_29.txt", 2, 0, 31, 31) conv2d_49_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_49_addbus_[29])
);
conv2d #("weight/max_polling/49_30.txt", 2, 0, 31, 31) conv2d_49_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_49_addbus_[30])
);
conv2d #("weight/max_polling/49_31.txt", 2, 0, 31, 31) conv2d_49_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_49_addbus_[31])
);
conv2d #("weight/max_polling/49_32.txt", 2, 0, 31, 31) conv2d_49_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_49_addbus_[32])
);
conv2d #("weight/max_polling/49_33.txt", 2, 0, 31, 31) conv2d_49_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_49_addbus_[33])
);
conv2d #("weight/max_polling/49_34.txt", 2, 0, 31, 31) conv2d_49_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_49_addbus_[34])
);
conv2d #("weight/max_polling/49_35.txt", 2, 0, 31, 31) conv2d_49_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_49_addbus_[35])
);
conv2d #("weight/max_polling/49_36.txt", 2, 0, 31, 31) conv2d_49_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_49_addbus_[36])
);
conv2d #("weight/max_polling/49_37.txt", 2, 0, 31, 31) conv2d_49_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_49_addbus_[37])
);
conv2d #("weight/max_polling/49_38.txt", 2, 0, 31, 31) conv2d_49_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_49_addbus_[38])
);
conv2d #("weight/max_polling/49_39.txt", 2, 0, 31, 31) conv2d_49_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_49_addbus_[39])
);
conv2d #("weight/max_polling/49_40.txt", 2, 0, 31, 31) conv2d_49_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_49_addbus_[40])
);
conv2d #("weight/max_polling/49_41.txt", 2, 0, 31, 31) conv2d_49_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_49_addbus_[41])
);
conv2d #("weight/max_polling/49_42.txt", 2, 0, 31, 31) conv2d_49_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_49_addbus_[42])
);
conv2d #("weight/max_polling/49_43.txt", 2, 0, 31, 31) conv2d_49_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_49_addbus_[43])
);
conv2d #("weight/max_polling/49_44.txt", 2, 0, 31, 31) conv2d_49_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_49_addbus_[44])
);
conv2d #("weight/max_polling/49_45.txt", 2, 0, 31, 31) conv2d_49_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_49_addbus_[45])
);
conv2d #("weight/max_polling/49_46.txt", 2, 0, 31, 31) conv2d_49_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_49_addbus_[46])
);
conv2d #("weight/max_polling/49_47.txt", 2, 0, 31, 31) conv2d_49_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_49_addbus_[47])
);
conv2d #("weight/max_polling/49_48.txt", 2, 0, 31, 31) conv2d_49_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_49_addbus_[48])
);
conv2d #("weight/max_polling/49_49.txt", 2, 0, 31, 31) conv2d_49_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_49_addbus_[49])
);
conv2d #("weight/max_polling/49_50.txt", 2, 0, 31, 31) conv2d_49_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_49_addbus_[50])
);
conv2d #("weight/max_polling/49_51.txt", 2, 0, 31, 31) conv2d_49_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_49_addbus_[51])
);
conv2d #("weight/max_polling/49_52.txt", 2, 0, 31, 31) conv2d_49_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_49_addbus_[52])
);
conv2d #("weight/max_polling/49_53.txt", 2, 0, 31, 31) conv2d_49_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_49_addbus_[53])
);
conv2d #("weight/max_polling/49_54.txt", 2, 0, 31, 31) conv2d_49_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_49_addbus_[54])
);
conv2d #("weight/max_polling/49_55.txt", 2, 0, 31, 31) conv2d_49_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_49_addbus_[55])
);
conv2d #("weight/max_polling/49_56.txt", 2, 0, 31, 31) conv2d_49_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_49_addbus_[56])
);
conv2d #("weight/max_polling/49_57.txt", 2, 0, 31, 31) conv2d_49_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_49_addbus_[57])
);
conv2d #("weight/max_polling/49_58.txt", 2, 0, 31, 31) conv2d_49_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_49_addbus_[58])
);
conv2d #("weight/max_polling/49_59.txt", 2, 0, 31, 31) conv2d_49_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_49_addbus_[59])
);
conv2d #("weight/max_polling/49_60.txt", 2, 0, 31, 31) conv2d_49_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_49_addbus_[60])
);
conv2d #("weight/max_polling/49_61.txt", 2, 0, 31, 31) conv2d_49_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_49_addbus_[61])
);
conv2d #("weight/max_polling/49_62.txt", 2, 0, 31, 31) conv2d_49_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_49_addbus_[62])
);
conv2d #("weight/max_polling/49_63.txt", 2, 0, 31, 31) conv2d_49_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_49_addbus_[63])
);
sum_64 #(15) sum_49( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[49]), 
        .data_in_0(_49_addbus_[0]), 
        .data_in_1(_49_addbus_[1]), 
        .data_in_2(_49_addbus_[2]), 
        .data_in_3(_49_addbus_[3]), 
        .data_in_4(_49_addbus_[4]), 
        .data_in_5(_49_addbus_[5]), 
        .data_in_6(_49_addbus_[6]), 
        .data_in_7(_49_addbus_[7]), 
        .data_in_8(_49_addbus_[8]), 
        .data_in_9(_49_addbus_[9]), 
        .data_in_10(_49_addbus_[10]), 
        .data_in_11(_49_addbus_[11]), 
        .data_in_12(_49_addbus_[12]), 
        .data_in_13(_49_addbus_[13]), 
        .data_in_14(_49_addbus_[14]), 
        .data_in_15(_49_addbus_[15]), 
        .data_in_16(_49_addbus_[16]), 
        .data_in_17(_49_addbus_[17]), 
        .data_in_18(_49_addbus_[18]), 
        .data_in_19(_49_addbus_[19]), 
        .data_in_20(_49_addbus_[20]), 
        .data_in_21(_49_addbus_[21]), 
        .data_in_22(_49_addbus_[22]), 
        .data_in_23(_49_addbus_[23]), 
        .data_in_24(_49_addbus_[24]), 
        .data_in_25(_49_addbus_[25]), 
        .data_in_26(_49_addbus_[26]), 
        .data_in_27(_49_addbus_[27]), 
        .data_in_28(_49_addbus_[28]), 
        .data_in_29(_49_addbus_[29]), 
        .data_in_30(_49_addbus_[30]), 
        .data_in_31(_49_addbus_[31]), 
        .data_in_32(_49_addbus_[32]), 
        .data_in_33(_49_addbus_[33]), 
        .data_in_34(_49_addbus_[34]), 
        .data_in_35(_49_addbus_[35]), 
        .data_in_36(_49_addbus_[36]), 
        .data_in_37(_49_addbus_[37]), 
        .data_in_38(_49_addbus_[38]), 
        .data_in_39(_49_addbus_[39]), 
        .data_in_40(_49_addbus_[40]), 
        .data_in_41(_49_addbus_[41]), 
        .data_in_42(_49_addbus_[42]), 
        .data_in_43(_49_addbus_[43]), 
        .data_in_44(_49_addbus_[44]), 
        .data_in_45(_49_addbus_[45]), 
        .data_in_46(_49_addbus_[46]), 
        .data_in_47(_49_addbus_[47]), 
        .data_in_48(_49_addbus_[48]), 
        .data_in_49(_49_addbus_[49]), 
        .data_in_50(_49_addbus_[50]), 
        .data_in_51(_49_addbus_[51]), 
        .data_in_52(_49_addbus_[52]), 
        .data_in_53(_49_addbus_[53]), 
        .data_in_54(_49_addbus_[54]), 
        .data_in_55(_49_addbus_[55]), 
        .data_in_56(_49_addbus_[56]), 
        .data_in_57(_49_addbus_[57]), 
        .data_in_58(_49_addbus_[58]), 
        .data_in_59(_49_addbus_[59]), 
        .data_in_60(_49_addbus_[60]), 
        .data_in_61(_49_addbus_[61]), 
        .data_in_62(_49_addbus_[62]), 
        .data_in_63(_49_addbus_[63]) 
); 
wire [31:0] _50_addbus_[63:0];    
conv2d #("weight/max_polling/50_0.txt", 2, 0, 31, 31) conv2d_50_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_50_addbus_[0])
);
conv2d #("weight/max_polling/50_1.txt", 2, 0, 31, 31) conv2d_50_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_50_addbus_[1])
);
conv2d #("weight/max_polling/50_2.txt", 2, 0, 31, 31) conv2d_50_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_50_addbus_[2])
);
conv2d #("weight/max_polling/50_3.txt", 2, 0, 31, 31) conv2d_50_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_50_addbus_[3])
);
conv2d #("weight/max_polling/50_4.txt", 2, 0, 31, 31) conv2d_50_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_50_addbus_[4])
);
conv2d #("weight/max_polling/50_5.txt", 2, 0, 31, 31) conv2d_50_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_50_addbus_[5])
);
conv2d #("weight/max_polling/50_6.txt", 2, 0, 31, 31) conv2d_50_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_50_addbus_[6])
);
conv2d #("weight/max_polling/50_7.txt", 2, 0, 31, 31) conv2d_50_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_50_addbus_[7])
);
conv2d #("weight/max_polling/50_8.txt", 2, 0, 31, 31) conv2d_50_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_50_addbus_[8])
);
conv2d #("weight/max_polling/50_9.txt", 2, 0, 31, 31) conv2d_50_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_50_addbus_[9])
);
conv2d #("weight/max_polling/50_10.txt", 2, 0, 31, 31) conv2d_50_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_50_addbus_[10])
);
conv2d #("weight/max_polling/50_11.txt", 2, 0, 31, 31) conv2d_50_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_50_addbus_[11])
);
conv2d #("weight/max_polling/50_12.txt", 2, 0, 31, 31) conv2d_50_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_50_addbus_[12])
);
conv2d #("weight/max_polling/50_13.txt", 2, 0, 31, 31) conv2d_50_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_50_addbus_[13])
);
conv2d #("weight/max_polling/50_14.txt", 2, 0, 31, 31) conv2d_50_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_50_addbus_[14])
);
conv2d #("weight/max_polling/50_15.txt", 2, 0, 31, 31) conv2d_50_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_50_addbus_[15])
);
conv2d #("weight/max_polling/50_16.txt", 2, 0, 31, 31) conv2d_50_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_50_addbus_[16])
);
conv2d #("weight/max_polling/50_17.txt", 2, 0, 31, 31) conv2d_50_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_50_addbus_[17])
);
conv2d #("weight/max_polling/50_18.txt", 2, 0, 31, 31) conv2d_50_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_50_addbus_[18])
);
conv2d #("weight/max_polling/50_19.txt", 2, 0, 31, 31) conv2d_50_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_50_addbus_[19])
);
conv2d #("weight/max_polling/50_20.txt", 2, 0, 31, 31) conv2d_50_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_50_addbus_[20])
);
conv2d #("weight/max_polling/50_21.txt", 2, 0, 31, 31) conv2d_50_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_50_addbus_[21])
);
conv2d #("weight/max_polling/50_22.txt", 2, 0, 31, 31) conv2d_50_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_50_addbus_[22])
);
conv2d #("weight/max_polling/50_23.txt", 2, 0, 31, 31) conv2d_50_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_50_addbus_[23])
);
conv2d #("weight/max_polling/50_24.txt", 2, 0, 31, 31) conv2d_50_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_50_addbus_[24])
);
conv2d #("weight/max_polling/50_25.txt", 2, 0, 31, 31) conv2d_50_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_50_addbus_[25])
);
conv2d #("weight/max_polling/50_26.txt", 2, 0, 31, 31) conv2d_50_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_50_addbus_[26])
);
conv2d #("weight/max_polling/50_27.txt", 2, 0, 31, 31) conv2d_50_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_50_addbus_[27])
);
conv2d #("weight/max_polling/50_28.txt", 2, 0, 31, 31) conv2d_50_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_50_addbus_[28])
);
conv2d #("weight/max_polling/50_29.txt", 2, 0, 31, 31) conv2d_50_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_50_addbus_[29])
);
conv2d #("weight/max_polling/50_30.txt", 2, 0, 31, 31) conv2d_50_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_50_addbus_[30])
);
conv2d #("weight/max_polling/50_31.txt", 2, 0, 31, 31) conv2d_50_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_50_addbus_[31])
);
conv2d #("weight/max_polling/50_32.txt", 2, 0, 31, 31) conv2d_50_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_50_addbus_[32])
);
conv2d #("weight/max_polling/50_33.txt", 2, 0, 31, 31) conv2d_50_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_50_addbus_[33])
);
conv2d #("weight/max_polling/50_34.txt", 2, 0, 31, 31) conv2d_50_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_50_addbus_[34])
);
conv2d #("weight/max_polling/50_35.txt", 2, 0, 31, 31) conv2d_50_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_50_addbus_[35])
);
conv2d #("weight/max_polling/50_36.txt", 2, 0, 31, 31) conv2d_50_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_50_addbus_[36])
);
conv2d #("weight/max_polling/50_37.txt", 2, 0, 31, 31) conv2d_50_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_50_addbus_[37])
);
conv2d #("weight/max_polling/50_38.txt", 2, 0, 31, 31) conv2d_50_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_50_addbus_[38])
);
conv2d #("weight/max_polling/50_39.txt", 2, 0, 31, 31) conv2d_50_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_50_addbus_[39])
);
conv2d #("weight/max_polling/50_40.txt", 2, 0, 31, 31) conv2d_50_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_50_addbus_[40])
);
conv2d #("weight/max_polling/50_41.txt", 2, 0, 31, 31) conv2d_50_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_50_addbus_[41])
);
conv2d #("weight/max_polling/50_42.txt", 2, 0, 31, 31) conv2d_50_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_50_addbus_[42])
);
conv2d #("weight/max_polling/50_43.txt", 2, 0, 31, 31) conv2d_50_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_50_addbus_[43])
);
conv2d #("weight/max_polling/50_44.txt", 2, 0, 31, 31) conv2d_50_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_50_addbus_[44])
);
conv2d #("weight/max_polling/50_45.txt", 2, 0, 31, 31) conv2d_50_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_50_addbus_[45])
);
conv2d #("weight/max_polling/50_46.txt", 2, 0, 31, 31) conv2d_50_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_50_addbus_[46])
);
conv2d #("weight/max_polling/50_47.txt", 2, 0, 31, 31) conv2d_50_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_50_addbus_[47])
);
conv2d #("weight/max_polling/50_48.txt", 2, 0, 31, 31) conv2d_50_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_50_addbus_[48])
);
conv2d #("weight/max_polling/50_49.txt", 2, 0, 31, 31) conv2d_50_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_50_addbus_[49])
);
conv2d #("weight/max_polling/50_50.txt", 2, 0, 31, 31) conv2d_50_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_50_addbus_[50])
);
conv2d #("weight/max_polling/50_51.txt", 2, 0, 31, 31) conv2d_50_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_50_addbus_[51])
);
conv2d #("weight/max_polling/50_52.txt", 2, 0, 31, 31) conv2d_50_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_50_addbus_[52])
);
conv2d #("weight/max_polling/50_53.txt", 2, 0, 31, 31) conv2d_50_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_50_addbus_[53])
);
conv2d #("weight/max_polling/50_54.txt", 2, 0, 31, 31) conv2d_50_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_50_addbus_[54])
);
conv2d #("weight/max_polling/50_55.txt", 2, 0, 31, 31) conv2d_50_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_50_addbus_[55])
);
conv2d #("weight/max_polling/50_56.txt", 2, 0, 31, 31) conv2d_50_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_50_addbus_[56])
);
conv2d #("weight/max_polling/50_57.txt", 2, 0, 31, 31) conv2d_50_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_50_addbus_[57])
);
conv2d #("weight/max_polling/50_58.txt", 2, 0, 31, 31) conv2d_50_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_50_addbus_[58])
);
conv2d #("weight/max_polling/50_59.txt", 2, 0, 31, 31) conv2d_50_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_50_addbus_[59])
);
conv2d #("weight/max_polling/50_60.txt", 2, 0, 31, 31) conv2d_50_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_50_addbus_[60])
);
conv2d #("weight/max_polling/50_61.txt", 2, 0, 31, 31) conv2d_50_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_50_addbus_[61])
);
conv2d #("weight/max_polling/50_62.txt", 2, 0, 31, 31) conv2d_50_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_50_addbus_[62])
);
conv2d #("weight/max_polling/50_63.txt", 2, 0, 31, 31) conv2d_50_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_50_addbus_[63])
);
sum_64 #(15) sum_50( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[50]), 
        .data_in_0(_50_addbus_[0]), 
        .data_in_1(_50_addbus_[1]), 
        .data_in_2(_50_addbus_[2]), 
        .data_in_3(_50_addbus_[3]), 
        .data_in_4(_50_addbus_[4]), 
        .data_in_5(_50_addbus_[5]), 
        .data_in_6(_50_addbus_[6]), 
        .data_in_7(_50_addbus_[7]), 
        .data_in_8(_50_addbus_[8]), 
        .data_in_9(_50_addbus_[9]), 
        .data_in_10(_50_addbus_[10]), 
        .data_in_11(_50_addbus_[11]), 
        .data_in_12(_50_addbus_[12]), 
        .data_in_13(_50_addbus_[13]), 
        .data_in_14(_50_addbus_[14]), 
        .data_in_15(_50_addbus_[15]), 
        .data_in_16(_50_addbus_[16]), 
        .data_in_17(_50_addbus_[17]), 
        .data_in_18(_50_addbus_[18]), 
        .data_in_19(_50_addbus_[19]), 
        .data_in_20(_50_addbus_[20]), 
        .data_in_21(_50_addbus_[21]), 
        .data_in_22(_50_addbus_[22]), 
        .data_in_23(_50_addbus_[23]), 
        .data_in_24(_50_addbus_[24]), 
        .data_in_25(_50_addbus_[25]), 
        .data_in_26(_50_addbus_[26]), 
        .data_in_27(_50_addbus_[27]), 
        .data_in_28(_50_addbus_[28]), 
        .data_in_29(_50_addbus_[29]), 
        .data_in_30(_50_addbus_[30]), 
        .data_in_31(_50_addbus_[31]), 
        .data_in_32(_50_addbus_[32]), 
        .data_in_33(_50_addbus_[33]), 
        .data_in_34(_50_addbus_[34]), 
        .data_in_35(_50_addbus_[35]), 
        .data_in_36(_50_addbus_[36]), 
        .data_in_37(_50_addbus_[37]), 
        .data_in_38(_50_addbus_[38]), 
        .data_in_39(_50_addbus_[39]), 
        .data_in_40(_50_addbus_[40]), 
        .data_in_41(_50_addbus_[41]), 
        .data_in_42(_50_addbus_[42]), 
        .data_in_43(_50_addbus_[43]), 
        .data_in_44(_50_addbus_[44]), 
        .data_in_45(_50_addbus_[45]), 
        .data_in_46(_50_addbus_[46]), 
        .data_in_47(_50_addbus_[47]), 
        .data_in_48(_50_addbus_[48]), 
        .data_in_49(_50_addbus_[49]), 
        .data_in_50(_50_addbus_[50]), 
        .data_in_51(_50_addbus_[51]), 
        .data_in_52(_50_addbus_[52]), 
        .data_in_53(_50_addbus_[53]), 
        .data_in_54(_50_addbus_[54]), 
        .data_in_55(_50_addbus_[55]), 
        .data_in_56(_50_addbus_[56]), 
        .data_in_57(_50_addbus_[57]), 
        .data_in_58(_50_addbus_[58]), 
        .data_in_59(_50_addbus_[59]), 
        .data_in_60(_50_addbus_[60]), 
        .data_in_61(_50_addbus_[61]), 
        .data_in_62(_50_addbus_[62]), 
        .data_in_63(_50_addbus_[63]) 
); 
wire [31:0] _51_addbus_[63:0];    
conv2d #("weight/max_polling/51_0.txt", 2, 0, 31, 31) conv2d_51_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_51_addbus_[0])
);
conv2d #("weight/max_polling/51_1.txt", 2, 0, 31, 31) conv2d_51_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_51_addbus_[1])
);
conv2d #("weight/max_polling/51_2.txt", 2, 0, 31, 31) conv2d_51_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_51_addbus_[2])
);
conv2d #("weight/max_polling/51_3.txt", 2, 0, 31, 31) conv2d_51_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_51_addbus_[3])
);
conv2d #("weight/max_polling/51_4.txt", 2, 0, 31, 31) conv2d_51_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_51_addbus_[4])
);
conv2d #("weight/max_polling/51_5.txt", 2, 0, 31, 31) conv2d_51_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_51_addbus_[5])
);
conv2d #("weight/max_polling/51_6.txt", 2, 0, 31, 31) conv2d_51_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_51_addbus_[6])
);
conv2d #("weight/max_polling/51_7.txt", 2, 0, 31, 31) conv2d_51_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_51_addbus_[7])
);
conv2d #("weight/max_polling/51_8.txt", 2, 0, 31, 31) conv2d_51_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_51_addbus_[8])
);
conv2d #("weight/max_polling/51_9.txt", 2, 0, 31, 31) conv2d_51_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_51_addbus_[9])
);
conv2d #("weight/max_polling/51_10.txt", 2, 0, 31, 31) conv2d_51_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_51_addbus_[10])
);
conv2d #("weight/max_polling/51_11.txt", 2, 0, 31, 31) conv2d_51_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_51_addbus_[11])
);
conv2d #("weight/max_polling/51_12.txt", 2, 0, 31, 31) conv2d_51_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_51_addbus_[12])
);
conv2d #("weight/max_polling/51_13.txt", 2, 0, 31, 31) conv2d_51_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_51_addbus_[13])
);
conv2d #("weight/max_polling/51_14.txt", 2, 0, 31, 31) conv2d_51_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_51_addbus_[14])
);
conv2d #("weight/max_polling/51_15.txt", 2, 0, 31, 31) conv2d_51_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_51_addbus_[15])
);
conv2d #("weight/max_polling/51_16.txt", 2, 0, 31, 31) conv2d_51_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_51_addbus_[16])
);
conv2d #("weight/max_polling/51_17.txt", 2, 0, 31, 31) conv2d_51_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_51_addbus_[17])
);
conv2d #("weight/max_polling/51_18.txt", 2, 0, 31, 31) conv2d_51_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_51_addbus_[18])
);
conv2d #("weight/max_polling/51_19.txt", 2, 0, 31, 31) conv2d_51_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_51_addbus_[19])
);
conv2d #("weight/max_polling/51_20.txt", 2, 0, 31, 31) conv2d_51_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_51_addbus_[20])
);
conv2d #("weight/max_polling/51_21.txt", 2, 0, 31, 31) conv2d_51_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_51_addbus_[21])
);
conv2d #("weight/max_polling/51_22.txt", 2, 0, 31, 31) conv2d_51_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_51_addbus_[22])
);
conv2d #("weight/max_polling/51_23.txt", 2, 0, 31, 31) conv2d_51_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_51_addbus_[23])
);
conv2d #("weight/max_polling/51_24.txt", 2, 0, 31, 31) conv2d_51_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_51_addbus_[24])
);
conv2d #("weight/max_polling/51_25.txt", 2, 0, 31, 31) conv2d_51_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_51_addbus_[25])
);
conv2d #("weight/max_polling/51_26.txt", 2, 0, 31, 31) conv2d_51_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_51_addbus_[26])
);
conv2d #("weight/max_polling/51_27.txt", 2, 0, 31, 31) conv2d_51_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_51_addbus_[27])
);
conv2d #("weight/max_polling/51_28.txt", 2, 0, 31, 31) conv2d_51_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_51_addbus_[28])
);
conv2d #("weight/max_polling/51_29.txt", 2, 0, 31, 31) conv2d_51_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_51_addbus_[29])
);
conv2d #("weight/max_polling/51_30.txt", 2, 0, 31, 31) conv2d_51_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_51_addbus_[30])
);
conv2d #("weight/max_polling/51_31.txt", 2, 0, 31, 31) conv2d_51_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_51_addbus_[31])
);
conv2d #("weight/max_polling/51_32.txt", 2, 0, 31, 31) conv2d_51_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_51_addbus_[32])
);
conv2d #("weight/max_polling/51_33.txt", 2, 0, 31, 31) conv2d_51_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_51_addbus_[33])
);
conv2d #("weight/max_polling/51_34.txt", 2, 0, 31, 31) conv2d_51_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_51_addbus_[34])
);
conv2d #("weight/max_polling/51_35.txt", 2, 0, 31, 31) conv2d_51_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_51_addbus_[35])
);
conv2d #("weight/max_polling/51_36.txt", 2, 0, 31, 31) conv2d_51_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_51_addbus_[36])
);
conv2d #("weight/max_polling/51_37.txt", 2, 0, 31, 31) conv2d_51_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_51_addbus_[37])
);
conv2d #("weight/max_polling/51_38.txt", 2, 0, 31, 31) conv2d_51_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_51_addbus_[38])
);
conv2d #("weight/max_polling/51_39.txt", 2, 0, 31, 31) conv2d_51_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_51_addbus_[39])
);
conv2d #("weight/max_polling/51_40.txt", 2, 0, 31, 31) conv2d_51_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_51_addbus_[40])
);
conv2d #("weight/max_polling/51_41.txt", 2, 0, 31, 31) conv2d_51_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_51_addbus_[41])
);
conv2d #("weight/max_polling/51_42.txt", 2, 0, 31, 31) conv2d_51_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_51_addbus_[42])
);
conv2d #("weight/max_polling/51_43.txt", 2, 0, 31, 31) conv2d_51_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_51_addbus_[43])
);
conv2d #("weight/max_polling/51_44.txt", 2, 0, 31, 31) conv2d_51_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_51_addbus_[44])
);
conv2d #("weight/max_polling/51_45.txt", 2, 0, 31, 31) conv2d_51_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_51_addbus_[45])
);
conv2d #("weight/max_polling/51_46.txt", 2, 0, 31, 31) conv2d_51_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_51_addbus_[46])
);
conv2d #("weight/max_polling/51_47.txt", 2, 0, 31, 31) conv2d_51_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_51_addbus_[47])
);
conv2d #("weight/max_polling/51_48.txt", 2, 0, 31, 31) conv2d_51_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_51_addbus_[48])
);
conv2d #("weight/max_polling/51_49.txt", 2, 0, 31, 31) conv2d_51_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_51_addbus_[49])
);
conv2d #("weight/max_polling/51_50.txt", 2, 0, 31, 31) conv2d_51_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_51_addbus_[50])
);
conv2d #("weight/max_polling/51_51.txt", 2, 0, 31, 31) conv2d_51_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_51_addbus_[51])
);
conv2d #("weight/max_polling/51_52.txt", 2, 0, 31, 31) conv2d_51_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_51_addbus_[52])
);
conv2d #("weight/max_polling/51_53.txt", 2, 0, 31, 31) conv2d_51_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_51_addbus_[53])
);
conv2d #("weight/max_polling/51_54.txt", 2, 0, 31, 31) conv2d_51_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_51_addbus_[54])
);
conv2d #("weight/max_polling/51_55.txt", 2, 0, 31, 31) conv2d_51_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_51_addbus_[55])
);
conv2d #("weight/max_polling/51_56.txt", 2, 0, 31, 31) conv2d_51_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_51_addbus_[56])
);
conv2d #("weight/max_polling/51_57.txt", 2, 0, 31, 31) conv2d_51_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_51_addbus_[57])
);
conv2d #("weight/max_polling/51_58.txt", 2, 0, 31, 31) conv2d_51_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_51_addbus_[58])
);
conv2d #("weight/max_polling/51_59.txt", 2, 0, 31, 31) conv2d_51_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_51_addbus_[59])
);
conv2d #("weight/max_polling/51_60.txt", 2, 0, 31, 31) conv2d_51_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_51_addbus_[60])
);
conv2d #("weight/max_polling/51_61.txt", 2, 0, 31, 31) conv2d_51_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_51_addbus_[61])
);
conv2d #("weight/max_polling/51_62.txt", 2, 0, 31, 31) conv2d_51_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_51_addbus_[62])
);
conv2d #("weight/max_polling/51_63.txt", 2, 0, 31, 31) conv2d_51_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_51_addbus_[63])
);
sum_64 #(15) sum_51( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[51]), 
        .data_in_0(_51_addbus_[0]), 
        .data_in_1(_51_addbus_[1]), 
        .data_in_2(_51_addbus_[2]), 
        .data_in_3(_51_addbus_[3]), 
        .data_in_4(_51_addbus_[4]), 
        .data_in_5(_51_addbus_[5]), 
        .data_in_6(_51_addbus_[6]), 
        .data_in_7(_51_addbus_[7]), 
        .data_in_8(_51_addbus_[8]), 
        .data_in_9(_51_addbus_[9]), 
        .data_in_10(_51_addbus_[10]), 
        .data_in_11(_51_addbus_[11]), 
        .data_in_12(_51_addbus_[12]), 
        .data_in_13(_51_addbus_[13]), 
        .data_in_14(_51_addbus_[14]), 
        .data_in_15(_51_addbus_[15]), 
        .data_in_16(_51_addbus_[16]), 
        .data_in_17(_51_addbus_[17]), 
        .data_in_18(_51_addbus_[18]), 
        .data_in_19(_51_addbus_[19]), 
        .data_in_20(_51_addbus_[20]), 
        .data_in_21(_51_addbus_[21]), 
        .data_in_22(_51_addbus_[22]), 
        .data_in_23(_51_addbus_[23]), 
        .data_in_24(_51_addbus_[24]), 
        .data_in_25(_51_addbus_[25]), 
        .data_in_26(_51_addbus_[26]), 
        .data_in_27(_51_addbus_[27]), 
        .data_in_28(_51_addbus_[28]), 
        .data_in_29(_51_addbus_[29]), 
        .data_in_30(_51_addbus_[30]), 
        .data_in_31(_51_addbus_[31]), 
        .data_in_32(_51_addbus_[32]), 
        .data_in_33(_51_addbus_[33]), 
        .data_in_34(_51_addbus_[34]), 
        .data_in_35(_51_addbus_[35]), 
        .data_in_36(_51_addbus_[36]), 
        .data_in_37(_51_addbus_[37]), 
        .data_in_38(_51_addbus_[38]), 
        .data_in_39(_51_addbus_[39]), 
        .data_in_40(_51_addbus_[40]), 
        .data_in_41(_51_addbus_[41]), 
        .data_in_42(_51_addbus_[42]), 
        .data_in_43(_51_addbus_[43]), 
        .data_in_44(_51_addbus_[44]), 
        .data_in_45(_51_addbus_[45]), 
        .data_in_46(_51_addbus_[46]), 
        .data_in_47(_51_addbus_[47]), 
        .data_in_48(_51_addbus_[48]), 
        .data_in_49(_51_addbus_[49]), 
        .data_in_50(_51_addbus_[50]), 
        .data_in_51(_51_addbus_[51]), 
        .data_in_52(_51_addbus_[52]), 
        .data_in_53(_51_addbus_[53]), 
        .data_in_54(_51_addbus_[54]), 
        .data_in_55(_51_addbus_[55]), 
        .data_in_56(_51_addbus_[56]), 
        .data_in_57(_51_addbus_[57]), 
        .data_in_58(_51_addbus_[58]), 
        .data_in_59(_51_addbus_[59]), 
        .data_in_60(_51_addbus_[60]), 
        .data_in_61(_51_addbus_[61]), 
        .data_in_62(_51_addbus_[62]), 
        .data_in_63(_51_addbus_[63]) 
); 
wire [31:0] _52_addbus_[63:0];    
conv2d #("weight/max_polling/52_0.txt", 2, 0, 31, 31) conv2d_52_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_52_addbus_[0])
);
conv2d #("weight/max_polling/52_1.txt", 2, 0, 31, 31) conv2d_52_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_52_addbus_[1])
);
conv2d #("weight/max_polling/52_2.txt", 2, 0, 31, 31) conv2d_52_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_52_addbus_[2])
);
conv2d #("weight/max_polling/52_3.txt", 2, 0, 31, 31) conv2d_52_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_52_addbus_[3])
);
conv2d #("weight/max_polling/52_4.txt", 2, 0, 31, 31) conv2d_52_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_52_addbus_[4])
);
conv2d #("weight/max_polling/52_5.txt", 2, 0, 31, 31) conv2d_52_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_52_addbus_[5])
);
conv2d #("weight/max_polling/52_6.txt", 2, 0, 31, 31) conv2d_52_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_52_addbus_[6])
);
conv2d #("weight/max_polling/52_7.txt", 2, 0, 31, 31) conv2d_52_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_52_addbus_[7])
);
conv2d #("weight/max_polling/52_8.txt", 2, 0, 31, 31) conv2d_52_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_52_addbus_[8])
);
conv2d #("weight/max_polling/52_9.txt", 2, 0, 31, 31) conv2d_52_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_52_addbus_[9])
);
conv2d #("weight/max_polling/52_10.txt", 2, 0, 31, 31) conv2d_52_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_52_addbus_[10])
);
conv2d #("weight/max_polling/52_11.txt", 2, 0, 31, 31) conv2d_52_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_52_addbus_[11])
);
conv2d #("weight/max_polling/52_12.txt", 2, 0, 31, 31) conv2d_52_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_52_addbus_[12])
);
conv2d #("weight/max_polling/52_13.txt", 2, 0, 31, 31) conv2d_52_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_52_addbus_[13])
);
conv2d #("weight/max_polling/52_14.txt", 2, 0, 31, 31) conv2d_52_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_52_addbus_[14])
);
conv2d #("weight/max_polling/52_15.txt", 2, 0, 31, 31) conv2d_52_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_52_addbus_[15])
);
conv2d #("weight/max_polling/52_16.txt", 2, 0, 31, 31) conv2d_52_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_52_addbus_[16])
);
conv2d #("weight/max_polling/52_17.txt", 2, 0, 31, 31) conv2d_52_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_52_addbus_[17])
);
conv2d #("weight/max_polling/52_18.txt", 2, 0, 31, 31) conv2d_52_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_52_addbus_[18])
);
conv2d #("weight/max_polling/52_19.txt", 2, 0, 31, 31) conv2d_52_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_52_addbus_[19])
);
conv2d #("weight/max_polling/52_20.txt", 2, 0, 31, 31) conv2d_52_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_52_addbus_[20])
);
conv2d #("weight/max_polling/52_21.txt", 2, 0, 31, 31) conv2d_52_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_52_addbus_[21])
);
conv2d #("weight/max_polling/52_22.txt", 2, 0, 31, 31) conv2d_52_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_52_addbus_[22])
);
conv2d #("weight/max_polling/52_23.txt", 2, 0, 31, 31) conv2d_52_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_52_addbus_[23])
);
conv2d #("weight/max_polling/52_24.txt", 2, 0, 31, 31) conv2d_52_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_52_addbus_[24])
);
conv2d #("weight/max_polling/52_25.txt", 2, 0, 31, 31) conv2d_52_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_52_addbus_[25])
);
conv2d #("weight/max_polling/52_26.txt", 2, 0, 31, 31) conv2d_52_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_52_addbus_[26])
);
conv2d #("weight/max_polling/52_27.txt", 2, 0, 31, 31) conv2d_52_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_52_addbus_[27])
);
conv2d #("weight/max_polling/52_28.txt", 2, 0, 31, 31) conv2d_52_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_52_addbus_[28])
);
conv2d #("weight/max_polling/52_29.txt", 2, 0, 31, 31) conv2d_52_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_52_addbus_[29])
);
conv2d #("weight/max_polling/52_30.txt", 2, 0, 31, 31) conv2d_52_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_52_addbus_[30])
);
conv2d #("weight/max_polling/52_31.txt", 2, 0, 31, 31) conv2d_52_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_52_addbus_[31])
);
conv2d #("weight/max_polling/52_32.txt", 2, 0, 31, 31) conv2d_52_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_52_addbus_[32])
);
conv2d #("weight/max_polling/52_33.txt", 2, 0, 31, 31) conv2d_52_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_52_addbus_[33])
);
conv2d #("weight/max_polling/52_34.txt", 2, 0, 31, 31) conv2d_52_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_52_addbus_[34])
);
conv2d #("weight/max_polling/52_35.txt", 2, 0, 31, 31) conv2d_52_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_52_addbus_[35])
);
conv2d #("weight/max_polling/52_36.txt", 2, 0, 31, 31) conv2d_52_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_52_addbus_[36])
);
conv2d #("weight/max_polling/52_37.txt", 2, 0, 31, 31) conv2d_52_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_52_addbus_[37])
);
conv2d #("weight/max_polling/52_38.txt", 2, 0, 31, 31) conv2d_52_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_52_addbus_[38])
);
conv2d #("weight/max_polling/52_39.txt", 2, 0, 31, 31) conv2d_52_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_52_addbus_[39])
);
conv2d #("weight/max_polling/52_40.txt", 2, 0, 31, 31) conv2d_52_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_52_addbus_[40])
);
conv2d #("weight/max_polling/52_41.txt", 2, 0, 31, 31) conv2d_52_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_52_addbus_[41])
);
conv2d #("weight/max_polling/52_42.txt", 2, 0, 31, 31) conv2d_52_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_52_addbus_[42])
);
conv2d #("weight/max_polling/52_43.txt", 2, 0, 31, 31) conv2d_52_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_52_addbus_[43])
);
conv2d #("weight/max_polling/52_44.txt", 2, 0, 31, 31) conv2d_52_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_52_addbus_[44])
);
conv2d #("weight/max_polling/52_45.txt", 2, 0, 31, 31) conv2d_52_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_52_addbus_[45])
);
conv2d #("weight/max_polling/52_46.txt", 2, 0, 31, 31) conv2d_52_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_52_addbus_[46])
);
conv2d #("weight/max_polling/52_47.txt", 2, 0, 31, 31) conv2d_52_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_52_addbus_[47])
);
conv2d #("weight/max_polling/52_48.txt", 2, 0, 31, 31) conv2d_52_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_52_addbus_[48])
);
conv2d #("weight/max_polling/52_49.txt", 2, 0, 31, 31) conv2d_52_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_52_addbus_[49])
);
conv2d #("weight/max_polling/52_50.txt", 2, 0, 31, 31) conv2d_52_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_52_addbus_[50])
);
conv2d #("weight/max_polling/52_51.txt", 2, 0, 31, 31) conv2d_52_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_52_addbus_[51])
);
conv2d #("weight/max_polling/52_52.txt", 2, 0, 31, 31) conv2d_52_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_52_addbus_[52])
);
conv2d #("weight/max_polling/52_53.txt", 2, 0, 31, 31) conv2d_52_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_52_addbus_[53])
);
conv2d #("weight/max_polling/52_54.txt", 2, 0, 31, 31) conv2d_52_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_52_addbus_[54])
);
conv2d #("weight/max_polling/52_55.txt", 2, 0, 31, 31) conv2d_52_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_52_addbus_[55])
);
conv2d #("weight/max_polling/52_56.txt", 2, 0, 31, 31) conv2d_52_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_52_addbus_[56])
);
conv2d #("weight/max_polling/52_57.txt", 2, 0, 31, 31) conv2d_52_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_52_addbus_[57])
);
conv2d #("weight/max_polling/52_58.txt", 2, 0, 31, 31) conv2d_52_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_52_addbus_[58])
);
conv2d #("weight/max_polling/52_59.txt", 2, 0, 31, 31) conv2d_52_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_52_addbus_[59])
);
conv2d #("weight/max_polling/52_60.txt", 2, 0, 31, 31) conv2d_52_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_52_addbus_[60])
);
conv2d #("weight/max_polling/52_61.txt", 2, 0, 31, 31) conv2d_52_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_52_addbus_[61])
);
conv2d #("weight/max_polling/52_62.txt", 2, 0, 31, 31) conv2d_52_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_52_addbus_[62])
);
conv2d #("weight/max_polling/52_63.txt", 2, 0, 31, 31) conv2d_52_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_52_addbus_[63])
);
sum_64 #(15) sum_52( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[52]), 
        .data_in_0(_52_addbus_[0]), 
        .data_in_1(_52_addbus_[1]), 
        .data_in_2(_52_addbus_[2]), 
        .data_in_3(_52_addbus_[3]), 
        .data_in_4(_52_addbus_[4]), 
        .data_in_5(_52_addbus_[5]), 
        .data_in_6(_52_addbus_[6]), 
        .data_in_7(_52_addbus_[7]), 
        .data_in_8(_52_addbus_[8]), 
        .data_in_9(_52_addbus_[9]), 
        .data_in_10(_52_addbus_[10]), 
        .data_in_11(_52_addbus_[11]), 
        .data_in_12(_52_addbus_[12]), 
        .data_in_13(_52_addbus_[13]), 
        .data_in_14(_52_addbus_[14]), 
        .data_in_15(_52_addbus_[15]), 
        .data_in_16(_52_addbus_[16]), 
        .data_in_17(_52_addbus_[17]), 
        .data_in_18(_52_addbus_[18]), 
        .data_in_19(_52_addbus_[19]), 
        .data_in_20(_52_addbus_[20]), 
        .data_in_21(_52_addbus_[21]), 
        .data_in_22(_52_addbus_[22]), 
        .data_in_23(_52_addbus_[23]), 
        .data_in_24(_52_addbus_[24]), 
        .data_in_25(_52_addbus_[25]), 
        .data_in_26(_52_addbus_[26]), 
        .data_in_27(_52_addbus_[27]), 
        .data_in_28(_52_addbus_[28]), 
        .data_in_29(_52_addbus_[29]), 
        .data_in_30(_52_addbus_[30]), 
        .data_in_31(_52_addbus_[31]), 
        .data_in_32(_52_addbus_[32]), 
        .data_in_33(_52_addbus_[33]), 
        .data_in_34(_52_addbus_[34]), 
        .data_in_35(_52_addbus_[35]), 
        .data_in_36(_52_addbus_[36]), 
        .data_in_37(_52_addbus_[37]), 
        .data_in_38(_52_addbus_[38]), 
        .data_in_39(_52_addbus_[39]), 
        .data_in_40(_52_addbus_[40]), 
        .data_in_41(_52_addbus_[41]), 
        .data_in_42(_52_addbus_[42]), 
        .data_in_43(_52_addbus_[43]), 
        .data_in_44(_52_addbus_[44]), 
        .data_in_45(_52_addbus_[45]), 
        .data_in_46(_52_addbus_[46]), 
        .data_in_47(_52_addbus_[47]), 
        .data_in_48(_52_addbus_[48]), 
        .data_in_49(_52_addbus_[49]), 
        .data_in_50(_52_addbus_[50]), 
        .data_in_51(_52_addbus_[51]), 
        .data_in_52(_52_addbus_[52]), 
        .data_in_53(_52_addbus_[53]), 
        .data_in_54(_52_addbus_[54]), 
        .data_in_55(_52_addbus_[55]), 
        .data_in_56(_52_addbus_[56]), 
        .data_in_57(_52_addbus_[57]), 
        .data_in_58(_52_addbus_[58]), 
        .data_in_59(_52_addbus_[59]), 
        .data_in_60(_52_addbus_[60]), 
        .data_in_61(_52_addbus_[61]), 
        .data_in_62(_52_addbus_[62]), 
        .data_in_63(_52_addbus_[63]) 
); 
wire [31:0] _53_addbus_[63:0];    
conv2d #("weight/max_polling/53_0.txt", 2, 0, 31, 31) conv2d_53_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_53_addbus_[0])
);
conv2d #("weight/max_polling/53_1.txt", 2, 0, 31, 31) conv2d_53_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_53_addbus_[1])
);
conv2d #("weight/max_polling/53_2.txt", 2, 0, 31, 31) conv2d_53_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_53_addbus_[2])
);
conv2d #("weight/max_polling/53_3.txt", 2, 0, 31, 31) conv2d_53_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_53_addbus_[3])
);
conv2d #("weight/max_polling/53_4.txt", 2, 0, 31, 31) conv2d_53_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_53_addbus_[4])
);
conv2d #("weight/max_polling/53_5.txt", 2, 0, 31, 31) conv2d_53_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_53_addbus_[5])
);
conv2d #("weight/max_polling/53_6.txt", 2, 0, 31, 31) conv2d_53_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_53_addbus_[6])
);
conv2d #("weight/max_polling/53_7.txt", 2, 0, 31, 31) conv2d_53_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_53_addbus_[7])
);
conv2d #("weight/max_polling/53_8.txt", 2, 0, 31, 31) conv2d_53_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_53_addbus_[8])
);
conv2d #("weight/max_polling/53_9.txt", 2, 0, 31, 31) conv2d_53_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_53_addbus_[9])
);
conv2d #("weight/max_polling/53_10.txt", 2, 0, 31, 31) conv2d_53_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_53_addbus_[10])
);
conv2d #("weight/max_polling/53_11.txt", 2, 0, 31, 31) conv2d_53_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_53_addbus_[11])
);
conv2d #("weight/max_polling/53_12.txt", 2, 0, 31, 31) conv2d_53_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_53_addbus_[12])
);
conv2d #("weight/max_polling/53_13.txt", 2, 0, 31, 31) conv2d_53_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_53_addbus_[13])
);
conv2d #("weight/max_polling/53_14.txt", 2, 0, 31, 31) conv2d_53_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_53_addbus_[14])
);
conv2d #("weight/max_polling/53_15.txt", 2, 0, 31, 31) conv2d_53_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_53_addbus_[15])
);
conv2d #("weight/max_polling/53_16.txt", 2, 0, 31, 31) conv2d_53_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_53_addbus_[16])
);
conv2d #("weight/max_polling/53_17.txt", 2, 0, 31, 31) conv2d_53_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_53_addbus_[17])
);
conv2d #("weight/max_polling/53_18.txt", 2, 0, 31, 31) conv2d_53_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_53_addbus_[18])
);
conv2d #("weight/max_polling/53_19.txt", 2, 0, 31, 31) conv2d_53_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_53_addbus_[19])
);
conv2d #("weight/max_polling/53_20.txt", 2, 0, 31, 31) conv2d_53_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_53_addbus_[20])
);
conv2d #("weight/max_polling/53_21.txt", 2, 0, 31, 31) conv2d_53_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_53_addbus_[21])
);
conv2d #("weight/max_polling/53_22.txt", 2, 0, 31, 31) conv2d_53_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_53_addbus_[22])
);
conv2d #("weight/max_polling/53_23.txt", 2, 0, 31, 31) conv2d_53_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_53_addbus_[23])
);
conv2d #("weight/max_polling/53_24.txt", 2, 0, 31, 31) conv2d_53_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_53_addbus_[24])
);
conv2d #("weight/max_polling/53_25.txt", 2, 0, 31, 31) conv2d_53_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_53_addbus_[25])
);
conv2d #("weight/max_polling/53_26.txt", 2, 0, 31, 31) conv2d_53_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_53_addbus_[26])
);
conv2d #("weight/max_polling/53_27.txt", 2, 0, 31, 31) conv2d_53_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_53_addbus_[27])
);
conv2d #("weight/max_polling/53_28.txt", 2, 0, 31, 31) conv2d_53_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_53_addbus_[28])
);
conv2d #("weight/max_polling/53_29.txt", 2, 0, 31, 31) conv2d_53_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_53_addbus_[29])
);
conv2d #("weight/max_polling/53_30.txt", 2, 0, 31, 31) conv2d_53_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_53_addbus_[30])
);
conv2d #("weight/max_polling/53_31.txt", 2, 0, 31, 31) conv2d_53_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_53_addbus_[31])
);
conv2d #("weight/max_polling/53_32.txt", 2, 0, 31, 31) conv2d_53_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_53_addbus_[32])
);
conv2d #("weight/max_polling/53_33.txt", 2, 0, 31, 31) conv2d_53_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_53_addbus_[33])
);
conv2d #("weight/max_polling/53_34.txt", 2, 0, 31, 31) conv2d_53_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_53_addbus_[34])
);
conv2d #("weight/max_polling/53_35.txt", 2, 0, 31, 31) conv2d_53_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_53_addbus_[35])
);
conv2d #("weight/max_polling/53_36.txt", 2, 0, 31, 31) conv2d_53_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_53_addbus_[36])
);
conv2d #("weight/max_polling/53_37.txt", 2, 0, 31, 31) conv2d_53_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_53_addbus_[37])
);
conv2d #("weight/max_polling/53_38.txt", 2, 0, 31, 31) conv2d_53_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_53_addbus_[38])
);
conv2d #("weight/max_polling/53_39.txt", 2, 0, 31, 31) conv2d_53_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_53_addbus_[39])
);
conv2d #("weight/max_polling/53_40.txt", 2, 0, 31, 31) conv2d_53_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_53_addbus_[40])
);
conv2d #("weight/max_polling/53_41.txt", 2, 0, 31, 31) conv2d_53_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_53_addbus_[41])
);
conv2d #("weight/max_polling/53_42.txt", 2, 0, 31, 31) conv2d_53_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_53_addbus_[42])
);
conv2d #("weight/max_polling/53_43.txt", 2, 0, 31, 31) conv2d_53_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_53_addbus_[43])
);
conv2d #("weight/max_polling/53_44.txt", 2, 0, 31, 31) conv2d_53_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_53_addbus_[44])
);
conv2d #("weight/max_polling/53_45.txt", 2, 0, 31, 31) conv2d_53_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_53_addbus_[45])
);
conv2d #("weight/max_polling/53_46.txt", 2, 0, 31, 31) conv2d_53_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_53_addbus_[46])
);
conv2d #("weight/max_polling/53_47.txt", 2, 0, 31, 31) conv2d_53_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_53_addbus_[47])
);
conv2d #("weight/max_polling/53_48.txt", 2, 0, 31, 31) conv2d_53_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_53_addbus_[48])
);
conv2d #("weight/max_polling/53_49.txt", 2, 0, 31, 31) conv2d_53_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_53_addbus_[49])
);
conv2d #("weight/max_polling/53_50.txt", 2, 0, 31, 31) conv2d_53_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_53_addbus_[50])
);
conv2d #("weight/max_polling/53_51.txt", 2, 0, 31, 31) conv2d_53_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_53_addbus_[51])
);
conv2d #("weight/max_polling/53_52.txt", 2, 0, 31, 31) conv2d_53_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_53_addbus_[52])
);
conv2d #("weight/max_polling/53_53.txt", 2, 0, 31, 31) conv2d_53_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_53_addbus_[53])
);
conv2d #("weight/max_polling/53_54.txt", 2, 0, 31, 31) conv2d_53_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_53_addbus_[54])
);
conv2d #("weight/max_polling/53_55.txt", 2, 0, 31, 31) conv2d_53_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_53_addbus_[55])
);
conv2d #("weight/max_polling/53_56.txt", 2, 0, 31, 31) conv2d_53_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_53_addbus_[56])
);
conv2d #("weight/max_polling/53_57.txt", 2, 0, 31, 31) conv2d_53_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_53_addbus_[57])
);
conv2d #("weight/max_polling/53_58.txt", 2, 0, 31, 31) conv2d_53_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_53_addbus_[58])
);
conv2d #("weight/max_polling/53_59.txt", 2, 0, 31, 31) conv2d_53_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_53_addbus_[59])
);
conv2d #("weight/max_polling/53_60.txt", 2, 0, 31, 31) conv2d_53_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_53_addbus_[60])
);
conv2d #("weight/max_polling/53_61.txt", 2, 0, 31, 31) conv2d_53_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_53_addbus_[61])
);
conv2d #("weight/max_polling/53_62.txt", 2, 0, 31, 31) conv2d_53_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_53_addbus_[62])
);
conv2d #("weight/max_polling/53_63.txt", 2, 0, 31, 31) conv2d_53_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_53_addbus_[63])
);
sum_64 #(15) sum_53( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[53]), 
        .data_in_0(_53_addbus_[0]), 
        .data_in_1(_53_addbus_[1]), 
        .data_in_2(_53_addbus_[2]), 
        .data_in_3(_53_addbus_[3]), 
        .data_in_4(_53_addbus_[4]), 
        .data_in_5(_53_addbus_[5]), 
        .data_in_6(_53_addbus_[6]), 
        .data_in_7(_53_addbus_[7]), 
        .data_in_8(_53_addbus_[8]), 
        .data_in_9(_53_addbus_[9]), 
        .data_in_10(_53_addbus_[10]), 
        .data_in_11(_53_addbus_[11]), 
        .data_in_12(_53_addbus_[12]), 
        .data_in_13(_53_addbus_[13]), 
        .data_in_14(_53_addbus_[14]), 
        .data_in_15(_53_addbus_[15]), 
        .data_in_16(_53_addbus_[16]), 
        .data_in_17(_53_addbus_[17]), 
        .data_in_18(_53_addbus_[18]), 
        .data_in_19(_53_addbus_[19]), 
        .data_in_20(_53_addbus_[20]), 
        .data_in_21(_53_addbus_[21]), 
        .data_in_22(_53_addbus_[22]), 
        .data_in_23(_53_addbus_[23]), 
        .data_in_24(_53_addbus_[24]), 
        .data_in_25(_53_addbus_[25]), 
        .data_in_26(_53_addbus_[26]), 
        .data_in_27(_53_addbus_[27]), 
        .data_in_28(_53_addbus_[28]), 
        .data_in_29(_53_addbus_[29]), 
        .data_in_30(_53_addbus_[30]), 
        .data_in_31(_53_addbus_[31]), 
        .data_in_32(_53_addbus_[32]), 
        .data_in_33(_53_addbus_[33]), 
        .data_in_34(_53_addbus_[34]), 
        .data_in_35(_53_addbus_[35]), 
        .data_in_36(_53_addbus_[36]), 
        .data_in_37(_53_addbus_[37]), 
        .data_in_38(_53_addbus_[38]), 
        .data_in_39(_53_addbus_[39]), 
        .data_in_40(_53_addbus_[40]), 
        .data_in_41(_53_addbus_[41]), 
        .data_in_42(_53_addbus_[42]), 
        .data_in_43(_53_addbus_[43]), 
        .data_in_44(_53_addbus_[44]), 
        .data_in_45(_53_addbus_[45]), 
        .data_in_46(_53_addbus_[46]), 
        .data_in_47(_53_addbus_[47]), 
        .data_in_48(_53_addbus_[48]), 
        .data_in_49(_53_addbus_[49]), 
        .data_in_50(_53_addbus_[50]), 
        .data_in_51(_53_addbus_[51]), 
        .data_in_52(_53_addbus_[52]), 
        .data_in_53(_53_addbus_[53]), 
        .data_in_54(_53_addbus_[54]), 
        .data_in_55(_53_addbus_[55]), 
        .data_in_56(_53_addbus_[56]), 
        .data_in_57(_53_addbus_[57]), 
        .data_in_58(_53_addbus_[58]), 
        .data_in_59(_53_addbus_[59]), 
        .data_in_60(_53_addbus_[60]), 
        .data_in_61(_53_addbus_[61]), 
        .data_in_62(_53_addbus_[62]), 
        .data_in_63(_53_addbus_[63]) 
); 
wire [31:0] _54_addbus_[63:0];    
conv2d #("weight/max_polling/54_0.txt", 2, 0, 31, 31) conv2d_54_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_54_addbus_[0])
);
conv2d #("weight/max_polling/54_1.txt", 2, 0, 31, 31) conv2d_54_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_54_addbus_[1])
);
conv2d #("weight/max_polling/54_2.txt", 2, 0, 31, 31) conv2d_54_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_54_addbus_[2])
);
conv2d #("weight/max_polling/54_3.txt", 2, 0, 31, 31) conv2d_54_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_54_addbus_[3])
);
conv2d #("weight/max_polling/54_4.txt", 2, 0, 31, 31) conv2d_54_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_54_addbus_[4])
);
conv2d #("weight/max_polling/54_5.txt", 2, 0, 31, 31) conv2d_54_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_54_addbus_[5])
);
conv2d #("weight/max_polling/54_6.txt", 2, 0, 31, 31) conv2d_54_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_54_addbus_[6])
);
conv2d #("weight/max_polling/54_7.txt", 2, 0, 31, 31) conv2d_54_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_54_addbus_[7])
);
conv2d #("weight/max_polling/54_8.txt", 2, 0, 31, 31) conv2d_54_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_54_addbus_[8])
);
conv2d #("weight/max_polling/54_9.txt", 2, 0, 31, 31) conv2d_54_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_54_addbus_[9])
);
conv2d #("weight/max_polling/54_10.txt", 2, 0, 31, 31) conv2d_54_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_54_addbus_[10])
);
conv2d #("weight/max_polling/54_11.txt", 2, 0, 31, 31) conv2d_54_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_54_addbus_[11])
);
conv2d #("weight/max_polling/54_12.txt", 2, 0, 31, 31) conv2d_54_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_54_addbus_[12])
);
conv2d #("weight/max_polling/54_13.txt", 2, 0, 31, 31) conv2d_54_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_54_addbus_[13])
);
conv2d #("weight/max_polling/54_14.txt", 2, 0, 31, 31) conv2d_54_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_54_addbus_[14])
);
conv2d #("weight/max_polling/54_15.txt", 2, 0, 31, 31) conv2d_54_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_54_addbus_[15])
);
conv2d #("weight/max_polling/54_16.txt", 2, 0, 31, 31) conv2d_54_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_54_addbus_[16])
);
conv2d #("weight/max_polling/54_17.txt", 2, 0, 31, 31) conv2d_54_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_54_addbus_[17])
);
conv2d #("weight/max_polling/54_18.txt", 2, 0, 31, 31) conv2d_54_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_54_addbus_[18])
);
conv2d #("weight/max_polling/54_19.txt", 2, 0, 31, 31) conv2d_54_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_54_addbus_[19])
);
conv2d #("weight/max_polling/54_20.txt", 2, 0, 31, 31) conv2d_54_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_54_addbus_[20])
);
conv2d #("weight/max_polling/54_21.txt", 2, 0, 31, 31) conv2d_54_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_54_addbus_[21])
);
conv2d #("weight/max_polling/54_22.txt", 2, 0, 31, 31) conv2d_54_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_54_addbus_[22])
);
conv2d #("weight/max_polling/54_23.txt", 2, 0, 31, 31) conv2d_54_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_54_addbus_[23])
);
conv2d #("weight/max_polling/54_24.txt", 2, 0, 31, 31) conv2d_54_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_54_addbus_[24])
);
conv2d #("weight/max_polling/54_25.txt", 2, 0, 31, 31) conv2d_54_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_54_addbus_[25])
);
conv2d #("weight/max_polling/54_26.txt", 2, 0, 31, 31) conv2d_54_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_54_addbus_[26])
);
conv2d #("weight/max_polling/54_27.txt", 2, 0, 31, 31) conv2d_54_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_54_addbus_[27])
);
conv2d #("weight/max_polling/54_28.txt", 2, 0, 31, 31) conv2d_54_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_54_addbus_[28])
);
conv2d #("weight/max_polling/54_29.txt", 2, 0, 31, 31) conv2d_54_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_54_addbus_[29])
);
conv2d #("weight/max_polling/54_30.txt", 2, 0, 31, 31) conv2d_54_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_54_addbus_[30])
);
conv2d #("weight/max_polling/54_31.txt", 2, 0, 31, 31) conv2d_54_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_54_addbus_[31])
);
conv2d #("weight/max_polling/54_32.txt", 2, 0, 31, 31) conv2d_54_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_54_addbus_[32])
);
conv2d #("weight/max_polling/54_33.txt", 2, 0, 31, 31) conv2d_54_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_54_addbus_[33])
);
conv2d #("weight/max_polling/54_34.txt", 2, 0, 31, 31) conv2d_54_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_54_addbus_[34])
);
conv2d #("weight/max_polling/54_35.txt", 2, 0, 31, 31) conv2d_54_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_54_addbus_[35])
);
conv2d #("weight/max_polling/54_36.txt", 2, 0, 31, 31) conv2d_54_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_54_addbus_[36])
);
conv2d #("weight/max_polling/54_37.txt", 2, 0, 31, 31) conv2d_54_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_54_addbus_[37])
);
conv2d #("weight/max_polling/54_38.txt", 2, 0, 31, 31) conv2d_54_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_54_addbus_[38])
);
conv2d #("weight/max_polling/54_39.txt", 2, 0, 31, 31) conv2d_54_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_54_addbus_[39])
);
conv2d #("weight/max_polling/54_40.txt", 2, 0, 31, 31) conv2d_54_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_54_addbus_[40])
);
conv2d #("weight/max_polling/54_41.txt", 2, 0, 31, 31) conv2d_54_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_54_addbus_[41])
);
conv2d #("weight/max_polling/54_42.txt", 2, 0, 31, 31) conv2d_54_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_54_addbus_[42])
);
conv2d #("weight/max_polling/54_43.txt", 2, 0, 31, 31) conv2d_54_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_54_addbus_[43])
);
conv2d #("weight/max_polling/54_44.txt", 2, 0, 31, 31) conv2d_54_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_54_addbus_[44])
);
conv2d #("weight/max_polling/54_45.txt", 2, 0, 31, 31) conv2d_54_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_54_addbus_[45])
);
conv2d #("weight/max_polling/54_46.txt", 2, 0, 31, 31) conv2d_54_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_54_addbus_[46])
);
conv2d #("weight/max_polling/54_47.txt", 2, 0, 31, 31) conv2d_54_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_54_addbus_[47])
);
conv2d #("weight/max_polling/54_48.txt", 2, 0, 31, 31) conv2d_54_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_54_addbus_[48])
);
conv2d #("weight/max_polling/54_49.txt", 2, 0, 31, 31) conv2d_54_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_54_addbus_[49])
);
conv2d #("weight/max_polling/54_50.txt", 2, 0, 31, 31) conv2d_54_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_54_addbus_[50])
);
conv2d #("weight/max_polling/54_51.txt", 2, 0, 31, 31) conv2d_54_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_54_addbus_[51])
);
conv2d #("weight/max_polling/54_52.txt", 2, 0, 31, 31) conv2d_54_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_54_addbus_[52])
);
conv2d #("weight/max_polling/54_53.txt", 2, 0, 31, 31) conv2d_54_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_54_addbus_[53])
);
conv2d #("weight/max_polling/54_54.txt", 2, 0, 31, 31) conv2d_54_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_54_addbus_[54])
);
conv2d #("weight/max_polling/54_55.txt", 2, 0, 31, 31) conv2d_54_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_54_addbus_[55])
);
conv2d #("weight/max_polling/54_56.txt", 2, 0, 31, 31) conv2d_54_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_54_addbus_[56])
);
conv2d #("weight/max_polling/54_57.txt", 2, 0, 31, 31) conv2d_54_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_54_addbus_[57])
);
conv2d #("weight/max_polling/54_58.txt", 2, 0, 31, 31) conv2d_54_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_54_addbus_[58])
);
conv2d #("weight/max_polling/54_59.txt", 2, 0, 31, 31) conv2d_54_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_54_addbus_[59])
);
conv2d #("weight/max_polling/54_60.txt", 2, 0, 31, 31) conv2d_54_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_54_addbus_[60])
);
conv2d #("weight/max_polling/54_61.txt", 2, 0, 31, 31) conv2d_54_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_54_addbus_[61])
);
conv2d #("weight/max_polling/54_62.txt", 2, 0, 31, 31) conv2d_54_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_54_addbus_[62])
);
conv2d #("weight/max_polling/54_63.txt", 2, 0, 31, 31) conv2d_54_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_54_addbus_[63])
);
sum_64 #(15) sum_54( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[54]), 
        .data_in_0(_54_addbus_[0]), 
        .data_in_1(_54_addbus_[1]), 
        .data_in_2(_54_addbus_[2]), 
        .data_in_3(_54_addbus_[3]), 
        .data_in_4(_54_addbus_[4]), 
        .data_in_5(_54_addbus_[5]), 
        .data_in_6(_54_addbus_[6]), 
        .data_in_7(_54_addbus_[7]), 
        .data_in_8(_54_addbus_[8]), 
        .data_in_9(_54_addbus_[9]), 
        .data_in_10(_54_addbus_[10]), 
        .data_in_11(_54_addbus_[11]), 
        .data_in_12(_54_addbus_[12]), 
        .data_in_13(_54_addbus_[13]), 
        .data_in_14(_54_addbus_[14]), 
        .data_in_15(_54_addbus_[15]), 
        .data_in_16(_54_addbus_[16]), 
        .data_in_17(_54_addbus_[17]), 
        .data_in_18(_54_addbus_[18]), 
        .data_in_19(_54_addbus_[19]), 
        .data_in_20(_54_addbus_[20]), 
        .data_in_21(_54_addbus_[21]), 
        .data_in_22(_54_addbus_[22]), 
        .data_in_23(_54_addbus_[23]), 
        .data_in_24(_54_addbus_[24]), 
        .data_in_25(_54_addbus_[25]), 
        .data_in_26(_54_addbus_[26]), 
        .data_in_27(_54_addbus_[27]), 
        .data_in_28(_54_addbus_[28]), 
        .data_in_29(_54_addbus_[29]), 
        .data_in_30(_54_addbus_[30]), 
        .data_in_31(_54_addbus_[31]), 
        .data_in_32(_54_addbus_[32]), 
        .data_in_33(_54_addbus_[33]), 
        .data_in_34(_54_addbus_[34]), 
        .data_in_35(_54_addbus_[35]), 
        .data_in_36(_54_addbus_[36]), 
        .data_in_37(_54_addbus_[37]), 
        .data_in_38(_54_addbus_[38]), 
        .data_in_39(_54_addbus_[39]), 
        .data_in_40(_54_addbus_[40]), 
        .data_in_41(_54_addbus_[41]), 
        .data_in_42(_54_addbus_[42]), 
        .data_in_43(_54_addbus_[43]), 
        .data_in_44(_54_addbus_[44]), 
        .data_in_45(_54_addbus_[45]), 
        .data_in_46(_54_addbus_[46]), 
        .data_in_47(_54_addbus_[47]), 
        .data_in_48(_54_addbus_[48]), 
        .data_in_49(_54_addbus_[49]), 
        .data_in_50(_54_addbus_[50]), 
        .data_in_51(_54_addbus_[51]), 
        .data_in_52(_54_addbus_[52]), 
        .data_in_53(_54_addbus_[53]), 
        .data_in_54(_54_addbus_[54]), 
        .data_in_55(_54_addbus_[55]), 
        .data_in_56(_54_addbus_[56]), 
        .data_in_57(_54_addbus_[57]), 
        .data_in_58(_54_addbus_[58]), 
        .data_in_59(_54_addbus_[59]), 
        .data_in_60(_54_addbus_[60]), 
        .data_in_61(_54_addbus_[61]), 
        .data_in_62(_54_addbus_[62]), 
        .data_in_63(_54_addbus_[63]) 
); 
wire [31:0] _55_addbus_[63:0];    
conv2d #("weight/max_polling/55_0.txt", 2, 0, 31, 31) conv2d_55_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_55_addbus_[0])
);
conv2d #("weight/max_polling/55_1.txt", 2, 0, 31, 31) conv2d_55_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_55_addbus_[1])
);
conv2d #("weight/max_polling/55_2.txt", 2, 0, 31, 31) conv2d_55_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_55_addbus_[2])
);
conv2d #("weight/max_polling/55_3.txt", 2, 0, 31, 31) conv2d_55_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_55_addbus_[3])
);
conv2d #("weight/max_polling/55_4.txt", 2, 0, 31, 31) conv2d_55_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_55_addbus_[4])
);
conv2d #("weight/max_polling/55_5.txt", 2, 0, 31, 31) conv2d_55_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_55_addbus_[5])
);
conv2d #("weight/max_polling/55_6.txt", 2, 0, 31, 31) conv2d_55_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_55_addbus_[6])
);
conv2d #("weight/max_polling/55_7.txt", 2, 0, 31, 31) conv2d_55_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_55_addbus_[7])
);
conv2d #("weight/max_polling/55_8.txt", 2, 0, 31, 31) conv2d_55_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_55_addbus_[8])
);
conv2d #("weight/max_polling/55_9.txt", 2, 0, 31, 31) conv2d_55_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_55_addbus_[9])
);
conv2d #("weight/max_polling/55_10.txt", 2, 0, 31, 31) conv2d_55_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_55_addbus_[10])
);
conv2d #("weight/max_polling/55_11.txt", 2, 0, 31, 31) conv2d_55_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_55_addbus_[11])
);
conv2d #("weight/max_polling/55_12.txt", 2, 0, 31, 31) conv2d_55_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_55_addbus_[12])
);
conv2d #("weight/max_polling/55_13.txt", 2, 0, 31, 31) conv2d_55_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_55_addbus_[13])
);
conv2d #("weight/max_polling/55_14.txt", 2, 0, 31, 31) conv2d_55_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_55_addbus_[14])
);
conv2d #("weight/max_polling/55_15.txt", 2, 0, 31, 31) conv2d_55_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_55_addbus_[15])
);
conv2d #("weight/max_polling/55_16.txt", 2, 0, 31, 31) conv2d_55_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_55_addbus_[16])
);
conv2d #("weight/max_polling/55_17.txt", 2, 0, 31, 31) conv2d_55_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_55_addbus_[17])
);
conv2d #("weight/max_polling/55_18.txt", 2, 0, 31, 31) conv2d_55_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_55_addbus_[18])
);
conv2d #("weight/max_polling/55_19.txt", 2, 0, 31, 31) conv2d_55_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_55_addbus_[19])
);
conv2d #("weight/max_polling/55_20.txt", 2, 0, 31, 31) conv2d_55_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_55_addbus_[20])
);
conv2d #("weight/max_polling/55_21.txt", 2, 0, 31, 31) conv2d_55_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_55_addbus_[21])
);
conv2d #("weight/max_polling/55_22.txt", 2, 0, 31, 31) conv2d_55_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_55_addbus_[22])
);
conv2d #("weight/max_polling/55_23.txt", 2, 0, 31, 31) conv2d_55_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_55_addbus_[23])
);
conv2d #("weight/max_polling/55_24.txt", 2, 0, 31, 31) conv2d_55_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_55_addbus_[24])
);
conv2d #("weight/max_polling/55_25.txt", 2, 0, 31, 31) conv2d_55_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_55_addbus_[25])
);
conv2d #("weight/max_polling/55_26.txt", 2, 0, 31, 31) conv2d_55_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_55_addbus_[26])
);
conv2d #("weight/max_polling/55_27.txt", 2, 0, 31, 31) conv2d_55_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_55_addbus_[27])
);
conv2d #("weight/max_polling/55_28.txt", 2, 0, 31, 31) conv2d_55_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_55_addbus_[28])
);
conv2d #("weight/max_polling/55_29.txt", 2, 0, 31, 31) conv2d_55_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_55_addbus_[29])
);
conv2d #("weight/max_polling/55_30.txt", 2, 0, 31, 31) conv2d_55_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_55_addbus_[30])
);
conv2d #("weight/max_polling/55_31.txt", 2, 0, 31, 31) conv2d_55_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_55_addbus_[31])
);
conv2d #("weight/max_polling/55_32.txt", 2, 0, 31, 31) conv2d_55_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_55_addbus_[32])
);
conv2d #("weight/max_polling/55_33.txt", 2, 0, 31, 31) conv2d_55_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_55_addbus_[33])
);
conv2d #("weight/max_polling/55_34.txt", 2, 0, 31, 31) conv2d_55_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_55_addbus_[34])
);
conv2d #("weight/max_polling/55_35.txt", 2, 0, 31, 31) conv2d_55_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_55_addbus_[35])
);
conv2d #("weight/max_polling/55_36.txt", 2, 0, 31, 31) conv2d_55_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_55_addbus_[36])
);
conv2d #("weight/max_polling/55_37.txt", 2, 0, 31, 31) conv2d_55_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_55_addbus_[37])
);
conv2d #("weight/max_polling/55_38.txt", 2, 0, 31, 31) conv2d_55_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_55_addbus_[38])
);
conv2d #("weight/max_polling/55_39.txt", 2, 0, 31, 31) conv2d_55_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_55_addbus_[39])
);
conv2d #("weight/max_polling/55_40.txt", 2, 0, 31, 31) conv2d_55_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_55_addbus_[40])
);
conv2d #("weight/max_polling/55_41.txt", 2, 0, 31, 31) conv2d_55_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_55_addbus_[41])
);
conv2d #("weight/max_polling/55_42.txt", 2, 0, 31, 31) conv2d_55_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_55_addbus_[42])
);
conv2d #("weight/max_polling/55_43.txt", 2, 0, 31, 31) conv2d_55_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_55_addbus_[43])
);
conv2d #("weight/max_polling/55_44.txt", 2, 0, 31, 31) conv2d_55_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_55_addbus_[44])
);
conv2d #("weight/max_polling/55_45.txt", 2, 0, 31, 31) conv2d_55_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_55_addbus_[45])
);
conv2d #("weight/max_polling/55_46.txt", 2, 0, 31, 31) conv2d_55_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_55_addbus_[46])
);
conv2d #("weight/max_polling/55_47.txt", 2, 0, 31, 31) conv2d_55_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_55_addbus_[47])
);
conv2d #("weight/max_polling/55_48.txt", 2, 0, 31, 31) conv2d_55_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_55_addbus_[48])
);
conv2d #("weight/max_polling/55_49.txt", 2, 0, 31, 31) conv2d_55_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_55_addbus_[49])
);
conv2d #("weight/max_polling/55_50.txt", 2, 0, 31, 31) conv2d_55_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_55_addbus_[50])
);
conv2d #("weight/max_polling/55_51.txt", 2, 0, 31, 31) conv2d_55_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_55_addbus_[51])
);
conv2d #("weight/max_polling/55_52.txt", 2, 0, 31, 31) conv2d_55_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_55_addbus_[52])
);
conv2d #("weight/max_polling/55_53.txt", 2, 0, 31, 31) conv2d_55_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_55_addbus_[53])
);
conv2d #("weight/max_polling/55_54.txt", 2, 0, 31, 31) conv2d_55_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_55_addbus_[54])
);
conv2d #("weight/max_polling/55_55.txt", 2, 0, 31, 31) conv2d_55_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_55_addbus_[55])
);
conv2d #("weight/max_polling/55_56.txt", 2, 0, 31, 31) conv2d_55_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_55_addbus_[56])
);
conv2d #("weight/max_polling/55_57.txt", 2, 0, 31, 31) conv2d_55_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_55_addbus_[57])
);
conv2d #("weight/max_polling/55_58.txt", 2, 0, 31, 31) conv2d_55_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_55_addbus_[58])
);
conv2d #("weight/max_polling/55_59.txt", 2, 0, 31, 31) conv2d_55_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_55_addbus_[59])
);
conv2d #("weight/max_polling/55_60.txt", 2, 0, 31, 31) conv2d_55_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_55_addbus_[60])
);
conv2d #("weight/max_polling/55_61.txt", 2, 0, 31, 31) conv2d_55_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_55_addbus_[61])
);
conv2d #("weight/max_polling/55_62.txt", 2, 0, 31, 31) conv2d_55_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_55_addbus_[62])
);
conv2d #("weight/max_polling/55_63.txt", 2, 0, 31, 31) conv2d_55_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_55_addbus_[63])
);
sum_64 #(15) sum_55( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[55]), 
        .data_in_0(_55_addbus_[0]), 
        .data_in_1(_55_addbus_[1]), 
        .data_in_2(_55_addbus_[2]), 
        .data_in_3(_55_addbus_[3]), 
        .data_in_4(_55_addbus_[4]), 
        .data_in_5(_55_addbus_[5]), 
        .data_in_6(_55_addbus_[6]), 
        .data_in_7(_55_addbus_[7]), 
        .data_in_8(_55_addbus_[8]), 
        .data_in_9(_55_addbus_[9]), 
        .data_in_10(_55_addbus_[10]), 
        .data_in_11(_55_addbus_[11]), 
        .data_in_12(_55_addbus_[12]), 
        .data_in_13(_55_addbus_[13]), 
        .data_in_14(_55_addbus_[14]), 
        .data_in_15(_55_addbus_[15]), 
        .data_in_16(_55_addbus_[16]), 
        .data_in_17(_55_addbus_[17]), 
        .data_in_18(_55_addbus_[18]), 
        .data_in_19(_55_addbus_[19]), 
        .data_in_20(_55_addbus_[20]), 
        .data_in_21(_55_addbus_[21]), 
        .data_in_22(_55_addbus_[22]), 
        .data_in_23(_55_addbus_[23]), 
        .data_in_24(_55_addbus_[24]), 
        .data_in_25(_55_addbus_[25]), 
        .data_in_26(_55_addbus_[26]), 
        .data_in_27(_55_addbus_[27]), 
        .data_in_28(_55_addbus_[28]), 
        .data_in_29(_55_addbus_[29]), 
        .data_in_30(_55_addbus_[30]), 
        .data_in_31(_55_addbus_[31]), 
        .data_in_32(_55_addbus_[32]), 
        .data_in_33(_55_addbus_[33]), 
        .data_in_34(_55_addbus_[34]), 
        .data_in_35(_55_addbus_[35]), 
        .data_in_36(_55_addbus_[36]), 
        .data_in_37(_55_addbus_[37]), 
        .data_in_38(_55_addbus_[38]), 
        .data_in_39(_55_addbus_[39]), 
        .data_in_40(_55_addbus_[40]), 
        .data_in_41(_55_addbus_[41]), 
        .data_in_42(_55_addbus_[42]), 
        .data_in_43(_55_addbus_[43]), 
        .data_in_44(_55_addbus_[44]), 
        .data_in_45(_55_addbus_[45]), 
        .data_in_46(_55_addbus_[46]), 
        .data_in_47(_55_addbus_[47]), 
        .data_in_48(_55_addbus_[48]), 
        .data_in_49(_55_addbus_[49]), 
        .data_in_50(_55_addbus_[50]), 
        .data_in_51(_55_addbus_[51]), 
        .data_in_52(_55_addbus_[52]), 
        .data_in_53(_55_addbus_[53]), 
        .data_in_54(_55_addbus_[54]), 
        .data_in_55(_55_addbus_[55]), 
        .data_in_56(_55_addbus_[56]), 
        .data_in_57(_55_addbus_[57]), 
        .data_in_58(_55_addbus_[58]), 
        .data_in_59(_55_addbus_[59]), 
        .data_in_60(_55_addbus_[60]), 
        .data_in_61(_55_addbus_[61]), 
        .data_in_62(_55_addbus_[62]), 
        .data_in_63(_55_addbus_[63]) 
); 
wire [31:0] _56_addbus_[63:0];    
conv2d #("weight/max_polling/56_0.txt", 2, 0, 31, 31) conv2d_56_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_56_addbus_[0])
);
conv2d #("weight/max_polling/56_1.txt", 2, 0, 31, 31) conv2d_56_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_56_addbus_[1])
);
conv2d #("weight/max_polling/56_2.txt", 2, 0, 31, 31) conv2d_56_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_56_addbus_[2])
);
conv2d #("weight/max_polling/56_3.txt", 2, 0, 31, 31) conv2d_56_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_56_addbus_[3])
);
conv2d #("weight/max_polling/56_4.txt", 2, 0, 31, 31) conv2d_56_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_56_addbus_[4])
);
conv2d #("weight/max_polling/56_5.txt", 2, 0, 31, 31) conv2d_56_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_56_addbus_[5])
);
conv2d #("weight/max_polling/56_6.txt", 2, 0, 31, 31) conv2d_56_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_56_addbus_[6])
);
conv2d #("weight/max_polling/56_7.txt", 2, 0, 31, 31) conv2d_56_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_56_addbus_[7])
);
conv2d #("weight/max_polling/56_8.txt", 2, 0, 31, 31) conv2d_56_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_56_addbus_[8])
);
conv2d #("weight/max_polling/56_9.txt", 2, 0, 31, 31) conv2d_56_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_56_addbus_[9])
);
conv2d #("weight/max_polling/56_10.txt", 2, 0, 31, 31) conv2d_56_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_56_addbus_[10])
);
conv2d #("weight/max_polling/56_11.txt", 2, 0, 31, 31) conv2d_56_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_56_addbus_[11])
);
conv2d #("weight/max_polling/56_12.txt", 2, 0, 31, 31) conv2d_56_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_56_addbus_[12])
);
conv2d #("weight/max_polling/56_13.txt", 2, 0, 31, 31) conv2d_56_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_56_addbus_[13])
);
conv2d #("weight/max_polling/56_14.txt", 2, 0, 31, 31) conv2d_56_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_56_addbus_[14])
);
conv2d #("weight/max_polling/56_15.txt", 2, 0, 31, 31) conv2d_56_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_56_addbus_[15])
);
conv2d #("weight/max_polling/56_16.txt", 2, 0, 31, 31) conv2d_56_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_56_addbus_[16])
);
conv2d #("weight/max_polling/56_17.txt", 2, 0, 31, 31) conv2d_56_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_56_addbus_[17])
);
conv2d #("weight/max_polling/56_18.txt", 2, 0, 31, 31) conv2d_56_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_56_addbus_[18])
);
conv2d #("weight/max_polling/56_19.txt", 2, 0, 31, 31) conv2d_56_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_56_addbus_[19])
);
conv2d #("weight/max_polling/56_20.txt", 2, 0, 31, 31) conv2d_56_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_56_addbus_[20])
);
conv2d #("weight/max_polling/56_21.txt", 2, 0, 31, 31) conv2d_56_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_56_addbus_[21])
);
conv2d #("weight/max_polling/56_22.txt", 2, 0, 31, 31) conv2d_56_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_56_addbus_[22])
);
conv2d #("weight/max_polling/56_23.txt", 2, 0, 31, 31) conv2d_56_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_56_addbus_[23])
);
conv2d #("weight/max_polling/56_24.txt", 2, 0, 31, 31) conv2d_56_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_56_addbus_[24])
);
conv2d #("weight/max_polling/56_25.txt", 2, 0, 31, 31) conv2d_56_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_56_addbus_[25])
);
conv2d #("weight/max_polling/56_26.txt", 2, 0, 31, 31) conv2d_56_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_56_addbus_[26])
);
conv2d #("weight/max_polling/56_27.txt", 2, 0, 31, 31) conv2d_56_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_56_addbus_[27])
);
conv2d #("weight/max_polling/56_28.txt", 2, 0, 31, 31) conv2d_56_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_56_addbus_[28])
);
conv2d #("weight/max_polling/56_29.txt", 2, 0, 31, 31) conv2d_56_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_56_addbus_[29])
);
conv2d #("weight/max_polling/56_30.txt", 2, 0, 31, 31) conv2d_56_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_56_addbus_[30])
);
conv2d #("weight/max_polling/56_31.txt", 2, 0, 31, 31) conv2d_56_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_56_addbus_[31])
);
conv2d #("weight/max_polling/56_32.txt", 2, 0, 31, 31) conv2d_56_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_56_addbus_[32])
);
conv2d #("weight/max_polling/56_33.txt", 2, 0, 31, 31) conv2d_56_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_56_addbus_[33])
);
conv2d #("weight/max_polling/56_34.txt", 2, 0, 31, 31) conv2d_56_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_56_addbus_[34])
);
conv2d #("weight/max_polling/56_35.txt", 2, 0, 31, 31) conv2d_56_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_56_addbus_[35])
);
conv2d #("weight/max_polling/56_36.txt", 2, 0, 31, 31) conv2d_56_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_56_addbus_[36])
);
conv2d #("weight/max_polling/56_37.txt", 2, 0, 31, 31) conv2d_56_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_56_addbus_[37])
);
conv2d #("weight/max_polling/56_38.txt", 2, 0, 31, 31) conv2d_56_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_56_addbus_[38])
);
conv2d #("weight/max_polling/56_39.txt", 2, 0, 31, 31) conv2d_56_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_56_addbus_[39])
);
conv2d #("weight/max_polling/56_40.txt", 2, 0, 31, 31) conv2d_56_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_56_addbus_[40])
);
conv2d #("weight/max_polling/56_41.txt", 2, 0, 31, 31) conv2d_56_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_56_addbus_[41])
);
conv2d #("weight/max_polling/56_42.txt", 2, 0, 31, 31) conv2d_56_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_56_addbus_[42])
);
conv2d #("weight/max_polling/56_43.txt", 2, 0, 31, 31) conv2d_56_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_56_addbus_[43])
);
conv2d #("weight/max_polling/56_44.txt", 2, 0, 31, 31) conv2d_56_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_56_addbus_[44])
);
conv2d #("weight/max_polling/56_45.txt", 2, 0, 31, 31) conv2d_56_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_56_addbus_[45])
);
conv2d #("weight/max_polling/56_46.txt", 2, 0, 31, 31) conv2d_56_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_56_addbus_[46])
);
conv2d #("weight/max_polling/56_47.txt", 2, 0, 31, 31) conv2d_56_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_56_addbus_[47])
);
conv2d #("weight/max_polling/56_48.txt", 2, 0, 31, 31) conv2d_56_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_56_addbus_[48])
);
conv2d #("weight/max_polling/56_49.txt", 2, 0, 31, 31) conv2d_56_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_56_addbus_[49])
);
conv2d #("weight/max_polling/56_50.txt", 2, 0, 31, 31) conv2d_56_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_56_addbus_[50])
);
conv2d #("weight/max_polling/56_51.txt", 2, 0, 31, 31) conv2d_56_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_56_addbus_[51])
);
conv2d #("weight/max_polling/56_52.txt", 2, 0, 31, 31) conv2d_56_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_56_addbus_[52])
);
conv2d #("weight/max_polling/56_53.txt", 2, 0, 31, 31) conv2d_56_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_56_addbus_[53])
);
conv2d #("weight/max_polling/56_54.txt", 2, 0, 31, 31) conv2d_56_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_56_addbus_[54])
);
conv2d #("weight/max_polling/56_55.txt", 2, 0, 31, 31) conv2d_56_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_56_addbus_[55])
);
conv2d #("weight/max_polling/56_56.txt", 2, 0, 31, 31) conv2d_56_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_56_addbus_[56])
);
conv2d #("weight/max_polling/56_57.txt", 2, 0, 31, 31) conv2d_56_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_56_addbus_[57])
);
conv2d #("weight/max_polling/56_58.txt", 2, 0, 31, 31) conv2d_56_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_56_addbus_[58])
);
conv2d #("weight/max_polling/56_59.txt", 2, 0, 31, 31) conv2d_56_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_56_addbus_[59])
);
conv2d #("weight/max_polling/56_60.txt", 2, 0, 31, 31) conv2d_56_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_56_addbus_[60])
);
conv2d #("weight/max_polling/56_61.txt", 2, 0, 31, 31) conv2d_56_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_56_addbus_[61])
);
conv2d #("weight/max_polling/56_62.txt", 2, 0, 31, 31) conv2d_56_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_56_addbus_[62])
);
conv2d #("weight/max_polling/56_63.txt", 2, 0, 31, 31) conv2d_56_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_56_addbus_[63])
);
sum_64 #(15) sum_56( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[56]), 
        .data_in_0(_56_addbus_[0]), 
        .data_in_1(_56_addbus_[1]), 
        .data_in_2(_56_addbus_[2]), 
        .data_in_3(_56_addbus_[3]), 
        .data_in_4(_56_addbus_[4]), 
        .data_in_5(_56_addbus_[5]), 
        .data_in_6(_56_addbus_[6]), 
        .data_in_7(_56_addbus_[7]), 
        .data_in_8(_56_addbus_[8]), 
        .data_in_9(_56_addbus_[9]), 
        .data_in_10(_56_addbus_[10]), 
        .data_in_11(_56_addbus_[11]), 
        .data_in_12(_56_addbus_[12]), 
        .data_in_13(_56_addbus_[13]), 
        .data_in_14(_56_addbus_[14]), 
        .data_in_15(_56_addbus_[15]), 
        .data_in_16(_56_addbus_[16]), 
        .data_in_17(_56_addbus_[17]), 
        .data_in_18(_56_addbus_[18]), 
        .data_in_19(_56_addbus_[19]), 
        .data_in_20(_56_addbus_[20]), 
        .data_in_21(_56_addbus_[21]), 
        .data_in_22(_56_addbus_[22]), 
        .data_in_23(_56_addbus_[23]), 
        .data_in_24(_56_addbus_[24]), 
        .data_in_25(_56_addbus_[25]), 
        .data_in_26(_56_addbus_[26]), 
        .data_in_27(_56_addbus_[27]), 
        .data_in_28(_56_addbus_[28]), 
        .data_in_29(_56_addbus_[29]), 
        .data_in_30(_56_addbus_[30]), 
        .data_in_31(_56_addbus_[31]), 
        .data_in_32(_56_addbus_[32]), 
        .data_in_33(_56_addbus_[33]), 
        .data_in_34(_56_addbus_[34]), 
        .data_in_35(_56_addbus_[35]), 
        .data_in_36(_56_addbus_[36]), 
        .data_in_37(_56_addbus_[37]), 
        .data_in_38(_56_addbus_[38]), 
        .data_in_39(_56_addbus_[39]), 
        .data_in_40(_56_addbus_[40]), 
        .data_in_41(_56_addbus_[41]), 
        .data_in_42(_56_addbus_[42]), 
        .data_in_43(_56_addbus_[43]), 
        .data_in_44(_56_addbus_[44]), 
        .data_in_45(_56_addbus_[45]), 
        .data_in_46(_56_addbus_[46]), 
        .data_in_47(_56_addbus_[47]), 
        .data_in_48(_56_addbus_[48]), 
        .data_in_49(_56_addbus_[49]), 
        .data_in_50(_56_addbus_[50]), 
        .data_in_51(_56_addbus_[51]), 
        .data_in_52(_56_addbus_[52]), 
        .data_in_53(_56_addbus_[53]), 
        .data_in_54(_56_addbus_[54]), 
        .data_in_55(_56_addbus_[55]), 
        .data_in_56(_56_addbus_[56]), 
        .data_in_57(_56_addbus_[57]), 
        .data_in_58(_56_addbus_[58]), 
        .data_in_59(_56_addbus_[59]), 
        .data_in_60(_56_addbus_[60]), 
        .data_in_61(_56_addbus_[61]), 
        .data_in_62(_56_addbus_[62]), 
        .data_in_63(_56_addbus_[63]) 
); 
wire [31:0] _57_addbus_[63:0];    
conv2d #("weight/max_polling/57_0.txt", 2, 0, 31, 31) conv2d_57_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_57_addbus_[0])
);
conv2d #("weight/max_polling/57_1.txt", 2, 0, 31, 31) conv2d_57_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_57_addbus_[1])
);
conv2d #("weight/max_polling/57_2.txt", 2, 0, 31, 31) conv2d_57_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_57_addbus_[2])
);
conv2d #("weight/max_polling/57_3.txt", 2, 0, 31, 31) conv2d_57_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_57_addbus_[3])
);
conv2d #("weight/max_polling/57_4.txt", 2, 0, 31, 31) conv2d_57_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_57_addbus_[4])
);
conv2d #("weight/max_polling/57_5.txt", 2, 0, 31, 31) conv2d_57_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_57_addbus_[5])
);
conv2d #("weight/max_polling/57_6.txt", 2, 0, 31, 31) conv2d_57_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_57_addbus_[6])
);
conv2d #("weight/max_polling/57_7.txt", 2, 0, 31, 31) conv2d_57_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_57_addbus_[7])
);
conv2d #("weight/max_polling/57_8.txt", 2, 0, 31, 31) conv2d_57_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_57_addbus_[8])
);
conv2d #("weight/max_polling/57_9.txt", 2, 0, 31, 31) conv2d_57_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_57_addbus_[9])
);
conv2d #("weight/max_polling/57_10.txt", 2, 0, 31, 31) conv2d_57_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_57_addbus_[10])
);
conv2d #("weight/max_polling/57_11.txt", 2, 0, 31, 31) conv2d_57_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_57_addbus_[11])
);
conv2d #("weight/max_polling/57_12.txt", 2, 0, 31, 31) conv2d_57_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_57_addbus_[12])
);
conv2d #("weight/max_polling/57_13.txt", 2, 0, 31, 31) conv2d_57_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_57_addbus_[13])
);
conv2d #("weight/max_polling/57_14.txt", 2, 0, 31, 31) conv2d_57_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_57_addbus_[14])
);
conv2d #("weight/max_polling/57_15.txt", 2, 0, 31, 31) conv2d_57_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_57_addbus_[15])
);
conv2d #("weight/max_polling/57_16.txt", 2, 0, 31, 31) conv2d_57_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_57_addbus_[16])
);
conv2d #("weight/max_polling/57_17.txt", 2, 0, 31, 31) conv2d_57_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_57_addbus_[17])
);
conv2d #("weight/max_polling/57_18.txt", 2, 0, 31, 31) conv2d_57_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_57_addbus_[18])
);
conv2d #("weight/max_polling/57_19.txt", 2, 0, 31, 31) conv2d_57_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_57_addbus_[19])
);
conv2d #("weight/max_polling/57_20.txt", 2, 0, 31, 31) conv2d_57_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_57_addbus_[20])
);
conv2d #("weight/max_polling/57_21.txt", 2, 0, 31, 31) conv2d_57_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_57_addbus_[21])
);
conv2d #("weight/max_polling/57_22.txt", 2, 0, 31, 31) conv2d_57_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_57_addbus_[22])
);
conv2d #("weight/max_polling/57_23.txt", 2, 0, 31, 31) conv2d_57_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_57_addbus_[23])
);
conv2d #("weight/max_polling/57_24.txt", 2, 0, 31, 31) conv2d_57_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_57_addbus_[24])
);
conv2d #("weight/max_polling/57_25.txt", 2, 0, 31, 31) conv2d_57_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_57_addbus_[25])
);
conv2d #("weight/max_polling/57_26.txt", 2, 0, 31, 31) conv2d_57_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_57_addbus_[26])
);
conv2d #("weight/max_polling/57_27.txt", 2, 0, 31, 31) conv2d_57_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_57_addbus_[27])
);
conv2d #("weight/max_polling/57_28.txt", 2, 0, 31, 31) conv2d_57_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_57_addbus_[28])
);
conv2d #("weight/max_polling/57_29.txt", 2, 0, 31, 31) conv2d_57_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_57_addbus_[29])
);
conv2d #("weight/max_polling/57_30.txt", 2, 0, 31, 31) conv2d_57_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_57_addbus_[30])
);
conv2d #("weight/max_polling/57_31.txt", 2, 0, 31, 31) conv2d_57_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_57_addbus_[31])
);
conv2d #("weight/max_polling/57_32.txt", 2, 0, 31, 31) conv2d_57_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_57_addbus_[32])
);
conv2d #("weight/max_polling/57_33.txt", 2, 0, 31, 31) conv2d_57_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_57_addbus_[33])
);
conv2d #("weight/max_polling/57_34.txt", 2, 0, 31, 31) conv2d_57_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_57_addbus_[34])
);
conv2d #("weight/max_polling/57_35.txt", 2, 0, 31, 31) conv2d_57_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_57_addbus_[35])
);
conv2d #("weight/max_polling/57_36.txt", 2, 0, 31, 31) conv2d_57_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_57_addbus_[36])
);
conv2d #("weight/max_polling/57_37.txt", 2, 0, 31, 31) conv2d_57_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_57_addbus_[37])
);
conv2d #("weight/max_polling/57_38.txt", 2, 0, 31, 31) conv2d_57_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_57_addbus_[38])
);
conv2d #("weight/max_polling/57_39.txt", 2, 0, 31, 31) conv2d_57_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_57_addbus_[39])
);
conv2d #("weight/max_polling/57_40.txt", 2, 0, 31, 31) conv2d_57_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_57_addbus_[40])
);
conv2d #("weight/max_polling/57_41.txt", 2, 0, 31, 31) conv2d_57_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_57_addbus_[41])
);
conv2d #("weight/max_polling/57_42.txt", 2, 0, 31, 31) conv2d_57_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_57_addbus_[42])
);
conv2d #("weight/max_polling/57_43.txt", 2, 0, 31, 31) conv2d_57_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_57_addbus_[43])
);
conv2d #("weight/max_polling/57_44.txt", 2, 0, 31, 31) conv2d_57_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_57_addbus_[44])
);
conv2d #("weight/max_polling/57_45.txt", 2, 0, 31, 31) conv2d_57_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_57_addbus_[45])
);
conv2d #("weight/max_polling/57_46.txt", 2, 0, 31, 31) conv2d_57_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_57_addbus_[46])
);
conv2d #("weight/max_polling/57_47.txt", 2, 0, 31, 31) conv2d_57_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_57_addbus_[47])
);
conv2d #("weight/max_polling/57_48.txt", 2, 0, 31, 31) conv2d_57_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_57_addbus_[48])
);
conv2d #("weight/max_polling/57_49.txt", 2, 0, 31, 31) conv2d_57_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_57_addbus_[49])
);
conv2d #("weight/max_polling/57_50.txt", 2, 0, 31, 31) conv2d_57_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_57_addbus_[50])
);
conv2d #("weight/max_polling/57_51.txt", 2, 0, 31, 31) conv2d_57_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_57_addbus_[51])
);
conv2d #("weight/max_polling/57_52.txt", 2, 0, 31, 31) conv2d_57_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_57_addbus_[52])
);
conv2d #("weight/max_polling/57_53.txt", 2, 0, 31, 31) conv2d_57_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_57_addbus_[53])
);
conv2d #("weight/max_polling/57_54.txt", 2, 0, 31, 31) conv2d_57_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_57_addbus_[54])
);
conv2d #("weight/max_polling/57_55.txt", 2, 0, 31, 31) conv2d_57_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_57_addbus_[55])
);
conv2d #("weight/max_polling/57_56.txt", 2, 0, 31, 31) conv2d_57_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_57_addbus_[56])
);
conv2d #("weight/max_polling/57_57.txt", 2, 0, 31, 31) conv2d_57_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_57_addbus_[57])
);
conv2d #("weight/max_polling/57_58.txt", 2, 0, 31, 31) conv2d_57_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_57_addbus_[58])
);
conv2d #("weight/max_polling/57_59.txt", 2, 0, 31, 31) conv2d_57_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_57_addbus_[59])
);
conv2d #("weight/max_polling/57_60.txt", 2, 0, 31, 31) conv2d_57_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_57_addbus_[60])
);
conv2d #("weight/max_polling/57_61.txt", 2, 0, 31, 31) conv2d_57_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_57_addbus_[61])
);
conv2d #("weight/max_polling/57_62.txt", 2, 0, 31, 31) conv2d_57_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_57_addbus_[62])
);
conv2d #("weight/max_polling/57_63.txt", 2, 0, 31, 31) conv2d_57_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_57_addbus_[63])
);
sum_64 #(15) sum_57( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[57]), 
        .data_in_0(_57_addbus_[0]), 
        .data_in_1(_57_addbus_[1]), 
        .data_in_2(_57_addbus_[2]), 
        .data_in_3(_57_addbus_[3]), 
        .data_in_4(_57_addbus_[4]), 
        .data_in_5(_57_addbus_[5]), 
        .data_in_6(_57_addbus_[6]), 
        .data_in_7(_57_addbus_[7]), 
        .data_in_8(_57_addbus_[8]), 
        .data_in_9(_57_addbus_[9]), 
        .data_in_10(_57_addbus_[10]), 
        .data_in_11(_57_addbus_[11]), 
        .data_in_12(_57_addbus_[12]), 
        .data_in_13(_57_addbus_[13]), 
        .data_in_14(_57_addbus_[14]), 
        .data_in_15(_57_addbus_[15]), 
        .data_in_16(_57_addbus_[16]), 
        .data_in_17(_57_addbus_[17]), 
        .data_in_18(_57_addbus_[18]), 
        .data_in_19(_57_addbus_[19]), 
        .data_in_20(_57_addbus_[20]), 
        .data_in_21(_57_addbus_[21]), 
        .data_in_22(_57_addbus_[22]), 
        .data_in_23(_57_addbus_[23]), 
        .data_in_24(_57_addbus_[24]), 
        .data_in_25(_57_addbus_[25]), 
        .data_in_26(_57_addbus_[26]), 
        .data_in_27(_57_addbus_[27]), 
        .data_in_28(_57_addbus_[28]), 
        .data_in_29(_57_addbus_[29]), 
        .data_in_30(_57_addbus_[30]), 
        .data_in_31(_57_addbus_[31]), 
        .data_in_32(_57_addbus_[32]), 
        .data_in_33(_57_addbus_[33]), 
        .data_in_34(_57_addbus_[34]), 
        .data_in_35(_57_addbus_[35]), 
        .data_in_36(_57_addbus_[36]), 
        .data_in_37(_57_addbus_[37]), 
        .data_in_38(_57_addbus_[38]), 
        .data_in_39(_57_addbus_[39]), 
        .data_in_40(_57_addbus_[40]), 
        .data_in_41(_57_addbus_[41]), 
        .data_in_42(_57_addbus_[42]), 
        .data_in_43(_57_addbus_[43]), 
        .data_in_44(_57_addbus_[44]), 
        .data_in_45(_57_addbus_[45]), 
        .data_in_46(_57_addbus_[46]), 
        .data_in_47(_57_addbus_[47]), 
        .data_in_48(_57_addbus_[48]), 
        .data_in_49(_57_addbus_[49]), 
        .data_in_50(_57_addbus_[50]), 
        .data_in_51(_57_addbus_[51]), 
        .data_in_52(_57_addbus_[52]), 
        .data_in_53(_57_addbus_[53]), 
        .data_in_54(_57_addbus_[54]), 
        .data_in_55(_57_addbus_[55]), 
        .data_in_56(_57_addbus_[56]), 
        .data_in_57(_57_addbus_[57]), 
        .data_in_58(_57_addbus_[58]), 
        .data_in_59(_57_addbus_[59]), 
        .data_in_60(_57_addbus_[60]), 
        .data_in_61(_57_addbus_[61]), 
        .data_in_62(_57_addbus_[62]), 
        .data_in_63(_57_addbus_[63]) 
); 
wire [31:0] _58_addbus_[63:0];    
conv2d #("weight/max_polling/58_0.txt", 2, 0, 31, 31) conv2d_58_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_58_addbus_[0])
);
conv2d #("weight/max_polling/58_1.txt", 2, 0, 31, 31) conv2d_58_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_58_addbus_[1])
);
conv2d #("weight/max_polling/58_2.txt", 2, 0, 31, 31) conv2d_58_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_58_addbus_[2])
);
conv2d #("weight/max_polling/58_3.txt", 2, 0, 31, 31) conv2d_58_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_58_addbus_[3])
);
conv2d #("weight/max_polling/58_4.txt", 2, 0, 31, 31) conv2d_58_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_58_addbus_[4])
);
conv2d #("weight/max_polling/58_5.txt", 2, 0, 31, 31) conv2d_58_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_58_addbus_[5])
);
conv2d #("weight/max_polling/58_6.txt", 2, 0, 31, 31) conv2d_58_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_58_addbus_[6])
);
conv2d #("weight/max_polling/58_7.txt", 2, 0, 31, 31) conv2d_58_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_58_addbus_[7])
);
conv2d #("weight/max_polling/58_8.txt", 2, 0, 31, 31) conv2d_58_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_58_addbus_[8])
);
conv2d #("weight/max_polling/58_9.txt", 2, 0, 31, 31) conv2d_58_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_58_addbus_[9])
);
conv2d #("weight/max_polling/58_10.txt", 2, 0, 31, 31) conv2d_58_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_58_addbus_[10])
);
conv2d #("weight/max_polling/58_11.txt", 2, 0, 31, 31) conv2d_58_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_58_addbus_[11])
);
conv2d #("weight/max_polling/58_12.txt", 2, 0, 31, 31) conv2d_58_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_58_addbus_[12])
);
conv2d #("weight/max_polling/58_13.txt", 2, 0, 31, 31) conv2d_58_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_58_addbus_[13])
);
conv2d #("weight/max_polling/58_14.txt", 2, 0, 31, 31) conv2d_58_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_58_addbus_[14])
);
conv2d #("weight/max_polling/58_15.txt", 2, 0, 31, 31) conv2d_58_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_58_addbus_[15])
);
conv2d #("weight/max_polling/58_16.txt", 2, 0, 31, 31) conv2d_58_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_58_addbus_[16])
);
conv2d #("weight/max_polling/58_17.txt", 2, 0, 31, 31) conv2d_58_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_58_addbus_[17])
);
conv2d #("weight/max_polling/58_18.txt", 2, 0, 31, 31) conv2d_58_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_58_addbus_[18])
);
conv2d #("weight/max_polling/58_19.txt", 2, 0, 31, 31) conv2d_58_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_58_addbus_[19])
);
conv2d #("weight/max_polling/58_20.txt", 2, 0, 31, 31) conv2d_58_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_58_addbus_[20])
);
conv2d #("weight/max_polling/58_21.txt", 2, 0, 31, 31) conv2d_58_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_58_addbus_[21])
);
conv2d #("weight/max_polling/58_22.txt", 2, 0, 31, 31) conv2d_58_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_58_addbus_[22])
);
conv2d #("weight/max_polling/58_23.txt", 2, 0, 31, 31) conv2d_58_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_58_addbus_[23])
);
conv2d #("weight/max_polling/58_24.txt", 2, 0, 31, 31) conv2d_58_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_58_addbus_[24])
);
conv2d #("weight/max_polling/58_25.txt", 2, 0, 31, 31) conv2d_58_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_58_addbus_[25])
);
conv2d #("weight/max_polling/58_26.txt", 2, 0, 31, 31) conv2d_58_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_58_addbus_[26])
);
conv2d #("weight/max_polling/58_27.txt", 2, 0, 31, 31) conv2d_58_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_58_addbus_[27])
);
conv2d #("weight/max_polling/58_28.txt", 2, 0, 31, 31) conv2d_58_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_58_addbus_[28])
);
conv2d #("weight/max_polling/58_29.txt", 2, 0, 31, 31) conv2d_58_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_58_addbus_[29])
);
conv2d #("weight/max_polling/58_30.txt", 2, 0, 31, 31) conv2d_58_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_58_addbus_[30])
);
conv2d #("weight/max_polling/58_31.txt", 2, 0, 31, 31) conv2d_58_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_58_addbus_[31])
);
conv2d #("weight/max_polling/58_32.txt", 2, 0, 31, 31) conv2d_58_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_58_addbus_[32])
);
conv2d #("weight/max_polling/58_33.txt", 2, 0, 31, 31) conv2d_58_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_58_addbus_[33])
);
conv2d #("weight/max_polling/58_34.txt", 2, 0, 31, 31) conv2d_58_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_58_addbus_[34])
);
conv2d #("weight/max_polling/58_35.txt", 2, 0, 31, 31) conv2d_58_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_58_addbus_[35])
);
conv2d #("weight/max_polling/58_36.txt", 2, 0, 31, 31) conv2d_58_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_58_addbus_[36])
);
conv2d #("weight/max_polling/58_37.txt", 2, 0, 31, 31) conv2d_58_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_58_addbus_[37])
);
conv2d #("weight/max_polling/58_38.txt", 2, 0, 31, 31) conv2d_58_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_58_addbus_[38])
);
conv2d #("weight/max_polling/58_39.txt", 2, 0, 31, 31) conv2d_58_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_58_addbus_[39])
);
conv2d #("weight/max_polling/58_40.txt", 2, 0, 31, 31) conv2d_58_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_58_addbus_[40])
);
conv2d #("weight/max_polling/58_41.txt", 2, 0, 31, 31) conv2d_58_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_58_addbus_[41])
);
conv2d #("weight/max_polling/58_42.txt", 2, 0, 31, 31) conv2d_58_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_58_addbus_[42])
);
conv2d #("weight/max_polling/58_43.txt", 2, 0, 31, 31) conv2d_58_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_58_addbus_[43])
);
conv2d #("weight/max_polling/58_44.txt", 2, 0, 31, 31) conv2d_58_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_58_addbus_[44])
);
conv2d #("weight/max_polling/58_45.txt", 2, 0, 31, 31) conv2d_58_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_58_addbus_[45])
);
conv2d #("weight/max_polling/58_46.txt", 2, 0, 31, 31) conv2d_58_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_58_addbus_[46])
);
conv2d #("weight/max_polling/58_47.txt", 2, 0, 31, 31) conv2d_58_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_58_addbus_[47])
);
conv2d #("weight/max_polling/58_48.txt", 2, 0, 31, 31) conv2d_58_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_58_addbus_[48])
);
conv2d #("weight/max_polling/58_49.txt", 2, 0, 31, 31) conv2d_58_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_58_addbus_[49])
);
conv2d #("weight/max_polling/58_50.txt", 2, 0, 31, 31) conv2d_58_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_58_addbus_[50])
);
conv2d #("weight/max_polling/58_51.txt", 2, 0, 31, 31) conv2d_58_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_58_addbus_[51])
);
conv2d #("weight/max_polling/58_52.txt", 2, 0, 31, 31) conv2d_58_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_58_addbus_[52])
);
conv2d #("weight/max_polling/58_53.txt", 2, 0, 31, 31) conv2d_58_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_58_addbus_[53])
);
conv2d #("weight/max_polling/58_54.txt", 2, 0, 31, 31) conv2d_58_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_58_addbus_[54])
);
conv2d #("weight/max_polling/58_55.txt", 2, 0, 31, 31) conv2d_58_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_58_addbus_[55])
);
conv2d #("weight/max_polling/58_56.txt", 2, 0, 31, 31) conv2d_58_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_58_addbus_[56])
);
conv2d #("weight/max_polling/58_57.txt", 2, 0, 31, 31) conv2d_58_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_58_addbus_[57])
);
conv2d #("weight/max_polling/58_58.txt", 2, 0, 31, 31) conv2d_58_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_58_addbus_[58])
);
conv2d #("weight/max_polling/58_59.txt", 2, 0, 31, 31) conv2d_58_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_58_addbus_[59])
);
conv2d #("weight/max_polling/58_60.txt", 2, 0, 31, 31) conv2d_58_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_58_addbus_[60])
);
conv2d #("weight/max_polling/58_61.txt", 2, 0, 31, 31) conv2d_58_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_58_addbus_[61])
);
conv2d #("weight/max_polling/58_62.txt", 2, 0, 31, 31) conv2d_58_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_58_addbus_[62])
);
conv2d #("weight/max_polling/58_63.txt", 2, 0, 31, 31) conv2d_58_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_58_addbus_[63])
);
sum_64 #(15) sum_58( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[58]), 
        .data_in_0(_58_addbus_[0]), 
        .data_in_1(_58_addbus_[1]), 
        .data_in_2(_58_addbus_[2]), 
        .data_in_3(_58_addbus_[3]), 
        .data_in_4(_58_addbus_[4]), 
        .data_in_5(_58_addbus_[5]), 
        .data_in_6(_58_addbus_[6]), 
        .data_in_7(_58_addbus_[7]), 
        .data_in_8(_58_addbus_[8]), 
        .data_in_9(_58_addbus_[9]), 
        .data_in_10(_58_addbus_[10]), 
        .data_in_11(_58_addbus_[11]), 
        .data_in_12(_58_addbus_[12]), 
        .data_in_13(_58_addbus_[13]), 
        .data_in_14(_58_addbus_[14]), 
        .data_in_15(_58_addbus_[15]), 
        .data_in_16(_58_addbus_[16]), 
        .data_in_17(_58_addbus_[17]), 
        .data_in_18(_58_addbus_[18]), 
        .data_in_19(_58_addbus_[19]), 
        .data_in_20(_58_addbus_[20]), 
        .data_in_21(_58_addbus_[21]), 
        .data_in_22(_58_addbus_[22]), 
        .data_in_23(_58_addbus_[23]), 
        .data_in_24(_58_addbus_[24]), 
        .data_in_25(_58_addbus_[25]), 
        .data_in_26(_58_addbus_[26]), 
        .data_in_27(_58_addbus_[27]), 
        .data_in_28(_58_addbus_[28]), 
        .data_in_29(_58_addbus_[29]), 
        .data_in_30(_58_addbus_[30]), 
        .data_in_31(_58_addbus_[31]), 
        .data_in_32(_58_addbus_[32]), 
        .data_in_33(_58_addbus_[33]), 
        .data_in_34(_58_addbus_[34]), 
        .data_in_35(_58_addbus_[35]), 
        .data_in_36(_58_addbus_[36]), 
        .data_in_37(_58_addbus_[37]), 
        .data_in_38(_58_addbus_[38]), 
        .data_in_39(_58_addbus_[39]), 
        .data_in_40(_58_addbus_[40]), 
        .data_in_41(_58_addbus_[41]), 
        .data_in_42(_58_addbus_[42]), 
        .data_in_43(_58_addbus_[43]), 
        .data_in_44(_58_addbus_[44]), 
        .data_in_45(_58_addbus_[45]), 
        .data_in_46(_58_addbus_[46]), 
        .data_in_47(_58_addbus_[47]), 
        .data_in_48(_58_addbus_[48]), 
        .data_in_49(_58_addbus_[49]), 
        .data_in_50(_58_addbus_[50]), 
        .data_in_51(_58_addbus_[51]), 
        .data_in_52(_58_addbus_[52]), 
        .data_in_53(_58_addbus_[53]), 
        .data_in_54(_58_addbus_[54]), 
        .data_in_55(_58_addbus_[55]), 
        .data_in_56(_58_addbus_[56]), 
        .data_in_57(_58_addbus_[57]), 
        .data_in_58(_58_addbus_[58]), 
        .data_in_59(_58_addbus_[59]), 
        .data_in_60(_58_addbus_[60]), 
        .data_in_61(_58_addbus_[61]), 
        .data_in_62(_58_addbus_[62]), 
        .data_in_63(_58_addbus_[63]) 
); 
wire [31:0] _59_addbus_[63:0];    
conv2d #("weight/max_polling/59_0.txt", 2, 0, 31, 31) conv2d_59_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_59_addbus_[0])
);
conv2d #("weight/max_polling/59_1.txt", 2, 0, 31, 31) conv2d_59_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_59_addbus_[1])
);
conv2d #("weight/max_polling/59_2.txt", 2, 0, 31, 31) conv2d_59_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_59_addbus_[2])
);
conv2d #("weight/max_polling/59_3.txt", 2, 0, 31, 31) conv2d_59_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_59_addbus_[3])
);
conv2d #("weight/max_polling/59_4.txt", 2, 0, 31, 31) conv2d_59_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_59_addbus_[4])
);
conv2d #("weight/max_polling/59_5.txt", 2, 0, 31, 31) conv2d_59_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_59_addbus_[5])
);
conv2d #("weight/max_polling/59_6.txt", 2, 0, 31, 31) conv2d_59_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_59_addbus_[6])
);
conv2d #("weight/max_polling/59_7.txt", 2, 0, 31, 31) conv2d_59_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_59_addbus_[7])
);
conv2d #("weight/max_polling/59_8.txt", 2, 0, 31, 31) conv2d_59_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_59_addbus_[8])
);
conv2d #("weight/max_polling/59_9.txt", 2, 0, 31, 31) conv2d_59_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_59_addbus_[9])
);
conv2d #("weight/max_polling/59_10.txt", 2, 0, 31, 31) conv2d_59_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_59_addbus_[10])
);
conv2d #("weight/max_polling/59_11.txt", 2, 0, 31, 31) conv2d_59_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_59_addbus_[11])
);
conv2d #("weight/max_polling/59_12.txt", 2, 0, 31, 31) conv2d_59_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_59_addbus_[12])
);
conv2d #("weight/max_polling/59_13.txt", 2, 0, 31, 31) conv2d_59_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_59_addbus_[13])
);
conv2d #("weight/max_polling/59_14.txt", 2, 0, 31, 31) conv2d_59_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_59_addbus_[14])
);
conv2d #("weight/max_polling/59_15.txt", 2, 0, 31, 31) conv2d_59_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_59_addbus_[15])
);
conv2d #("weight/max_polling/59_16.txt", 2, 0, 31, 31) conv2d_59_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_59_addbus_[16])
);
conv2d #("weight/max_polling/59_17.txt", 2, 0, 31, 31) conv2d_59_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_59_addbus_[17])
);
conv2d #("weight/max_polling/59_18.txt", 2, 0, 31, 31) conv2d_59_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_59_addbus_[18])
);
conv2d #("weight/max_polling/59_19.txt", 2, 0, 31, 31) conv2d_59_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_59_addbus_[19])
);
conv2d #("weight/max_polling/59_20.txt", 2, 0, 31, 31) conv2d_59_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_59_addbus_[20])
);
conv2d #("weight/max_polling/59_21.txt", 2, 0, 31, 31) conv2d_59_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_59_addbus_[21])
);
conv2d #("weight/max_polling/59_22.txt", 2, 0, 31, 31) conv2d_59_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_59_addbus_[22])
);
conv2d #("weight/max_polling/59_23.txt", 2, 0, 31, 31) conv2d_59_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_59_addbus_[23])
);
conv2d #("weight/max_polling/59_24.txt", 2, 0, 31, 31) conv2d_59_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_59_addbus_[24])
);
conv2d #("weight/max_polling/59_25.txt", 2, 0, 31, 31) conv2d_59_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_59_addbus_[25])
);
conv2d #("weight/max_polling/59_26.txt", 2, 0, 31, 31) conv2d_59_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_59_addbus_[26])
);
conv2d #("weight/max_polling/59_27.txt", 2, 0, 31, 31) conv2d_59_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_59_addbus_[27])
);
conv2d #("weight/max_polling/59_28.txt", 2, 0, 31, 31) conv2d_59_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_59_addbus_[28])
);
conv2d #("weight/max_polling/59_29.txt", 2, 0, 31, 31) conv2d_59_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_59_addbus_[29])
);
conv2d #("weight/max_polling/59_30.txt", 2, 0, 31, 31) conv2d_59_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_59_addbus_[30])
);
conv2d #("weight/max_polling/59_31.txt", 2, 0, 31, 31) conv2d_59_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_59_addbus_[31])
);
conv2d #("weight/max_polling/59_32.txt", 2, 0, 31, 31) conv2d_59_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_59_addbus_[32])
);
conv2d #("weight/max_polling/59_33.txt", 2, 0, 31, 31) conv2d_59_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_59_addbus_[33])
);
conv2d #("weight/max_polling/59_34.txt", 2, 0, 31, 31) conv2d_59_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_59_addbus_[34])
);
conv2d #("weight/max_polling/59_35.txt", 2, 0, 31, 31) conv2d_59_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_59_addbus_[35])
);
conv2d #("weight/max_polling/59_36.txt", 2, 0, 31, 31) conv2d_59_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_59_addbus_[36])
);
conv2d #("weight/max_polling/59_37.txt", 2, 0, 31, 31) conv2d_59_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_59_addbus_[37])
);
conv2d #("weight/max_polling/59_38.txt", 2, 0, 31, 31) conv2d_59_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_59_addbus_[38])
);
conv2d #("weight/max_polling/59_39.txt", 2, 0, 31, 31) conv2d_59_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_59_addbus_[39])
);
conv2d #("weight/max_polling/59_40.txt", 2, 0, 31, 31) conv2d_59_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_59_addbus_[40])
);
conv2d #("weight/max_polling/59_41.txt", 2, 0, 31, 31) conv2d_59_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_59_addbus_[41])
);
conv2d #("weight/max_polling/59_42.txt", 2, 0, 31, 31) conv2d_59_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_59_addbus_[42])
);
conv2d #("weight/max_polling/59_43.txt", 2, 0, 31, 31) conv2d_59_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_59_addbus_[43])
);
conv2d #("weight/max_polling/59_44.txt", 2, 0, 31, 31) conv2d_59_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_59_addbus_[44])
);
conv2d #("weight/max_polling/59_45.txt", 2, 0, 31, 31) conv2d_59_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_59_addbus_[45])
);
conv2d #("weight/max_polling/59_46.txt", 2, 0, 31, 31) conv2d_59_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_59_addbus_[46])
);
conv2d #("weight/max_polling/59_47.txt", 2, 0, 31, 31) conv2d_59_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_59_addbus_[47])
);
conv2d #("weight/max_polling/59_48.txt", 2, 0, 31, 31) conv2d_59_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_59_addbus_[48])
);
conv2d #("weight/max_polling/59_49.txt", 2, 0, 31, 31) conv2d_59_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_59_addbus_[49])
);
conv2d #("weight/max_polling/59_50.txt", 2, 0, 31, 31) conv2d_59_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_59_addbus_[50])
);
conv2d #("weight/max_polling/59_51.txt", 2, 0, 31, 31) conv2d_59_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_59_addbus_[51])
);
conv2d #("weight/max_polling/59_52.txt", 2, 0, 31, 31) conv2d_59_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_59_addbus_[52])
);
conv2d #("weight/max_polling/59_53.txt", 2, 0, 31, 31) conv2d_59_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_59_addbus_[53])
);
conv2d #("weight/max_polling/59_54.txt", 2, 0, 31, 31) conv2d_59_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_59_addbus_[54])
);
conv2d #("weight/max_polling/59_55.txt", 2, 0, 31, 31) conv2d_59_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_59_addbus_[55])
);
conv2d #("weight/max_polling/59_56.txt", 2, 0, 31, 31) conv2d_59_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_59_addbus_[56])
);
conv2d #("weight/max_polling/59_57.txt", 2, 0, 31, 31) conv2d_59_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_59_addbus_[57])
);
conv2d #("weight/max_polling/59_58.txt", 2, 0, 31, 31) conv2d_59_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_59_addbus_[58])
);
conv2d #("weight/max_polling/59_59.txt", 2, 0, 31, 31) conv2d_59_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_59_addbus_[59])
);
conv2d #("weight/max_polling/59_60.txt", 2, 0, 31, 31) conv2d_59_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_59_addbus_[60])
);
conv2d #("weight/max_polling/59_61.txt", 2, 0, 31, 31) conv2d_59_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_59_addbus_[61])
);
conv2d #("weight/max_polling/59_62.txt", 2, 0, 31, 31) conv2d_59_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_59_addbus_[62])
);
conv2d #("weight/max_polling/59_63.txt", 2, 0, 31, 31) conv2d_59_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_59_addbus_[63])
);
sum_64 #(15) sum_59( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[59]), 
        .data_in_0(_59_addbus_[0]), 
        .data_in_1(_59_addbus_[1]), 
        .data_in_2(_59_addbus_[2]), 
        .data_in_3(_59_addbus_[3]), 
        .data_in_4(_59_addbus_[4]), 
        .data_in_5(_59_addbus_[5]), 
        .data_in_6(_59_addbus_[6]), 
        .data_in_7(_59_addbus_[7]), 
        .data_in_8(_59_addbus_[8]), 
        .data_in_9(_59_addbus_[9]), 
        .data_in_10(_59_addbus_[10]), 
        .data_in_11(_59_addbus_[11]), 
        .data_in_12(_59_addbus_[12]), 
        .data_in_13(_59_addbus_[13]), 
        .data_in_14(_59_addbus_[14]), 
        .data_in_15(_59_addbus_[15]), 
        .data_in_16(_59_addbus_[16]), 
        .data_in_17(_59_addbus_[17]), 
        .data_in_18(_59_addbus_[18]), 
        .data_in_19(_59_addbus_[19]), 
        .data_in_20(_59_addbus_[20]), 
        .data_in_21(_59_addbus_[21]), 
        .data_in_22(_59_addbus_[22]), 
        .data_in_23(_59_addbus_[23]), 
        .data_in_24(_59_addbus_[24]), 
        .data_in_25(_59_addbus_[25]), 
        .data_in_26(_59_addbus_[26]), 
        .data_in_27(_59_addbus_[27]), 
        .data_in_28(_59_addbus_[28]), 
        .data_in_29(_59_addbus_[29]), 
        .data_in_30(_59_addbus_[30]), 
        .data_in_31(_59_addbus_[31]), 
        .data_in_32(_59_addbus_[32]), 
        .data_in_33(_59_addbus_[33]), 
        .data_in_34(_59_addbus_[34]), 
        .data_in_35(_59_addbus_[35]), 
        .data_in_36(_59_addbus_[36]), 
        .data_in_37(_59_addbus_[37]), 
        .data_in_38(_59_addbus_[38]), 
        .data_in_39(_59_addbus_[39]), 
        .data_in_40(_59_addbus_[40]), 
        .data_in_41(_59_addbus_[41]), 
        .data_in_42(_59_addbus_[42]), 
        .data_in_43(_59_addbus_[43]), 
        .data_in_44(_59_addbus_[44]), 
        .data_in_45(_59_addbus_[45]), 
        .data_in_46(_59_addbus_[46]), 
        .data_in_47(_59_addbus_[47]), 
        .data_in_48(_59_addbus_[48]), 
        .data_in_49(_59_addbus_[49]), 
        .data_in_50(_59_addbus_[50]), 
        .data_in_51(_59_addbus_[51]), 
        .data_in_52(_59_addbus_[52]), 
        .data_in_53(_59_addbus_[53]), 
        .data_in_54(_59_addbus_[54]), 
        .data_in_55(_59_addbus_[55]), 
        .data_in_56(_59_addbus_[56]), 
        .data_in_57(_59_addbus_[57]), 
        .data_in_58(_59_addbus_[58]), 
        .data_in_59(_59_addbus_[59]), 
        .data_in_60(_59_addbus_[60]), 
        .data_in_61(_59_addbus_[61]), 
        .data_in_62(_59_addbus_[62]), 
        .data_in_63(_59_addbus_[63]) 
); 
wire [31:0] _60_addbus_[63:0];    
conv2d #("weight/max_polling/60_0.txt", 2, 0, 31, 31) conv2d_60_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_60_addbus_[0])
);
conv2d #("weight/max_polling/60_1.txt", 2, 0, 31, 31) conv2d_60_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_60_addbus_[1])
);
conv2d #("weight/max_polling/60_2.txt", 2, 0, 31, 31) conv2d_60_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_60_addbus_[2])
);
conv2d #("weight/max_polling/60_3.txt", 2, 0, 31, 31) conv2d_60_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_60_addbus_[3])
);
conv2d #("weight/max_polling/60_4.txt", 2, 0, 31, 31) conv2d_60_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_60_addbus_[4])
);
conv2d #("weight/max_polling/60_5.txt", 2, 0, 31, 31) conv2d_60_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_60_addbus_[5])
);
conv2d #("weight/max_polling/60_6.txt", 2, 0, 31, 31) conv2d_60_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_60_addbus_[6])
);
conv2d #("weight/max_polling/60_7.txt", 2, 0, 31, 31) conv2d_60_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_60_addbus_[7])
);
conv2d #("weight/max_polling/60_8.txt", 2, 0, 31, 31) conv2d_60_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_60_addbus_[8])
);
conv2d #("weight/max_polling/60_9.txt", 2, 0, 31, 31) conv2d_60_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_60_addbus_[9])
);
conv2d #("weight/max_polling/60_10.txt", 2, 0, 31, 31) conv2d_60_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_60_addbus_[10])
);
conv2d #("weight/max_polling/60_11.txt", 2, 0, 31, 31) conv2d_60_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_60_addbus_[11])
);
conv2d #("weight/max_polling/60_12.txt", 2, 0, 31, 31) conv2d_60_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_60_addbus_[12])
);
conv2d #("weight/max_polling/60_13.txt", 2, 0, 31, 31) conv2d_60_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_60_addbus_[13])
);
conv2d #("weight/max_polling/60_14.txt", 2, 0, 31, 31) conv2d_60_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_60_addbus_[14])
);
conv2d #("weight/max_polling/60_15.txt", 2, 0, 31, 31) conv2d_60_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_60_addbus_[15])
);
conv2d #("weight/max_polling/60_16.txt", 2, 0, 31, 31) conv2d_60_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_60_addbus_[16])
);
conv2d #("weight/max_polling/60_17.txt", 2, 0, 31, 31) conv2d_60_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_60_addbus_[17])
);
conv2d #("weight/max_polling/60_18.txt", 2, 0, 31, 31) conv2d_60_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_60_addbus_[18])
);
conv2d #("weight/max_polling/60_19.txt", 2, 0, 31, 31) conv2d_60_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_60_addbus_[19])
);
conv2d #("weight/max_polling/60_20.txt", 2, 0, 31, 31) conv2d_60_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_60_addbus_[20])
);
conv2d #("weight/max_polling/60_21.txt", 2, 0, 31, 31) conv2d_60_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_60_addbus_[21])
);
conv2d #("weight/max_polling/60_22.txt", 2, 0, 31, 31) conv2d_60_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_60_addbus_[22])
);
conv2d #("weight/max_polling/60_23.txt", 2, 0, 31, 31) conv2d_60_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_60_addbus_[23])
);
conv2d #("weight/max_polling/60_24.txt", 2, 0, 31, 31) conv2d_60_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_60_addbus_[24])
);
conv2d #("weight/max_polling/60_25.txt", 2, 0, 31, 31) conv2d_60_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_60_addbus_[25])
);
conv2d #("weight/max_polling/60_26.txt", 2, 0, 31, 31) conv2d_60_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_60_addbus_[26])
);
conv2d #("weight/max_polling/60_27.txt", 2, 0, 31, 31) conv2d_60_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_60_addbus_[27])
);
conv2d #("weight/max_polling/60_28.txt", 2, 0, 31, 31) conv2d_60_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_60_addbus_[28])
);
conv2d #("weight/max_polling/60_29.txt", 2, 0, 31, 31) conv2d_60_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_60_addbus_[29])
);
conv2d #("weight/max_polling/60_30.txt", 2, 0, 31, 31) conv2d_60_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_60_addbus_[30])
);
conv2d #("weight/max_polling/60_31.txt", 2, 0, 31, 31) conv2d_60_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_60_addbus_[31])
);
conv2d #("weight/max_polling/60_32.txt", 2, 0, 31, 31) conv2d_60_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_60_addbus_[32])
);
conv2d #("weight/max_polling/60_33.txt", 2, 0, 31, 31) conv2d_60_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_60_addbus_[33])
);
conv2d #("weight/max_polling/60_34.txt", 2, 0, 31, 31) conv2d_60_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_60_addbus_[34])
);
conv2d #("weight/max_polling/60_35.txt", 2, 0, 31, 31) conv2d_60_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_60_addbus_[35])
);
conv2d #("weight/max_polling/60_36.txt", 2, 0, 31, 31) conv2d_60_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_60_addbus_[36])
);
conv2d #("weight/max_polling/60_37.txt", 2, 0, 31, 31) conv2d_60_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_60_addbus_[37])
);
conv2d #("weight/max_polling/60_38.txt", 2, 0, 31, 31) conv2d_60_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_60_addbus_[38])
);
conv2d #("weight/max_polling/60_39.txt", 2, 0, 31, 31) conv2d_60_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_60_addbus_[39])
);
conv2d #("weight/max_polling/60_40.txt", 2, 0, 31, 31) conv2d_60_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_60_addbus_[40])
);
conv2d #("weight/max_polling/60_41.txt", 2, 0, 31, 31) conv2d_60_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_60_addbus_[41])
);
conv2d #("weight/max_polling/60_42.txt", 2, 0, 31, 31) conv2d_60_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_60_addbus_[42])
);
conv2d #("weight/max_polling/60_43.txt", 2, 0, 31, 31) conv2d_60_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_60_addbus_[43])
);
conv2d #("weight/max_polling/60_44.txt", 2, 0, 31, 31) conv2d_60_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_60_addbus_[44])
);
conv2d #("weight/max_polling/60_45.txt", 2, 0, 31, 31) conv2d_60_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_60_addbus_[45])
);
conv2d #("weight/max_polling/60_46.txt", 2, 0, 31, 31) conv2d_60_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_60_addbus_[46])
);
conv2d #("weight/max_polling/60_47.txt", 2, 0, 31, 31) conv2d_60_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_60_addbus_[47])
);
conv2d #("weight/max_polling/60_48.txt", 2, 0, 31, 31) conv2d_60_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_60_addbus_[48])
);
conv2d #("weight/max_polling/60_49.txt", 2, 0, 31, 31) conv2d_60_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_60_addbus_[49])
);
conv2d #("weight/max_polling/60_50.txt", 2, 0, 31, 31) conv2d_60_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_60_addbus_[50])
);
conv2d #("weight/max_polling/60_51.txt", 2, 0, 31, 31) conv2d_60_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_60_addbus_[51])
);
conv2d #("weight/max_polling/60_52.txt", 2, 0, 31, 31) conv2d_60_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_60_addbus_[52])
);
conv2d #("weight/max_polling/60_53.txt", 2, 0, 31, 31) conv2d_60_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_60_addbus_[53])
);
conv2d #("weight/max_polling/60_54.txt", 2, 0, 31, 31) conv2d_60_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_60_addbus_[54])
);
conv2d #("weight/max_polling/60_55.txt", 2, 0, 31, 31) conv2d_60_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_60_addbus_[55])
);
conv2d #("weight/max_polling/60_56.txt", 2, 0, 31, 31) conv2d_60_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_60_addbus_[56])
);
conv2d #("weight/max_polling/60_57.txt", 2, 0, 31, 31) conv2d_60_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_60_addbus_[57])
);
conv2d #("weight/max_polling/60_58.txt", 2, 0, 31, 31) conv2d_60_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_60_addbus_[58])
);
conv2d #("weight/max_polling/60_59.txt", 2, 0, 31, 31) conv2d_60_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_60_addbus_[59])
);
conv2d #("weight/max_polling/60_60.txt", 2, 0, 31, 31) conv2d_60_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_60_addbus_[60])
);
conv2d #("weight/max_polling/60_61.txt", 2, 0, 31, 31) conv2d_60_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_60_addbus_[61])
);
conv2d #("weight/max_polling/60_62.txt", 2, 0, 31, 31) conv2d_60_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_60_addbus_[62])
);
conv2d #("weight/max_polling/60_63.txt", 2, 0, 31, 31) conv2d_60_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_60_addbus_[63])
);
sum_64 #(15) sum_60( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[60]), 
        .data_in_0(_60_addbus_[0]), 
        .data_in_1(_60_addbus_[1]), 
        .data_in_2(_60_addbus_[2]), 
        .data_in_3(_60_addbus_[3]), 
        .data_in_4(_60_addbus_[4]), 
        .data_in_5(_60_addbus_[5]), 
        .data_in_6(_60_addbus_[6]), 
        .data_in_7(_60_addbus_[7]), 
        .data_in_8(_60_addbus_[8]), 
        .data_in_9(_60_addbus_[9]), 
        .data_in_10(_60_addbus_[10]), 
        .data_in_11(_60_addbus_[11]), 
        .data_in_12(_60_addbus_[12]), 
        .data_in_13(_60_addbus_[13]), 
        .data_in_14(_60_addbus_[14]), 
        .data_in_15(_60_addbus_[15]), 
        .data_in_16(_60_addbus_[16]), 
        .data_in_17(_60_addbus_[17]), 
        .data_in_18(_60_addbus_[18]), 
        .data_in_19(_60_addbus_[19]), 
        .data_in_20(_60_addbus_[20]), 
        .data_in_21(_60_addbus_[21]), 
        .data_in_22(_60_addbus_[22]), 
        .data_in_23(_60_addbus_[23]), 
        .data_in_24(_60_addbus_[24]), 
        .data_in_25(_60_addbus_[25]), 
        .data_in_26(_60_addbus_[26]), 
        .data_in_27(_60_addbus_[27]), 
        .data_in_28(_60_addbus_[28]), 
        .data_in_29(_60_addbus_[29]), 
        .data_in_30(_60_addbus_[30]), 
        .data_in_31(_60_addbus_[31]), 
        .data_in_32(_60_addbus_[32]), 
        .data_in_33(_60_addbus_[33]), 
        .data_in_34(_60_addbus_[34]), 
        .data_in_35(_60_addbus_[35]), 
        .data_in_36(_60_addbus_[36]), 
        .data_in_37(_60_addbus_[37]), 
        .data_in_38(_60_addbus_[38]), 
        .data_in_39(_60_addbus_[39]), 
        .data_in_40(_60_addbus_[40]), 
        .data_in_41(_60_addbus_[41]), 
        .data_in_42(_60_addbus_[42]), 
        .data_in_43(_60_addbus_[43]), 
        .data_in_44(_60_addbus_[44]), 
        .data_in_45(_60_addbus_[45]), 
        .data_in_46(_60_addbus_[46]), 
        .data_in_47(_60_addbus_[47]), 
        .data_in_48(_60_addbus_[48]), 
        .data_in_49(_60_addbus_[49]), 
        .data_in_50(_60_addbus_[50]), 
        .data_in_51(_60_addbus_[51]), 
        .data_in_52(_60_addbus_[52]), 
        .data_in_53(_60_addbus_[53]), 
        .data_in_54(_60_addbus_[54]), 
        .data_in_55(_60_addbus_[55]), 
        .data_in_56(_60_addbus_[56]), 
        .data_in_57(_60_addbus_[57]), 
        .data_in_58(_60_addbus_[58]), 
        .data_in_59(_60_addbus_[59]), 
        .data_in_60(_60_addbus_[60]), 
        .data_in_61(_60_addbus_[61]), 
        .data_in_62(_60_addbus_[62]), 
        .data_in_63(_60_addbus_[63]) 
); 
wire [31:0] _61_addbus_[63:0];    
conv2d #("weight/max_polling/61_0.txt", 2, 0, 31, 31) conv2d_61_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_61_addbus_[0])
);
conv2d #("weight/max_polling/61_1.txt", 2, 0, 31, 31) conv2d_61_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_61_addbus_[1])
);
conv2d #("weight/max_polling/61_2.txt", 2, 0, 31, 31) conv2d_61_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_61_addbus_[2])
);
conv2d #("weight/max_polling/61_3.txt", 2, 0, 31, 31) conv2d_61_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_61_addbus_[3])
);
conv2d #("weight/max_polling/61_4.txt", 2, 0, 31, 31) conv2d_61_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_61_addbus_[4])
);
conv2d #("weight/max_polling/61_5.txt", 2, 0, 31, 31) conv2d_61_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_61_addbus_[5])
);
conv2d #("weight/max_polling/61_6.txt", 2, 0, 31, 31) conv2d_61_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_61_addbus_[6])
);
conv2d #("weight/max_polling/61_7.txt", 2, 0, 31, 31) conv2d_61_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_61_addbus_[7])
);
conv2d #("weight/max_polling/61_8.txt", 2, 0, 31, 31) conv2d_61_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_61_addbus_[8])
);
conv2d #("weight/max_polling/61_9.txt", 2, 0, 31, 31) conv2d_61_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_61_addbus_[9])
);
conv2d #("weight/max_polling/61_10.txt", 2, 0, 31, 31) conv2d_61_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_61_addbus_[10])
);
conv2d #("weight/max_polling/61_11.txt", 2, 0, 31, 31) conv2d_61_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_61_addbus_[11])
);
conv2d #("weight/max_polling/61_12.txt", 2, 0, 31, 31) conv2d_61_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_61_addbus_[12])
);
conv2d #("weight/max_polling/61_13.txt", 2, 0, 31, 31) conv2d_61_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_61_addbus_[13])
);
conv2d #("weight/max_polling/61_14.txt", 2, 0, 31, 31) conv2d_61_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_61_addbus_[14])
);
conv2d #("weight/max_polling/61_15.txt", 2, 0, 31, 31) conv2d_61_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_61_addbus_[15])
);
conv2d #("weight/max_polling/61_16.txt", 2, 0, 31, 31) conv2d_61_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_61_addbus_[16])
);
conv2d #("weight/max_polling/61_17.txt", 2, 0, 31, 31) conv2d_61_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_61_addbus_[17])
);
conv2d #("weight/max_polling/61_18.txt", 2, 0, 31, 31) conv2d_61_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_61_addbus_[18])
);
conv2d #("weight/max_polling/61_19.txt", 2, 0, 31, 31) conv2d_61_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_61_addbus_[19])
);
conv2d #("weight/max_polling/61_20.txt", 2, 0, 31, 31) conv2d_61_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_61_addbus_[20])
);
conv2d #("weight/max_polling/61_21.txt", 2, 0, 31, 31) conv2d_61_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_61_addbus_[21])
);
conv2d #("weight/max_polling/61_22.txt", 2, 0, 31, 31) conv2d_61_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_61_addbus_[22])
);
conv2d #("weight/max_polling/61_23.txt", 2, 0, 31, 31) conv2d_61_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_61_addbus_[23])
);
conv2d #("weight/max_polling/61_24.txt", 2, 0, 31, 31) conv2d_61_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_61_addbus_[24])
);
conv2d #("weight/max_polling/61_25.txt", 2, 0, 31, 31) conv2d_61_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_61_addbus_[25])
);
conv2d #("weight/max_polling/61_26.txt", 2, 0, 31, 31) conv2d_61_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_61_addbus_[26])
);
conv2d #("weight/max_polling/61_27.txt", 2, 0, 31, 31) conv2d_61_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_61_addbus_[27])
);
conv2d #("weight/max_polling/61_28.txt", 2, 0, 31, 31) conv2d_61_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_61_addbus_[28])
);
conv2d #("weight/max_polling/61_29.txt", 2, 0, 31, 31) conv2d_61_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_61_addbus_[29])
);
conv2d #("weight/max_polling/61_30.txt", 2, 0, 31, 31) conv2d_61_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_61_addbus_[30])
);
conv2d #("weight/max_polling/61_31.txt", 2, 0, 31, 31) conv2d_61_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_61_addbus_[31])
);
conv2d #("weight/max_polling/61_32.txt", 2, 0, 31, 31) conv2d_61_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_61_addbus_[32])
);
conv2d #("weight/max_polling/61_33.txt", 2, 0, 31, 31) conv2d_61_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_61_addbus_[33])
);
conv2d #("weight/max_polling/61_34.txt", 2, 0, 31, 31) conv2d_61_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_61_addbus_[34])
);
conv2d #("weight/max_polling/61_35.txt", 2, 0, 31, 31) conv2d_61_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_61_addbus_[35])
);
conv2d #("weight/max_polling/61_36.txt", 2, 0, 31, 31) conv2d_61_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_61_addbus_[36])
);
conv2d #("weight/max_polling/61_37.txt", 2, 0, 31, 31) conv2d_61_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_61_addbus_[37])
);
conv2d #("weight/max_polling/61_38.txt", 2, 0, 31, 31) conv2d_61_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_61_addbus_[38])
);
conv2d #("weight/max_polling/61_39.txt", 2, 0, 31, 31) conv2d_61_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_61_addbus_[39])
);
conv2d #("weight/max_polling/61_40.txt", 2, 0, 31, 31) conv2d_61_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_61_addbus_[40])
);
conv2d #("weight/max_polling/61_41.txt", 2, 0, 31, 31) conv2d_61_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_61_addbus_[41])
);
conv2d #("weight/max_polling/61_42.txt", 2, 0, 31, 31) conv2d_61_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_61_addbus_[42])
);
conv2d #("weight/max_polling/61_43.txt", 2, 0, 31, 31) conv2d_61_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_61_addbus_[43])
);
conv2d #("weight/max_polling/61_44.txt", 2, 0, 31, 31) conv2d_61_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_61_addbus_[44])
);
conv2d #("weight/max_polling/61_45.txt", 2, 0, 31, 31) conv2d_61_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_61_addbus_[45])
);
conv2d #("weight/max_polling/61_46.txt", 2, 0, 31, 31) conv2d_61_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_61_addbus_[46])
);
conv2d #("weight/max_polling/61_47.txt", 2, 0, 31, 31) conv2d_61_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_61_addbus_[47])
);
conv2d #("weight/max_polling/61_48.txt", 2, 0, 31, 31) conv2d_61_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_61_addbus_[48])
);
conv2d #("weight/max_polling/61_49.txt", 2, 0, 31, 31) conv2d_61_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_61_addbus_[49])
);
conv2d #("weight/max_polling/61_50.txt", 2, 0, 31, 31) conv2d_61_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_61_addbus_[50])
);
conv2d #("weight/max_polling/61_51.txt", 2, 0, 31, 31) conv2d_61_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_61_addbus_[51])
);
conv2d #("weight/max_polling/61_52.txt", 2, 0, 31, 31) conv2d_61_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_61_addbus_[52])
);
conv2d #("weight/max_polling/61_53.txt", 2, 0, 31, 31) conv2d_61_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_61_addbus_[53])
);
conv2d #("weight/max_polling/61_54.txt", 2, 0, 31, 31) conv2d_61_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_61_addbus_[54])
);
conv2d #("weight/max_polling/61_55.txt", 2, 0, 31, 31) conv2d_61_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_61_addbus_[55])
);
conv2d #("weight/max_polling/61_56.txt", 2, 0, 31, 31) conv2d_61_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_61_addbus_[56])
);
conv2d #("weight/max_polling/61_57.txt", 2, 0, 31, 31) conv2d_61_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_61_addbus_[57])
);
conv2d #("weight/max_polling/61_58.txt", 2, 0, 31, 31) conv2d_61_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_61_addbus_[58])
);
conv2d #("weight/max_polling/61_59.txt", 2, 0, 31, 31) conv2d_61_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_61_addbus_[59])
);
conv2d #("weight/max_polling/61_60.txt", 2, 0, 31, 31) conv2d_61_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_61_addbus_[60])
);
conv2d #("weight/max_polling/61_61.txt", 2, 0, 31, 31) conv2d_61_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_61_addbus_[61])
);
conv2d #("weight/max_polling/61_62.txt", 2, 0, 31, 31) conv2d_61_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_61_addbus_[62])
);
conv2d #("weight/max_polling/61_63.txt", 2, 0, 31, 31) conv2d_61_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_61_addbus_[63])
);
sum_64 #(15) sum_61( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[61]), 
        .data_in_0(_61_addbus_[0]), 
        .data_in_1(_61_addbus_[1]), 
        .data_in_2(_61_addbus_[2]), 
        .data_in_3(_61_addbus_[3]), 
        .data_in_4(_61_addbus_[4]), 
        .data_in_5(_61_addbus_[5]), 
        .data_in_6(_61_addbus_[6]), 
        .data_in_7(_61_addbus_[7]), 
        .data_in_8(_61_addbus_[8]), 
        .data_in_9(_61_addbus_[9]), 
        .data_in_10(_61_addbus_[10]), 
        .data_in_11(_61_addbus_[11]), 
        .data_in_12(_61_addbus_[12]), 
        .data_in_13(_61_addbus_[13]), 
        .data_in_14(_61_addbus_[14]), 
        .data_in_15(_61_addbus_[15]), 
        .data_in_16(_61_addbus_[16]), 
        .data_in_17(_61_addbus_[17]), 
        .data_in_18(_61_addbus_[18]), 
        .data_in_19(_61_addbus_[19]), 
        .data_in_20(_61_addbus_[20]), 
        .data_in_21(_61_addbus_[21]), 
        .data_in_22(_61_addbus_[22]), 
        .data_in_23(_61_addbus_[23]), 
        .data_in_24(_61_addbus_[24]), 
        .data_in_25(_61_addbus_[25]), 
        .data_in_26(_61_addbus_[26]), 
        .data_in_27(_61_addbus_[27]), 
        .data_in_28(_61_addbus_[28]), 
        .data_in_29(_61_addbus_[29]), 
        .data_in_30(_61_addbus_[30]), 
        .data_in_31(_61_addbus_[31]), 
        .data_in_32(_61_addbus_[32]), 
        .data_in_33(_61_addbus_[33]), 
        .data_in_34(_61_addbus_[34]), 
        .data_in_35(_61_addbus_[35]), 
        .data_in_36(_61_addbus_[36]), 
        .data_in_37(_61_addbus_[37]), 
        .data_in_38(_61_addbus_[38]), 
        .data_in_39(_61_addbus_[39]), 
        .data_in_40(_61_addbus_[40]), 
        .data_in_41(_61_addbus_[41]), 
        .data_in_42(_61_addbus_[42]), 
        .data_in_43(_61_addbus_[43]), 
        .data_in_44(_61_addbus_[44]), 
        .data_in_45(_61_addbus_[45]), 
        .data_in_46(_61_addbus_[46]), 
        .data_in_47(_61_addbus_[47]), 
        .data_in_48(_61_addbus_[48]), 
        .data_in_49(_61_addbus_[49]), 
        .data_in_50(_61_addbus_[50]), 
        .data_in_51(_61_addbus_[51]), 
        .data_in_52(_61_addbus_[52]), 
        .data_in_53(_61_addbus_[53]), 
        .data_in_54(_61_addbus_[54]), 
        .data_in_55(_61_addbus_[55]), 
        .data_in_56(_61_addbus_[56]), 
        .data_in_57(_61_addbus_[57]), 
        .data_in_58(_61_addbus_[58]), 
        .data_in_59(_61_addbus_[59]), 
        .data_in_60(_61_addbus_[60]), 
        .data_in_61(_61_addbus_[61]), 
        .data_in_62(_61_addbus_[62]), 
        .data_in_63(_61_addbus_[63]) 
); 
wire [31:0] _62_addbus_[63:0];    
conv2d #("weight/max_polling/62_0.txt", 2, 0, 31, 31) conv2d_62_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_62_addbus_[0])
);
conv2d #("weight/max_polling/62_1.txt", 2, 0, 31, 31) conv2d_62_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_62_addbus_[1])
);
conv2d #("weight/max_polling/62_2.txt", 2, 0, 31, 31) conv2d_62_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_62_addbus_[2])
);
conv2d #("weight/max_polling/62_3.txt", 2, 0, 31, 31) conv2d_62_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_62_addbus_[3])
);
conv2d #("weight/max_polling/62_4.txt", 2, 0, 31, 31) conv2d_62_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_62_addbus_[4])
);
conv2d #("weight/max_polling/62_5.txt", 2, 0, 31, 31) conv2d_62_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_62_addbus_[5])
);
conv2d #("weight/max_polling/62_6.txt", 2, 0, 31, 31) conv2d_62_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_62_addbus_[6])
);
conv2d #("weight/max_polling/62_7.txt", 2, 0, 31, 31) conv2d_62_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_62_addbus_[7])
);
conv2d #("weight/max_polling/62_8.txt", 2, 0, 31, 31) conv2d_62_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_62_addbus_[8])
);
conv2d #("weight/max_polling/62_9.txt", 2, 0, 31, 31) conv2d_62_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_62_addbus_[9])
);
conv2d #("weight/max_polling/62_10.txt", 2, 0, 31, 31) conv2d_62_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_62_addbus_[10])
);
conv2d #("weight/max_polling/62_11.txt", 2, 0, 31, 31) conv2d_62_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_62_addbus_[11])
);
conv2d #("weight/max_polling/62_12.txt", 2, 0, 31, 31) conv2d_62_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_62_addbus_[12])
);
conv2d #("weight/max_polling/62_13.txt", 2, 0, 31, 31) conv2d_62_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_62_addbus_[13])
);
conv2d #("weight/max_polling/62_14.txt", 2, 0, 31, 31) conv2d_62_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_62_addbus_[14])
);
conv2d #("weight/max_polling/62_15.txt", 2, 0, 31, 31) conv2d_62_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_62_addbus_[15])
);
conv2d #("weight/max_polling/62_16.txt", 2, 0, 31, 31) conv2d_62_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_62_addbus_[16])
);
conv2d #("weight/max_polling/62_17.txt", 2, 0, 31, 31) conv2d_62_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_62_addbus_[17])
);
conv2d #("weight/max_polling/62_18.txt", 2, 0, 31, 31) conv2d_62_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_62_addbus_[18])
);
conv2d #("weight/max_polling/62_19.txt", 2, 0, 31, 31) conv2d_62_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_62_addbus_[19])
);
conv2d #("weight/max_polling/62_20.txt", 2, 0, 31, 31) conv2d_62_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_62_addbus_[20])
);
conv2d #("weight/max_polling/62_21.txt", 2, 0, 31, 31) conv2d_62_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_62_addbus_[21])
);
conv2d #("weight/max_polling/62_22.txt", 2, 0, 31, 31) conv2d_62_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_62_addbus_[22])
);
conv2d #("weight/max_polling/62_23.txt", 2, 0, 31, 31) conv2d_62_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_62_addbus_[23])
);
conv2d #("weight/max_polling/62_24.txt", 2, 0, 31, 31) conv2d_62_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_62_addbus_[24])
);
conv2d #("weight/max_polling/62_25.txt", 2, 0, 31, 31) conv2d_62_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_62_addbus_[25])
);
conv2d #("weight/max_polling/62_26.txt", 2, 0, 31, 31) conv2d_62_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_62_addbus_[26])
);
conv2d #("weight/max_polling/62_27.txt", 2, 0, 31, 31) conv2d_62_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_62_addbus_[27])
);
conv2d #("weight/max_polling/62_28.txt", 2, 0, 31, 31) conv2d_62_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_62_addbus_[28])
);
conv2d #("weight/max_polling/62_29.txt", 2, 0, 31, 31) conv2d_62_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_62_addbus_[29])
);
conv2d #("weight/max_polling/62_30.txt", 2, 0, 31, 31) conv2d_62_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_62_addbus_[30])
);
conv2d #("weight/max_polling/62_31.txt", 2, 0, 31, 31) conv2d_62_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_62_addbus_[31])
);
conv2d #("weight/max_polling/62_32.txt", 2, 0, 31, 31) conv2d_62_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_62_addbus_[32])
);
conv2d #("weight/max_polling/62_33.txt", 2, 0, 31, 31) conv2d_62_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_62_addbus_[33])
);
conv2d #("weight/max_polling/62_34.txt", 2, 0, 31, 31) conv2d_62_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_62_addbus_[34])
);
conv2d #("weight/max_polling/62_35.txt", 2, 0, 31, 31) conv2d_62_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_62_addbus_[35])
);
conv2d #("weight/max_polling/62_36.txt", 2, 0, 31, 31) conv2d_62_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_62_addbus_[36])
);
conv2d #("weight/max_polling/62_37.txt", 2, 0, 31, 31) conv2d_62_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_62_addbus_[37])
);
conv2d #("weight/max_polling/62_38.txt", 2, 0, 31, 31) conv2d_62_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_62_addbus_[38])
);
conv2d #("weight/max_polling/62_39.txt", 2, 0, 31, 31) conv2d_62_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_62_addbus_[39])
);
conv2d #("weight/max_polling/62_40.txt", 2, 0, 31, 31) conv2d_62_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_62_addbus_[40])
);
conv2d #("weight/max_polling/62_41.txt", 2, 0, 31, 31) conv2d_62_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_62_addbus_[41])
);
conv2d #("weight/max_polling/62_42.txt", 2, 0, 31, 31) conv2d_62_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_62_addbus_[42])
);
conv2d #("weight/max_polling/62_43.txt", 2, 0, 31, 31) conv2d_62_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_62_addbus_[43])
);
conv2d #("weight/max_polling/62_44.txt", 2, 0, 31, 31) conv2d_62_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_62_addbus_[44])
);
conv2d #("weight/max_polling/62_45.txt", 2, 0, 31, 31) conv2d_62_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_62_addbus_[45])
);
conv2d #("weight/max_polling/62_46.txt", 2, 0, 31, 31) conv2d_62_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_62_addbus_[46])
);
conv2d #("weight/max_polling/62_47.txt", 2, 0, 31, 31) conv2d_62_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_62_addbus_[47])
);
conv2d #("weight/max_polling/62_48.txt", 2, 0, 31, 31) conv2d_62_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_62_addbus_[48])
);
conv2d #("weight/max_polling/62_49.txt", 2, 0, 31, 31) conv2d_62_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_62_addbus_[49])
);
conv2d #("weight/max_polling/62_50.txt", 2, 0, 31, 31) conv2d_62_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_62_addbus_[50])
);
conv2d #("weight/max_polling/62_51.txt", 2, 0, 31, 31) conv2d_62_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_62_addbus_[51])
);
conv2d #("weight/max_polling/62_52.txt", 2, 0, 31, 31) conv2d_62_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_62_addbus_[52])
);
conv2d #("weight/max_polling/62_53.txt", 2, 0, 31, 31) conv2d_62_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_62_addbus_[53])
);
conv2d #("weight/max_polling/62_54.txt", 2, 0, 31, 31) conv2d_62_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_62_addbus_[54])
);
conv2d #("weight/max_polling/62_55.txt", 2, 0, 31, 31) conv2d_62_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_62_addbus_[55])
);
conv2d #("weight/max_polling/62_56.txt", 2, 0, 31, 31) conv2d_62_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_62_addbus_[56])
);
conv2d #("weight/max_polling/62_57.txt", 2, 0, 31, 31) conv2d_62_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_62_addbus_[57])
);
conv2d #("weight/max_polling/62_58.txt", 2, 0, 31, 31) conv2d_62_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_62_addbus_[58])
);
conv2d #("weight/max_polling/62_59.txt", 2, 0, 31, 31) conv2d_62_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_62_addbus_[59])
);
conv2d #("weight/max_polling/62_60.txt", 2, 0, 31, 31) conv2d_62_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_62_addbus_[60])
);
conv2d #("weight/max_polling/62_61.txt", 2, 0, 31, 31) conv2d_62_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_62_addbus_[61])
);
conv2d #("weight/max_polling/62_62.txt", 2, 0, 31, 31) conv2d_62_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_62_addbus_[62])
);
conv2d #("weight/max_polling/62_63.txt", 2, 0, 31, 31) conv2d_62_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_62_addbus_[63])
);
sum_64 #(15) sum_62( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[62]), 
        .data_in_0(_62_addbus_[0]), 
        .data_in_1(_62_addbus_[1]), 
        .data_in_2(_62_addbus_[2]), 
        .data_in_3(_62_addbus_[3]), 
        .data_in_4(_62_addbus_[4]), 
        .data_in_5(_62_addbus_[5]), 
        .data_in_6(_62_addbus_[6]), 
        .data_in_7(_62_addbus_[7]), 
        .data_in_8(_62_addbus_[8]), 
        .data_in_9(_62_addbus_[9]), 
        .data_in_10(_62_addbus_[10]), 
        .data_in_11(_62_addbus_[11]), 
        .data_in_12(_62_addbus_[12]), 
        .data_in_13(_62_addbus_[13]), 
        .data_in_14(_62_addbus_[14]), 
        .data_in_15(_62_addbus_[15]), 
        .data_in_16(_62_addbus_[16]), 
        .data_in_17(_62_addbus_[17]), 
        .data_in_18(_62_addbus_[18]), 
        .data_in_19(_62_addbus_[19]), 
        .data_in_20(_62_addbus_[20]), 
        .data_in_21(_62_addbus_[21]), 
        .data_in_22(_62_addbus_[22]), 
        .data_in_23(_62_addbus_[23]), 
        .data_in_24(_62_addbus_[24]), 
        .data_in_25(_62_addbus_[25]), 
        .data_in_26(_62_addbus_[26]), 
        .data_in_27(_62_addbus_[27]), 
        .data_in_28(_62_addbus_[28]), 
        .data_in_29(_62_addbus_[29]), 
        .data_in_30(_62_addbus_[30]), 
        .data_in_31(_62_addbus_[31]), 
        .data_in_32(_62_addbus_[32]), 
        .data_in_33(_62_addbus_[33]), 
        .data_in_34(_62_addbus_[34]), 
        .data_in_35(_62_addbus_[35]), 
        .data_in_36(_62_addbus_[36]), 
        .data_in_37(_62_addbus_[37]), 
        .data_in_38(_62_addbus_[38]), 
        .data_in_39(_62_addbus_[39]), 
        .data_in_40(_62_addbus_[40]), 
        .data_in_41(_62_addbus_[41]), 
        .data_in_42(_62_addbus_[42]), 
        .data_in_43(_62_addbus_[43]), 
        .data_in_44(_62_addbus_[44]), 
        .data_in_45(_62_addbus_[45]), 
        .data_in_46(_62_addbus_[46]), 
        .data_in_47(_62_addbus_[47]), 
        .data_in_48(_62_addbus_[48]), 
        .data_in_49(_62_addbus_[49]), 
        .data_in_50(_62_addbus_[50]), 
        .data_in_51(_62_addbus_[51]), 
        .data_in_52(_62_addbus_[52]), 
        .data_in_53(_62_addbus_[53]), 
        .data_in_54(_62_addbus_[54]), 
        .data_in_55(_62_addbus_[55]), 
        .data_in_56(_62_addbus_[56]), 
        .data_in_57(_62_addbus_[57]), 
        .data_in_58(_62_addbus_[58]), 
        .data_in_59(_62_addbus_[59]), 
        .data_in_60(_62_addbus_[60]), 
        .data_in_61(_62_addbus_[61]), 
        .data_in_62(_62_addbus_[62]), 
        .data_in_63(_62_addbus_[63]) 
); 
wire [31:0] _63_addbus_[63:0];    
conv2d #("weight/max_polling/63_0.txt", 2, 0, 31, 31) conv2d_63_0(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[0]),
	.d_out(_63_addbus_[0])
);
conv2d #("weight/max_polling/63_1.txt", 2, 0, 31, 31) conv2d_63_1(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[1]),
	.d_out(_63_addbus_[1])
);
conv2d #("weight/max_polling/63_2.txt", 2, 0, 31, 31) conv2d_63_2(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[2]),
	.d_out(_63_addbus_[2])
);
conv2d #("weight/max_polling/63_3.txt", 2, 0, 31, 31) conv2d_63_3(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[3]),
	.d_out(_63_addbus_[3])
);
conv2d #("weight/max_polling/63_4.txt", 2, 0, 31, 31) conv2d_63_4(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[4]),
	.d_out(_63_addbus_[4])
);
conv2d #("weight/max_polling/63_5.txt", 2, 0, 31, 31) conv2d_63_5(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[5]),
	.d_out(_63_addbus_[5])
);
conv2d #("weight/max_polling/63_6.txt", 2, 0, 31, 31) conv2d_63_6(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[6]),
	.d_out(_63_addbus_[6])
);
conv2d #("weight/max_polling/63_7.txt", 2, 0, 31, 31) conv2d_63_7(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[7]),
	.d_out(_63_addbus_[7])
);
conv2d #("weight/max_polling/63_8.txt", 2, 0, 31, 31) conv2d_63_8(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[8]),
	.d_out(_63_addbus_[8])
);
conv2d #("weight/max_polling/63_9.txt", 2, 0, 31, 31) conv2d_63_9(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[9]),
	.d_out(_63_addbus_[9])
);
conv2d #("weight/max_polling/63_10.txt", 2, 0, 31, 31) conv2d_63_10(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[10]),
	.d_out(_63_addbus_[10])
);
conv2d #("weight/max_polling/63_11.txt", 2, 0, 31, 31) conv2d_63_11(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[11]),
	.d_out(_63_addbus_[11])
);
conv2d #("weight/max_polling/63_12.txt", 2, 0, 31, 31) conv2d_63_12(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[12]),
	.d_out(_63_addbus_[12])
);
conv2d #("weight/max_polling/63_13.txt", 2, 0, 31, 31) conv2d_63_13(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[13]),
	.d_out(_63_addbus_[13])
);
conv2d #("weight/max_polling/63_14.txt", 2, 0, 31, 31) conv2d_63_14(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[14]),
	.d_out(_63_addbus_[14])
);
conv2d #("weight/max_polling/63_15.txt", 2, 0, 31, 31) conv2d_63_15(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[15]),
	.d_out(_63_addbus_[15])
);
conv2d #("weight/max_polling/63_16.txt", 2, 0, 31, 31) conv2d_63_16(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[16]),
	.d_out(_63_addbus_[16])
);
conv2d #("weight/max_polling/63_17.txt", 2, 0, 31, 31) conv2d_63_17(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[17]),
	.d_out(_63_addbus_[17])
);
conv2d #("weight/max_polling/63_18.txt", 2, 0, 31, 31) conv2d_63_18(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[18]),
	.d_out(_63_addbus_[18])
);
conv2d #("weight/max_polling/63_19.txt", 2, 0, 31, 31) conv2d_63_19(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[19]),
	.d_out(_63_addbus_[19])
);
conv2d #("weight/max_polling/63_20.txt", 2, 0, 31, 31) conv2d_63_20(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[20]),
	.d_out(_63_addbus_[20])
);
conv2d #("weight/max_polling/63_21.txt", 2, 0, 31, 31) conv2d_63_21(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[21]),
	.d_out(_63_addbus_[21])
);
conv2d #("weight/max_polling/63_22.txt", 2, 0, 31, 31) conv2d_63_22(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[22]),
	.d_out(_63_addbus_[22])
);
conv2d #("weight/max_polling/63_23.txt", 2, 0, 31, 31) conv2d_63_23(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[23]),
	.d_out(_63_addbus_[23])
);
conv2d #("weight/max_polling/63_24.txt", 2, 0, 31, 31) conv2d_63_24(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[24]),
	.d_out(_63_addbus_[24])
);
conv2d #("weight/max_polling/63_25.txt", 2, 0, 31, 31) conv2d_63_25(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[25]),
	.d_out(_63_addbus_[25])
);
conv2d #("weight/max_polling/63_26.txt", 2, 0, 31, 31) conv2d_63_26(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[26]),
	.d_out(_63_addbus_[26])
);
conv2d #("weight/max_polling/63_27.txt", 2, 0, 31, 31) conv2d_63_27(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[27]),
	.d_out(_63_addbus_[27])
);
conv2d #("weight/max_polling/63_28.txt", 2, 0, 31, 31) conv2d_63_28(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[28]),
	.d_out(_63_addbus_[28])
);
conv2d #("weight/max_polling/63_29.txt", 2, 0, 31, 31) conv2d_63_29(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[29]),
	.d_out(_63_addbus_[29])
);
conv2d #("weight/max_polling/63_30.txt", 2, 0, 31, 31) conv2d_63_30(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[30]),
	.d_out(_63_addbus_[30])
);
conv2d #("weight/max_polling/63_31.txt", 2, 0, 31, 31) conv2d_63_31(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[31]),
	.d_out(_63_addbus_[31])
);
conv2d #("weight/max_polling/63_32.txt", 2, 0, 31, 31) conv2d_63_32(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[32]),
	.d_out(_63_addbus_[32])
);
conv2d #("weight/max_polling/63_33.txt", 2, 0, 31, 31) conv2d_63_33(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[33]),
	.d_out(_63_addbus_[33])
);
conv2d #("weight/max_polling/63_34.txt", 2, 0, 31, 31) conv2d_63_34(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[34]),
	.d_out(_63_addbus_[34])
);
conv2d #("weight/max_polling/63_35.txt", 2, 0, 31, 31) conv2d_63_35(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[35]),
	.d_out(_63_addbus_[35])
);
conv2d #("weight/max_polling/63_36.txt", 2, 0, 31, 31) conv2d_63_36(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[36]),
	.d_out(_63_addbus_[36])
);
conv2d #("weight/max_polling/63_37.txt", 2, 0, 31, 31) conv2d_63_37(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[37]),
	.d_out(_63_addbus_[37])
);
conv2d #("weight/max_polling/63_38.txt", 2, 0, 31, 31) conv2d_63_38(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[38]),
	.d_out(_63_addbus_[38])
);
conv2d #("weight/max_polling/63_39.txt", 2, 0, 31, 31) conv2d_63_39(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[39]),
	.d_out(_63_addbus_[39])
);
conv2d #("weight/max_polling/63_40.txt", 2, 0, 31, 31) conv2d_63_40(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[40]),
	.d_out(_63_addbus_[40])
);
conv2d #("weight/max_polling/63_41.txt", 2, 0, 31, 31) conv2d_63_41(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[41]),
	.d_out(_63_addbus_[41])
);
conv2d #("weight/max_polling/63_42.txt", 2, 0, 31, 31) conv2d_63_42(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[42]),
	.d_out(_63_addbus_[42])
);
conv2d #("weight/max_polling/63_43.txt", 2, 0, 31, 31) conv2d_63_43(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[43]),
	.d_out(_63_addbus_[43])
);
conv2d #("weight/max_polling/63_44.txt", 2, 0, 31, 31) conv2d_63_44(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[44]),
	.d_out(_63_addbus_[44])
);
conv2d #("weight/max_polling/63_45.txt", 2, 0, 31, 31) conv2d_63_45(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[45]),
	.d_out(_63_addbus_[45])
);
conv2d #("weight/max_polling/63_46.txt", 2, 0, 31, 31) conv2d_63_46(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[46]),
	.d_out(_63_addbus_[46])
);
conv2d #("weight/max_polling/63_47.txt", 2, 0, 31, 31) conv2d_63_47(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[47]),
	.d_out(_63_addbus_[47])
);
conv2d #("weight/max_polling/63_48.txt", 2, 0, 31, 31) conv2d_63_48(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[48]),
	.d_out(_63_addbus_[48])
);
conv2d #("weight/max_polling/63_49.txt", 2, 0, 31, 31) conv2d_63_49(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[49]),
	.d_out(_63_addbus_[49])
);
conv2d #("weight/max_polling/63_50.txt", 2, 0, 31, 31) conv2d_63_50(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[50]),
	.d_out(_63_addbus_[50])
);
conv2d #("weight/max_polling/63_51.txt", 2, 0, 31, 31) conv2d_63_51(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[51]),
	.d_out(_63_addbus_[51])
);
conv2d #("weight/max_polling/63_52.txt", 2, 0, 31, 31) conv2d_63_52(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[52]),
	.d_out(_63_addbus_[52])
);
conv2d #("weight/max_polling/63_53.txt", 2, 0, 31, 31) conv2d_63_53(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[53]),
	.d_out(_63_addbus_[53])
);
conv2d #("weight/max_polling/63_54.txt", 2, 0, 31, 31) conv2d_63_54(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[54]),
	.d_out(_63_addbus_[54])
);
conv2d #("weight/max_polling/63_55.txt", 2, 0, 31, 31) conv2d_63_55(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[55]),
	.d_out(_63_addbus_[55])
);
conv2d #("weight/max_polling/63_56.txt", 2, 0, 31, 31) conv2d_63_56(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[56]),
	.d_out(_63_addbus_[56])
);
conv2d #("weight/max_polling/63_57.txt", 2, 0, 31, 31) conv2d_63_57(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[57]),
	.d_out(_63_addbus_[57])
);
conv2d #("weight/max_polling/63_58.txt", 2, 0, 31, 31) conv2d_63_58(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[58]),
	.d_out(_63_addbus_[58])
);
conv2d #("weight/max_polling/63_59.txt", 2, 0, 31, 31) conv2d_63_59(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[59]),
	.d_out(_63_addbus_[59])
);
conv2d #("weight/max_polling/63_60.txt", 2, 0, 31, 31) conv2d_63_60(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[60]),
	.d_out(_63_addbus_[60])
);
conv2d #("weight/max_polling/63_61.txt", 2, 0, 31, 31) conv2d_63_61(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[61]),
	.d_out(_63_addbus_[61])
);
conv2d #("weight/max_polling/63_62.txt", 2, 0, 31, 31) conv2d_63_62(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[62]),
	.d_out(_63_addbus_[62])
);
conv2d #("weight/max_polling/63_63.txt", 2, 0, 31, 31) conv2d_63_63(
	.clk(clk),
	.rst(rst),
	.input_valid(input_valid),
	.load(load),
	.load_success(),
	.output_valid(),
	.sof(o_sof),
	.o_sof(),
	.d_in(d_in[63]),
	.d_out(_63_addbus_[63])
);
sum_64 #(15) sum_63( 
        .clk(clk), 
        .rst(rst), 
        .input_valid(output_valid_affter_conv), 
        .data_out(d_out[63]), 
        .data_in_0(_63_addbus_[0]), 
        .data_in_1(_63_addbus_[1]), 
        .data_in_2(_63_addbus_[2]), 
        .data_in_3(_63_addbus_[3]), 
        .data_in_4(_63_addbus_[4]), 
        .data_in_5(_63_addbus_[5]), 
        .data_in_6(_63_addbus_[6]), 
        .data_in_7(_63_addbus_[7]), 
        .data_in_8(_63_addbus_[8]), 
        .data_in_9(_63_addbus_[9]), 
        .data_in_10(_63_addbus_[10]), 
        .data_in_11(_63_addbus_[11]), 
        .data_in_12(_63_addbus_[12]), 
        .data_in_13(_63_addbus_[13]), 
        .data_in_14(_63_addbus_[14]), 
        .data_in_15(_63_addbus_[15]), 
        .data_in_16(_63_addbus_[16]), 
        .data_in_17(_63_addbus_[17]), 
        .data_in_18(_63_addbus_[18]), 
        .data_in_19(_63_addbus_[19]), 
        .data_in_20(_63_addbus_[20]), 
        .data_in_21(_63_addbus_[21]), 
        .data_in_22(_63_addbus_[22]), 
        .data_in_23(_63_addbus_[23]), 
        .data_in_24(_63_addbus_[24]), 
        .data_in_25(_63_addbus_[25]), 
        .data_in_26(_63_addbus_[26]), 
        .data_in_27(_63_addbus_[27]), 
        .data_in_28(_63_addbus_[28]), 
        .data_in_29(_63_addbus_[29]), 
        .data_in_30(_63_addbus_[30]), 
        .data_in_31(_63_addbus_[31]), 
        .data_in_32(_63_addbus_[32]), 
        .data_in_33(_63_addbus_[33]), 
        .data_in_34(_63_addbus_[34]), 
        .data_in_35(_63_addbus_[35]), 
        .data_in_36(_63_addbus_[36]), 
        .data_in_37(_63_addbus_[37]), 
        .data_in_38(_63_addbus_[38]), 
        .data_in_39(_63_addbus_[39]), 
        .data_in_40(_63_addbus_[40]), 
        .data_in_41(_63_addbus_[41]), 
        .data_in_42(_63_addbus_[42]), 
        .data_in_43(_63_addbus_[43]), 
        .data_in_44(_63_addbus_[44]), 
        .data_in_45(_63_addbus_[45]), 
        .data_in_46(_63_addbus_[46]), 
        .data_in_47(_63_addbus_[47]), 
        .data_in_48(_63_addbus_[48]), 
        .data_in_49(_63_addbus_[49]), 
        .data_in_50(_63_addbus_[50]), 
        .data_in_51(_63_addbus_[51]), 
        .data_in_52(_63_addbus_[52]), 
        .data_in_53(_63_addbus_[53]), 
        .data_in_54(_63_addbus_[54]), 
        .data_in_55(_63_addbus_[55]), 
        .data_in_56(_63_addbus_[56]), 
        .data_in_57(_63_addbus_[57]), 
        .data_in_58(_63_addbus_[58]), 
        .data_in_59(_63_addbus_[59]), 
        .data_in_60(_63_addbus_[60]), 
        .data_in_61(_63_addbus_[61]), 
        .data_in_62(_63_addbus_[62]), 
        .data_in_63(_63_addbus_[63]) 
); 
endmodule